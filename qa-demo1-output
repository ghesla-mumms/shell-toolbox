Script started on Thu Jan  6 09:56:41 2022

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
[?1034hg.hesla@mumms_ghesla [32m~/dev/shell [91m(main)[00m$ ./syncdb.sh
From: hb_demo1 on localhost:5432
To: hb_demo1a on localhost:5432
[36m[from][0m SELECT unnest(current_schemas(true)) AS schema
[36m[from][0m SELECT table_schema AS schema, table_name AS table FROM information_schema.tables WHERE table_type = 'BASE TABLE' AND table_schema NOT IN ('information_schema', 'pg_catalog') ORDER BY 1, 2
[36m[to][0m SELECT schema_name FROM information_schema.schemata ORDER BY 1
pg_dump: last built-in OID is 16383
pg_dump: reading extensions
pg_dump: identifying extension members
pg_dump: reading schemas
pg_dump: reading user-defined tables
pg_dump: reading user-defined functions
pg_dump: reading user-defined types
pg_dump: reading procedural languages
pg_dump: reading user-defined aggregate functions
pg_dump: reading user-defined operators
pg_dump: reading user-defined access methods
pg_dump: reading user-defined operator classes
pg_dump: reading user-defined operator families
pg_dump: reading user-defined text search parsers
pg_dump: reading user-defined text search templates
pg_dump: reading user-defined text search dictionaries
pg_dump: reading user-defined text search configurations
pg_dump: reading user-defined foreign-data wrappers
pg_dump: reading user-defined foreign servers
pg_dump: reading default privileges
pg_dump: reading user-defined collations
pg_dump: reading user-defined conversions
pg_dump: reading type casts
pg_dump: reading transforms
pg_dump: reading table inheritance information
pg_dump: reading event triggers
pg_dump: finding extension tables
pg_dump: finding inheritance relationships
pg_dump: reading column info for interesting tables
pg_dump: finding the columns and types of table "public.principal"
pg_dump: finding default expressions of table "public.principal"
pg_dump: finding the columns and types of table "public.insurancecarrier"
pg_dump: finding default expressions of table "public.insurancecarrier"
pg_dump: finding the columns and types of table "public.office"
pg_dump: finding default expressions of table "public.office"
pg_dump: finding the columns and types of table "public.hbrole"
pg_dump: finding default expressions of table "public.hbrole"
pg_dump: finding the columns and types of table "public.hospice"
pg_dump: finding default expressions of table "public.hospice"
pg_dump: finding the columns and types of table "public.person"
pg_dump: finding default expressions of table "public.person"
pg_dump: finding the columns and types of table "public.person_role"
pg_dump: finding default expressions of table "public.person_role"
pg_dump: finding the columns and types of table "public.person_smartformresponse"
pg_dump: finding the columns and types of table "public.rolegroup"
pg_dump: finding default expressions of table "public.rolegroup"
pg_dump: finding the columns and types of table "public.smartformanswer"
pg_dump: finding default expressions of table "public.smartformanswer"
pg_dump: finding the columns and types of table "public.smartformquestion"
pg_dump: finding default expressions of table "public.smartformquestion"
pg_dump: finding the columns and types of table "public.smartformresponse"
pg_dump: finding default expressions of table "public.smartformresponse"
pg_dump: finding the columns and types of table "public.policy"
pg_dump: finding default expressions of table "public.policy"
pg_dump: finding the columns and types of table "public.phone"
pg_dump: finding default expressions of table "public.phone"
pg_dump: finding the columns and types of table "public.phone_person"
pg_dump: finding the columns and types of table "public.facesheet_phonetypes"
pg_dump: finding default expressions of table "public.facesheet_phonetypes"
pg_dump: finding the columns and types of table "public.patientroleassignment"
pg_dump: finding default expressions of table "public.patientroleassignment"
pg_dump: finding the columns and types of table "public.address"
pg_dump: finding default expressions of table "public.address"
pg_dump: finding the columns and types of table "public.patientpersonrelation"
pg_dump: finding default expressions of table "public.patientpersonrelation"
pg_dump: finding the columns and types of table "public.patientpersonrelation_types"
pg_dump: finding the columns and types of table "public.coverage"
pg_dump: finding default expressions of table "public.coverage"
pg_dump: finding the columns and types of table "public.coverageset"
pg_dump: finding default expressions of table "public.coverageset"
pg_dump: finding the columns and types of table "public.allergy"
pg_dump: finding default expressions of table "public.allergy"
pg_dump: finding the columns and types of table "public.church"
pg_dump: finding default expressions of table "public.church"
pg_dump: finding the columns and types of table "public.dischargereason"
pg_dump: finding default expressions of table "public.dischargereason"
pg_dump: finding the columns and types of table "public.electiondefinition"
pg_dump: finding default expressions of table "public.electiondefinition"
pg_dump: finding the columns and types of table "public.electionperiod"
pg_dump: finding default expressions of table "public.electionperiod"
pg_dump: finding the columns and types of table "public.facility"
pg_dump: finding default expressions of table "public.facility"
pg_dump: finding the columns and types of table "public.language"
pg_dump: finding default expressions of table "public.language"
pg_dump: finding the columns and types of table "public.patient"
pg_dump: finding default expressions of table "public.patient"
pg_dump: finding the columns and types of table "public.patientreferral"
pg_dump: finding default expressions of table "public.patientreferral"
pg_dump: finding the columns and types of table "public.program"
pg_dump: finding default expressions of table "public.program"
pg_dump: finding the columns and types of table "public.programsite"
pg_dump: finding default expressions of table "public.programsite"
pg_dump: finding the columns and types of table "public.referralrejectionreason"
pg_dump: finding default expressions of table "public.referralrejectionreason"
pg_dump: finding the columns and types of table "public.referralsourcetype"
pg_dump: finding default expressions of table "public.referralsourcetype"
pg_dump: finding the columns and types of table "public.religion"
pg_dump: finding default expressions of table "public.religion"
pg_dump: finding the columns and types of table "public.phone_facility"
pg_dump: finding the columns and types of table "public.phone_patient"
pg_dump: finding the columns and types of table "public.patientphysician"
pg_dump: finding default expressions of table "public.patientphysician"
pg_dump: finding the columns and types of table "public.patientinteraction"
pg_dump: finding default expressions of table "public.patientinteraction"
pg_dump: finding the columns and types of table "public.patientstatus"
pg_dump: finding default expressions of table "public.patientstatus"
pg_dump: finding the columns and types of table "public.teampersonlist"
pg_dump: finding default expressions of table "public.teampersonlist"
pg_dump: finding the columns and types of table "public.facilitytype"
pg_dump: finding default expressions of table "public.facilitytype"
pg_dump: finding the columns and types of table "public.patientfacility"
pg_dump: finding default expressions of table "public.patientfacility"
pg_dump: finding the columns and types of table "public.dischargecode"
pg_dump: finding default expressions of table "public.dischargecode"
pg_dump: finding the columns and types of table "public.teamsiteassignment"
pg_dump: finding default expressions of table "public.teamsiteassignment"
pg_dump: finding the columns and types of table "public.eligibility"
pg_dump: finding default expressions of table "public.eligibility"
pg_dump: finding the columns and types of table "public.acl"
pg_dump: finding default expressions of table "public.acl"
pg_dump: finding the columns and types of table "public.acl_aud"
pg_dump: finding the columns and types of table "public.patientdiagnoses"
pg_dump: finding default expressions of table "public.patientdiagnoses"
pg_dump: finding the columns and types of table "public.address_aud"
pg_dump: finding the columns and types of table "public.adjustmentreason"
pg_dump: finding default expressions of table "public.adjustmentreason"
pg_dump: finding the columns and types of table "public.adjustmentreason_aud"
pg_dump: finding default expressions of table "public.adjustmentreason_aud"
pg_dump: finding the columns and types of table "public.adminlink_roles"
pg_dump: finding the columns and types of table "public.adminlink_roles_aud"
pg_dump: finding the columns and types of table "public.patientlevelofcare"
pg_dump: finding default expressions of table "public.patientlevelofcare"
pg_dump: finding the columns and types of table "public.person_programsite"
pg_dump: finding the columns and types of table "public.person_site"
pg_dump: finding the columns and types of table "public.allergy_aud"
pg_dump: finding the columns and types of table "public.backup_before_dx_redesign_patientdiagnoses"
pg_dump: finding the columns and types of table "public.claim"
pg_dump: finding default expressions of table "public.claim"
pg_dump: finding the columns and types of table "public.claim_claimbatch"
pg_dump: finding the columns and types of table "public.claimtransaction"
pg_dump: finding default expressions of table "public.claimtransaction"
pg_dump: finding the columns and types of table "public.batchmedication"
pg_dump: finding default expressions of table "public.batchmedication"
pg_dump: finding the columns and types of table "public.batchmedication_aud"
pg_dump: finding the columns and types of table "public.batchpatientmedication"
pg_dump: finding default expressions of table "public.batchpatientmedication"
pg_dump: finding the columns and types of table "public.batchpatientmedication_aud"
pg_dump: finding default expressions of table "public.batchpatientmedication_aud"
pg_dump: finding the columns and types of table "public.claimbatch"
pg_dump: finding default expressions of table "public.claimbatch"
pg_dump: finding the columns and types of table "public.bereavementcontact"
pg_dump: finding default expressions of table "public.bereavementcontact"
pg_dump: finding the columns and types of table "public.bereavementcontact_aud"
pg_dump: finding default expressions of table "public.bereavementcontact_aud"
pg_dump: finding the columns and types of table "public.bereavementsettings"
pg_dump: finding default expressions of table "public.bereavementsettings"
pg_dump: finding the columns and types of table "public.bereavementsettings_aud"
pg_dump: finding default expressions of table "public.bereavementsettings_aud"
pg_dump: finding the columns and types of table "public.bereavementspecialoccasion"
pg_dump: finding default expressions of table "public.bereavementspecialoccasion"
pg_dump: finding the columns and types of table "public.bereavementspecialoccasion_aud"
pg_dump: finding default expressions of table "public.bereavementspecialoccasion_aud"
pg_dump: finding the columns and types of table "public.roomboardgroup"
pg_dump: finding default expressions of table "public.roomboardgroup"
pg_dump: finding the columns and types of table "public.roomboardtier"
pg_dump: finding default expressions of table "public.roomboardtier"
pg_dump: finding the columns and types of table "public.billingfollowup"
pg_dump: finding default expressions of table "public.billingfollowup"
pg_dump: finding the columns and types of table "public.billingfollowup_aud"
pg_dump: finding the columns and types of table "public.billlog"
pg_dump: finding default expressions of table "public.billlog"
pg_dump: finding the columns and types of table "public.billlog_aud"
pg_dump: finding the columns and types of table "public.booksclosedhistory"
pg_dump: finding default expressions of table "public.booksclosedhistory"
pg_dump: finding the columns and types of table "public.booksclosedhistory_aud"
pg_dump: finding default expressions of table "public.booksclosedhistory_aud"
pg_dump: finding the columns and types of table "public.certification"
pg_dump: finding default expressions of table "public.certification"
pg_dump: finding the columns and types of table "public.certification_aud"
pg_dump: finding default expressions of table "public.certification_aud"
pg_dump: finding the columns and types of table "public.certification_patientinteraction"
pg_dump: finding default expressions of table "public.certification_patientinteraction"
pg_dump: finding the columns and types of table "public.certification_patientinteraction_aud"
pg_dump: finding the columns and types of table "public.certificationnarrative"
pg_dump: finding default expressions of table "public.certificationnarrative"
pg_dump: finding the columns and types of table "public.certificationnarrative_aud"
pg_dump: finding default expressions of table "public.certificationnarrative_aud"
pg_dump: finding the columns and types of table "public.church_aud"
pg_dump: finding the columns and types of table "public.church_pas_records"
pg_dump: finding the columns and types of table "public.church_pas_records_aud"
pg_dump: finding the columns and types of table "public.claim_aud"
pg_dump: finding default expressions of table "public.claim_aud"
pg_dump: finding the columns and types of table "public.claim_claimbatch_aud"
pg_dump: finding the columns and types of table "public.claim_claimrevenuedetail_aud"
pg_dump: finding the columns and types of table "public.claim_claimtransaction_aud"
pg_dump: finding the columns and types of table "public.claim_claimtransactiondetail_aud"
pg_dump: finding the columns and types of table "public.claim_log"
pg_dump: finding default expressions of table "public.claim_log"
pg_dump: finding the columns and types of table "public.claim_prebill"
pg_dump: finding default expressions of table "public.claim_prebill"
pg_dump: finding the columns and types of table "public.claimcmsstatus"
pg_dump: finding default expressions of table "public.claimcmsstatus"
pg_dump: finding the columns and types of table "public.claimstatusdata"
pg_dump: finding the columns and types of table "public.claimbatch_aud"
pg_dump: finding the columns and types of table "public.claimbatch_gen"
pg_dump: finding default expressions of table "public.claimbatch_gen"
pg_dump: finding the columns and types of table "public.claimchanges"
pg_dump: finding default expressions of table "public.claimchanges"
pg_dump: finding the columns and types of table "public.claimchanges_aud"
pg_dump: finding default expressions of table "public.claimchanges_aud"
pg_dump: finding the columns and types of table "public.claimcmsstatus_aud"
pg_dump: finding the columns and types of table "public.claimmedication"
pg_dump: finding default expressions of table "public.claimmedication"
pg_dump: finding the columns and types of table "public.claimmedication_aud"
pg_dump: finding default expressions of table "public.claimmedication_aud"
pg_dump: finding the columns and types of table "public.claimpatientvisit"
pg_dump: finding default expressions of table "public.claimpatientvisit"
pg_dump: finding the columns and types of table "public.claimpatientvisit_aud"
pg_dump: finding default expressions of table "public.claimpatientvisit_aud"
pg_dump: finding the columns and types of table "public.claimrequestlog"
pg_dump: finding default expressions of table "public.claimrequestlog"
pg_dump: finding the columns and types of table "public.claimrequestlog_aud"
pg_dump: finding default expressions of table "public.claimrequestlog_aud"
pg_dump: finding the columns and types of table "public.claimrevenuedetail"
pg_dump: finding default expressions of table "public.claimrevenuedetail"
pg_dump: finding the columns and types of table "public.claimrevenuedetail_aud"
pg_dump: finding default expressions of table "public.claimrevenuedetail_aud"
pg_dump: finding the columns and types of table "public.claimstatusdata_aud"
pg_dump: finding the columns and types of table "public.claimstatushistory"
pg_dump: finding default expressions of table "public.claimstatushistory"
pg_dump: finding the columns and types of table "public.claimstatushistory_aud"
pg_dump: finding default expressions of table "public.claimstatushistory_aud"
pg_dump: finding the columns and types of table "public.claimstatusinquirylog"
pg_dump: finding default expressions of table "public.claimstatusinquirylog"
pg_dump: finding the columns and types of table "public.claimstatusinquirylog_aud"
pg_dump: finding the columns and types of table "public.claimtransaction_aud"
pg_dump: finding default expressions of table "public.claimtransaction_aud"
pg_dump: finding the columns and types of table "public.claimtransaction_claimtransactiondetail_aud"
pg_dump: finding the columns and types of table "public.claimtransactiondetail"
pg_dump: finding default expressions of table "public.claimtransactiondetail"
pg_dump: finding the columns and types of table "public.claimtransactiondetail_aud"
pg_dump: finding default expressions of table "public.claimtransactiondetail_aud"
pg_dump: finding the columns and types of table "public.clinical_data"
pg_dump: finding default expressions of table "public.clinical_data"
pg_dump: finding the columns and types of table "public.contract"
pg_dump: finding default expressions of table "public.contract"
pg_dump: finding the columns and types of table "public.contract_aud"
pg_dump: finding the columns and types of table "public.coverage_aud"
pg_dump: finding default expressions of table "public.coverage_aud"
pg_dump: finding the columns and types of table "public.coverageset_aud"
pg_dump: finding default expressions of table "public.coverageset_aud"
pg_dump: finding the columns and types of table "public.dancefloorpanel"
pg_dump: finding default expressions of table "public.dancefloorpanel"
pg_dump: finding the columns and types of table "public.dancefloorpanel_aud"
pg_dump: finding the columns and types of table "public.databasechangelog"
pg_dump: finding the columns and types of table "public.databasechangeloglock"
pg_dump: finding the columns and types of table "public.datafix_log"
pg_dump: finding the columns and types of table "public.dischargeclaimnotrclaim"
pg_dump: finding default expressions of table "public.dischargeclaimnotrclaim"
pg_dump: finding the columns and types of table "public.dischargeclaimnotrclaim_aud"
pg_dump: finding default expressions of table "public.dischargeclaimnotrclaim_aud"
pg_dump: finding the columns and types of table "public.dischargecode_aud"
pg_dump: finding the columns and types of table "public.dischargecode_program"
pg_dump: finding the columns and types of table "public.dischargecode_program_aud"
pg_dump: finding the columns and types of table "public.dischargedaybillingrule"
pg_dump: finding default expressions of table "public.dischargedaybillingrule"
pg_dump: finding the columns and types of table "public.dischargedaybillingrule_aud"
pg_dump: finding the columns and types of table "public.dischargereason_aud"
pg_dump: finding the columns and types of table "public.dischargereason_program"
pg_dump: finding the columns and types of table "public.dischargereason_program_aud"
pg_dump: finding the columns and types of table "public.displayfield"
pg_dump: finding default expressions of table "public.displayfield"
pg_dump: finding the columns and types of table "public.displayfield_aud"
pg_dump: finding the columns and types of table "public.displayviewfields"
pg_dump: finding default expressions of table "public.displayviewfields"
pg_dump: finding the columns and types of table "public.displayviewfields_aud"
pg_dump: finding the columns and types of table "public.displayviewfields_displayfield"
pg_dump: finding the columns and types of table "public.displayviewfields_displayfield_aud"
pg_dump: finding the columns and types of table "public.downloadxml"
pg_dump: finding the columns and types of table "public.electiondefinition_aud"
pg_dump: finding default expressions of table "public.electiondefinition_aud"
pg_dump: finding the columns and types of table "public.electionperiod_aud"
pg_dump: finding the columns and types of table "public.eligibility_aud"
pg_dump: finding default expressions of table "public.eligibility_aud"
pg_dump: finding the columns and types of table "public.eligibility_smartformresponse"
pg_dump: finding the columns and types of table "public.eligibility_smartformresponse_aud"
pg_dump: finding the columns and types of table "public.email_list_person"
pg_dump: finding the columns and types of table "public.email_list_person_aud"
pg_dump: finding the columns and types of table "public.emaillisttype"
pg_dump: finding default expressions of table "public.emaillisttype"
pg_dump: finding the columns and types of table "public.emaillisttype_aud"
pg_dump: finding the columns and types of table "public.episode_exception"
pg_dump: finding the columns and types of table "public.externallink"
pg_dump: finding default expressions of table "public.externallink"
pg_dump: finding the columns and types of table "public.facesheet_phonetypes_aud"
pg_dump: finding default expressions of table "public.facesheet_phonetypes_aud"
pg_dump: finding the columns and types of table "public.facility_aud"
pg_dump: finding the columns and types of table "public.facility_facilitytypes"
pg_dump: finding the columns and types of table "public.facility_facilitytypes_aud"
pg_dump: finding the columns and types of table "public.facility_offices"
pg_dump: finding the columns and types of table "public.facility_offices_aud"
pg_dump: finding the columns and types of table "public.facility_smartformresponse"
pg_dump: finding the columns and types of table "public.facility_smartformresponse_aud"
pg_dump: finding the columns and types of table "public.facilitytype_aud"
pg_dump: finding the columns and types of table "public.facilitytype_loc"
pg_dump: finding the columns and types of table "public.facilitytype_loc_aud"
pg_dump: finding the columns and types of table "public.favprocedurecode"
pg_dump: finding default expressions of table "public.favprocedurecode"
pg_dump: finding the columns and types of table "public.favprocedurecode_aud"
pg_dump: finding the columns and types of table "public.filescheduler"
pg_dump: finding default expressions of table "public.filescheduler"
pg_dump: finding the columns and types of table "public.fileuploadlog"
pg_dump: finding default expressions of table "public.fileuploadlog"
pg_dump: finding the columns and types of table "public.fileuploadlog_aud"
pg_dump: finding the columns and types of table "public.finalclaimcancelclaim"
pg_dump: finding default expressions of table "public.finalclaimcancelclaim"
pg_dump: finding the columns and types of table "public.finalclaimcancelclaim_aud"
pg_dump: finding default expressions of table "public.finalclaimcancelclaim_aud"
pg_dump: finding the columns and types of table "public.griefrisk"
pg_dump: finding default expressions of table "public.griefrisk"
pg_dump: finding the columns and types of table "public.griefrisk_aud"
pg_dump: finding default expressions of table "public.griefrisk_aud"
pg_dump: finding the columns and types of table "public.hbrole_aud"
pg_dump: finding default expressions of table "public.hbrole_aud"
pg_dump: finding the columns and types of table "public.hbuniquenumber"
pg_dump: finding default expressions of table "public.hbuniquenumber"
pg_dump: finding the columns and types of table "public.hospice_acl"
pg_dump: finding the columns and types of table "public.hospice_acl_aud"
pg_dump: finding the columns and types of table "public.hospice_aud"
pg_dump: finding default expressions of table "public.hospice_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_aud"
pg_dump: finding default expressions of table "public.insurancecarrier_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_dischargedaybillingrule_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_insurancecarrierrates_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_insurancecarrierrevcode_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_insurancecarriersitecredentials_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_insurancecarriertob_aud"
pg_dump: finding the columns and types of table "public.insurancecarrier_site_financialcredentials"
pg_dump: finding default expressions of table "public.insurancecarrier_site_financialcredentials"
pg_dump: finding the columns and types of table "public.insurancecarrier_site_financialcredentials_aud"
pg_dump: finding default expressions of table "public.insurancecarrier_site_financialcredentials_aud"
pg_dump: finding the columns and types of table "public.insurancecarrierrate"
pg_dump: finding default expressions of table "public.insurancecarrierrate"
pg_dump: finding the columns and types of table "public.insurancecarrierrate_aud"
pg_dump: finding the columns and types of table "public.insurancecarrierrates"
pg_dump: finding default expressions of table "public.insurancecarrierrates"
pg_dump: finding the columns and types of table "public.insurancecarrierrates_aud"
pg_dump: finding the columns and types of table "public.insurancecarrierrates_insurancecarrierrate_aud"
pg_dump: finding the columns and types of table "public.insurancecarrierrevcode"
pg_dump: finding default expressions of table "public.insurancecarrierrevcode"
pg_dump: finding the columns and types of table "public.insurancecarrierrevcode_aud"
pg_dump: finding default expressions of table "public.insurancecarrierrevcode_aud"
pg_dump: finding the columns and types of table "public.insurancecarriertob"
pg_dump: finding default expressions of table "public.insurancecarriertob"
pg_dump: finding the columns and types of table "public.insurancecarriertob_aud"
pg_dump: finding default expressions of table "public.insurancecarriertob_aud"
pg_dump: finding the columns and types of table "public.insurancecoverage"
pg_dump: finding default expressions of table "public.insurancecoverage"
pg_dump: finding the columns and types of table "public.insurancecoverage_aud"
pg_dump: finding the columns and types of table "public.labeltemplate"
pg_dump: finding default expressions of table "public.labeltemplate"
pg_dump: finding the columns and types of table "public.labeltemplate_aud"
pg_dump: finding default expressions of table "public.labeltemplate_aud"
pg_dump: finding the columns and types of table "public.language_aud"
pg_dump: finding the columns and types of table "public.lettertemplate"
pg_dump: finding default expressions of table "public.lettertemplate"
pg_dump: finding the columns and types of table "public.lettertemplate_aud"
pg_dump: finding default expressions of table "public.lettertemplate_aud"
pg_dump: finding the columns and types of table "public.locationconfig"
pg_dump: finding default expressions of table "public.locationconfig"
pg_dump: finding the columns and types of table "public.medicareintermediary"
pg_dump: finding default expressions of table "public.medicareintermediary"
pg_dump: finding the columns and types of table "public.medicareintermediaryinfo"
pg_dump: finding default expressions of table "public.medicareintermediaryinfo"
pg_dump: finding the columns and types of table "public.medicareintermediary_aud"
pg_dump: finding the columns and types of table "public.medicareintermediaryinfo_aud"
pg_dump: finding default expressions of table "public.medicareintermediaryinfo_aud"
pg_dump: finding the columns and types of table "public.medsandprescriptions"
pg_dump: finding default expressions of table "public.medsandprescriptions"
pg_dump: finding the columns and types of table "public.medsandprescriptions_aud"
pg_dump: finding default expressions of table "public.medsandprescriptions_aud"
pg_dump: finding the columns and types of table "public.messageattribute"
pg_dump: finding default expressions of table "public.messageattribute"
pg_dump: finding the columns and types of table "public.messageattribute_aud"
pg_dump: finding default expressions of table "public.messageattribute_aud"
pg_dump: finding the columns and types of table "public.messagetemplate"
pg_dump: finding default expressions of table "public.messagetemplate"
pg_dump: finding the columns and types of table "public.messagetemplate_aud"
pg_dump: finding default expressions of table "public.messagetemplate_aud"
pg_dump: finding the columns and types of table "public.newranks_tmp"
pg_dump: finding the columns and types of table "public.newsitem"
pg_dump: finding the columns and types of table "public.newsitem_aud"
pg_dump: finding the columns and types of table "public.noa"
pg_dump: finding default expressions of table "public.noa"
pg_dump: finding the columns and types of table "public.noa_aud"
pg_dump: finding default expressions of table "public.noa_aud"
pg_dump: finding the columns and types of table "public.notificationtype"
pg_dump: finding default expressions of table "public.notificationtype"
pg_dump: finding the columns and types of table "public.notificationtype_aud"
pg_dump: finding the columns and types of table "public.notr"
pg_dump: finding default expressions of table "public.notr"
pg_dump: finding the columns and types of table "public.notr_aud"
pg_dump: finding default expressions of table "public.notr_aud"
pg_dump: finding the columns and types of table "public.npiadminlog"
pg_dump: finding default expressions of table "public.npiadminlog"
pg_dump: finding the columns and types of table "public.npiadminlog_aud"
pg_dump: finding the columns and types of table "public.office_aud"
pg_dump: finding default expressions of table "public.office_aud"
pg_dump: finding the columns and types of table "public.openedvisit"
pg_dump: finding default expressions of table "public.openedvisit"
pg_dump: finding the columns and types of table "public.openedvisit_aud"
pg_dump: finding default expressions of table "public.openedvisit_aud"
pg_dump: finding the columns and types of table "public.pasrecord"
pg_dump: finding default expressions of table "public.pasrecord"
pg_dump: finding the columns and types of table "public.passwordverification"
pg_dump: finding the columns and types of table "public.passwordverification_aud"
pg_dump: finding the columns and types of table "public.patientvisit"
pg_dump: finding default expressions of table "public.patientvisit"
pg_dump: finding the columns and types of table "public.patient_allergy_aud"
pg_dump: finding the columns and types of table "public.patient_aud"
pg_dump: finding default expressions of table "public.patient_aud"
pg_dump: finding the columns and types of table "public.patient_diagnosis_aud"
pg_dump: finding the columns and types of table "public.patient_patientmedication_aud"
pg_dump: finding the columns and types of table "public.patientbillingnote"
pg_dump: finding default expressions of table "public.patientbillingnote"
pg_dump: finding the columns and types of table "public.patientbillingnote_aud"
pg_dump: finding default expressions of table "public.patientbillingnote_aud"
pg_dump: finding the columns and types of table "public.patientdiagnoses_aud"
pg_dump: finding default expressions of table "public.patientdiagnoses_aud"
pg_dump: finding the columns and types of table "public.patientfacility_aud"
pg_dump: finding the columns and types of table "public.patientinsurance"
pg_dump: finding default expressions of table "public.patientinsurance"
pg_dump: finding the columns and types of table "public.patientinsurance_aud"
pg_dump: finding the columns and types of table "public.patientintakenote"
pg_dump: finding default expressions of table "public.patientintakenote"
pg_dump: finding the columns and types of table "public.patientintakenote_aud"
pg_dump: finding default expressions of table "public.patientintakenote_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_patientdiagnoses_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_patientfacility_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_patientlevelofcare_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_patientstatus_aud"
pg_dump: finding the columns and types of table "public.patientinteraction_patientvisit_aud"
pg_dump: finding the columns and types of table "public.patientlevelofcare_aud"
pg_dump: finding the columns and types of table "public.patientmedication"
pg_dump: finding default expressions of table "public.patientmedication"
pg_dump: finding the columns and types of table "public.patientmedication_aud"
pg_dump: finding the columns and types of table "public.patientoffice"
pg_dump: finding default expressions of table "public.patientoffice"
pg_dump: finding the columns and types of table "public.patientoffice_aud"
pg_dump: finding the columns and types of table "public.patientpersonrelation_aud"
pg_dump: finding default expressions of table "public.patientpersonrelation_aud"
pg_dump: finding the columns and types of table "public.patientpersonrelation_types_aud"
pg_dump: finding the columns and types of table "public.patientphysician_aud"
pg_dump: finding the columns and types of table "public.patientreferral_aud"
pg_dump: finding the columns and types of table "public.patientroleassignment_aud"
pg_dump: finding default expressions of table "public.patientroleassignment_aud"
pg_dump: finding the columns and types of table "public.patientstatus_aud"
pg_dump: finding the columns and types of table "public.patientteam"
pg_dump: finding default expressions of table "public.patientteam"
pg_dump: finding the columns and types of table "public.patientteam_aud"
pg_dump: finding the columns and types of table "public.patientvisit_aud"
pg_dump: finding default expressions of table "public.patientvisit_aud"
pg_dump: finding the columns and types of table "public.person_aud"
pg_dump: finding the columns and types of table "public.person_dde_credentials"
pg_dump: finding default expressions of table "public.person_dde_credentials"
pg_dump: finding the columns and types of table "public.person_dde_credentials_aud"
pg_dump: finding default expressions of table "public.person_dde_credentials_aud"
pg_dump: finding the columns and types of table "public.person_hospice"
pg_dump: finding the columns and types of table "public.person_hospice_aud"
pg_dump: finding the columns and types of table "public.person_office"
pg_dump: finding the columns and types of table "public.person_office_aud"
pg_dump: finding default expressions of table "public.person_office_aud"
pg_dump: finding the columns and types of table "public.person_programsite_aud"
pg_dump: finding the columns and types of table "public.person_region"
pg_dump: finding the columns and types of table "public.person_region_aud"
pg_dump: finding the columns and types of table "public.person_removeblanksback"
pg_dump: finding the columns and types of table "public.person_role_aud"
pg_dump: finding the columns and types of table "public.person_site_aud"
pg_dump: finding default expressions of table "public.person_site_aud"
pg_dump: finding the columns and types of table "public.person_smartformresponse_aud"
pg_dump: finding the columns and types of table "public.pharmacybenefitmanager"
pg_dump: finding default expressions of table "public.pharmacybenefitmanager"
pg_dump: finding the columns and types of table "public.pharmacybenefitmanager_aud"
pg_dump: finding default expressions of table "public.pharmacybenefitmanager_aud"
pg_dump: finding the columns and types of table "public.phone_aud"
pg_dump: finding the columns and types of table "public.phone_church"
pg_dump: finding the columns and types of table "public.phone_church_aud"
pg_dump: finding the columns and types of table "public.phone_facility_aud"
pg_dump: finding the columns and types of table "public.phone_hospice"
pg_dump: finding the columns and types of table "public.phone_hospice_aud"
pg_dump: finding the columns and types of table "public.phone_insurancecarrier"
pg_dump: finding the columns and types of table "public.phone_insurancecarrier_aud"
pg_dump: finding the columns and types of table "public.phone_office"
pg_dump: finding the columns and types of table "public.phone_office_aud"
pg_dump: finding the columns and types of table "public.phone_patient_aud"
pg_dump: finding the columns and types of table "public.phone_person_aud"
pg_dump: finding the columns and types of table "public.phraselibrary"
pg_dump: finding default expressions of table "public.phraselibrary"
pg_dump: finding the columns and types of table "public.phraselibrary_aud"
pg_dump: finding the columns and types of table "public.physicianservice"
pg_dump: finding default expressions of table "public.physicianservice"
pg_dump: finding the columns and types of table "public.physicianservice_aud"
pg_dump: finding the columns and types of table "public.physicianservicediagnoses"
pg_dump: finding default expressions of table "public.physicianservicediagnoses"
pg_dump: finding the columns and types of table "public.physicianservicediagnoses_aud"
pg_dump: finding default expressions of table "public.physicianservicediagnoses_aud"
pg_dump: finding the columns and types of table "public.policy_aud"
pg_dump: finding default expressions of table "public.policy_aud"
pg_dump: finding the columns and types of table "public.policy_mbi"
pg_dump: finding the columns and types of table "public.principal_aud"
pg_dump: finding the columns and types of table "public.priorauthorization"
pg_dump: finding default expressions of table "public.priorauthorization"
pg_dump: finding the columns and types of table "public.priorauthorization_aud"
pg_dump: finding the columns and types of table "public.procedurecode_program"
pg_dump: finding the columns and types of table "public.procedurecode_program_aud"
pg_dump: finding the columns and types of table "public.program_aud"
pg_dump: finding the columns and types of table "public.programsite_aud"
pg_dump: finding the columns and types of table "public.rate"
pg_dump: finding default expressions of table "public.rate"
pg_dump: finding the columns and types of table "public.rate_aud"
pg_dump: finding the columns and types of table "public.refdbref"
pg_dump: finding default expressions of table "public.refdbref"
pg_dump: finding the columns and types of table "public.referralrejectionreason_aud"
pg_dump: finding the columns and types of table "public.referralsourcetype_aud"
pg_dump: finding the columns and types of table "public.region"
pg_dump: finding default expressions of table "public.region"
pg_dump: finding the columns and types of table "public.region_aud"
pg_dump: finding the columns and types of table "public.religion_aud"
pg_dump: finding the columns and types of table "public.remit"
pg_dump: finding default expressions of table "public.remit"
pg_dump: finding the columns and types of table "public.remit_aud"
pg_dump: finding the columns and types of table "public.remitcheck"
pg_dump: finding default expressions of table "public.remitcheck"
pg_dump: finding the columns and types of table "public.remitcheck_aud"
pg_dump: finding default expressions of table "public.remitcheck_aud"
pg_dump: finding the columns and types of table "public.remitdetail"
pg_dump: finding default expressions of table "public.remitdetail"
pg_dump: finding the columns and types of table "public.remitdetail_aud"
pg_dump: finding the columns and types of table "public.remitfile"
pg_dump: finding default expressions of table "public.remitfile"
pg_dump: finding the columns and types of table "public.remitfile_aud"
pg_dump: finding default expressions of table "public.remitfile_aud"
pg_dump: finding the columns and types of table "public.remitfile_remitcheck_aud"
pg_dump: finding the columns and types of table "public.resource"
pg_dump: finding default expressions of table "public.resource"
pg_dump: finding the columns and types of table "public.resource_aud"
pg_dump: finding the columns and types of table "public.revinfo"
pg_dump: finding the columns and types of table "public.role_rolerate_aud"
pg_dump: finding the columns and types of table "public.rolegroup_aud"
pg_dump: finding default expressions of table "public.rolegroup_aud"
pg_dump: finding the columns and types of table "public.rolerate"
pg_dump: finding default expressions of table "public.rolerate"
pg_dump: finding the columns and types of table "public.rolerate_aud"
pg_dump: finding the columns and types of table "public.roomboardgroup_aud"
pg_dump: finding the columns and types of table "public.roomboardgroup_tiers"
pg_dump: finding the columns and types of table "public.roomboardgroup_tiers_aud"
pg_dump: finding the columns and types of table "public.roomboardtier_aud"
pg_dump: finding the columns and types of table "public.scenariotype"
pg_dump: finding default expressions of table "public.scenariotype"
pg_dump: finding the columns and types of table "public.selec"
pg_dump: finding the columns and types of table "public.seqhclaimlog"
pg_dump: finding default expressions of table "public.seqhclaimlog"
pg_dump: finding the columns and types of table "public.seqhclaimlog_aud"
pg_dump: finding default expressions of table "public.seqhclaimlog_aud"
pg_dump: finding the columns and types of table "public.sitenotification"
pg_dump: finding default expressions of table "public.sitenotification"
pg_dump: finding the columns and types of table "public.sitenotification_aud"
pg_dump: finding the columns and types of table "public.sitenotification_email"
pg_dump: finding the columns and types of table "public.sitenotification_email_aud"
pg_dump: finding the columns and types of table "public.sitepayertype"
pg_dump: finding default expressions of table "public.sitepayertype"
pg_dump: finding the columns and types of table "public.sitepayertype_aud"
pg_dump: finding default expressions of table "public.sitepayertype_aud"
pg_dump: finding the columns and types of table "public.siteroleassignment"
pg_dump: finding default expressions of table "public.siteroleassignment"
pg_dump: finding the columns and types of table "public.siteroleassignment_aud"
pg_dump: finding the columns and types of table "public.siterolelist"
pg_dump: finding default expressions of table "public.siterolelist"
pg_dump: finding the columns and types of table "public.siterolelist_aud"
pg_dump: finding the columns and types of table "public.smartformanswer_aud"
pg_dump: finding the columns and types of table "public.smartformexpression"
pg_dump: finding default expressions of table "public.smartformexpression"
pg_dump: finding the columns and types of table "public.smartformexpression_aud"
pg_dump: finding default expressions of table "public.smartformexpression_aud"
pg_dump: finding the columns and types of table "public.smartformquestion_aud"
pg_dump: finding the columns and types of table "public.smartformresponse_aud"
pg_dump: finding the columns and types of table "public.tabconfig"
pg_dump: finding default expressions of table "public.tabconfig"
pg_dump: finding the columns and types of table "public.tabcontext"
pg_dump: finding default expressions of table "public.tabcontext"
pg_dump: finding the columns and types of table "public.teamofficeassignment"
pg_dump: finding default expressions of table "public.teamofficeassignment"
pg_dump: finding the columns and types of table "public.teamofficeassignment_aud"
pg_dump: finding the columns and types of table "public.teampersonassignment"
pg_dump: finding default expressions of table "public.teampersonassignment"
pg_dump: finding the columns and types of table "public.teampersonassignment_aud"
pg_dump: finding the columns and types of table "public.teampersonlist_aud"
pg_dump: finding the columns and types of table "public.teamregionassignment"
pg_dump: finding default expressions of table "public.teamregionassignment"
pg_dump: finding the columns and types of table "public.teamregionassignment_aud"
pg_dump: finding the columns and types of table "public.teamsiteassignment_aud"
pg_dump: finding the columns and types of table "public.temp_certification"
pg_dump: finding the columns and types of table "public.temp_patientdiagnoses_v1"
pg_dump: finding default expressions of table "public.temp_patientdiagnoses_v1"
pg_dump: finding the columns and types of table "public.thirdpartyrolemap"
pg_dump: finding default expressions of table "public.thirdpartyrolemap"
pg_dump: finding the columns and types of table "public.thirdpartyrolemap_aud"
pg_dump: finding default expressions of table "public.thirdpartyrolemap_aud"
pg_dump: finding the columns and types of table "public.tier_rates"
pg_dump: finding the columns and types of table "public.tier_rates_aud"
pg_dump: finding the columns and types of table "public.userpreference"
pg_dump: finding default expressions of table "public.userpreference"
pg_dump: finding the columns and types of table "public.userpreference_aud"
pg_dump: finding default expressions of table "public.userpreference_aud"
pg_dump: finding the columns and types of table "public.visittrip"
pg_dump: finding default expressions of table "public.visittrip"
pg_dump: finding the columns and types of table "public.wagecache"
pg_dump: finding default expressions of table "public.wagecache"
pg_dump: finding the columns and types of table "public.wagecache_aud"
pg_dump: finding default expressions of table "public.wagecache_aud"
pg_dump: flagging inherited columns in subtables
pg_dump: reading indexes
pg_dump: reading indexes for table "public.principal"
pg_dump: reading indexes for table "public.insurancecarrier"
pg_dump: reading indexes for table "public.office"
pg_dump: reading indexes for table "public.hbrole"
pg_dump: reading indexes for table "public.hospice"
pg_dump: reading indexes for table "public.person"
pg_dump: reading indexes for table "public.person_role"
pg_dump: reading indexes for table "public.person_smartformresponse"
pg_dump: reading indexes for table "public.rolegroup"
pg_dump: reading indexes for table "public.smartformanswer"
pg_dump: reading indexes for table "public.smartformquestion"
pg_dump: reading indexes for table "public.smartformresponse"
pg_dump: reading indexes for table "public.policy"
pg_dump: reading indexes for table "public.phone"
pg_dump: reading indexes for table "public.phone_person"
pg_dump: reading indexes for table "public.facesheet_phonetypes"
pg_dump: reading indexes for table "public.patientroleassignment"
pg_dump: reading indexes for table "public.address"
pg_dump: reading indexes for table "public.patientpersonrelation"
pg_dump: reading indexes for table "public.patientpersonrelation_types"
pg_dump: reading indexes for table "public.coverage"
pg_dump: reading indexes for table "public.coverageset"
pg_dump: reading indexes for table "public.allergy"
pg_dump: reading indexes for table "public.church"
pg_dump: reading indexes for table "public.dischargereason"
pg_dump: reading indexes for table "public.electiondefinition"
pg_dump: reading indexes for table "public.electionperiod"
pg_dump: reading indexes for table "public.facility"
pg_dump: reading indexes for table "public.language"
pg_dump: reading indexes for table "public.patient"
pg_dump: reading indexes for table "public.patientreferral"
pg_dump: reading indexes for table "public.program"
pg_dump: reading indexes for table "public.programsite"
pg_dump: reading indexes for table "public.referralrejectionreason"
pg_dump: reading indexes for table "public.referralsourcetype"
pg_dump: reading indexes for table "public.religion"
pg_dump: reading indexes for table "public.phone_facility"
pg_dump: reading indexes for table "public.phone_patient"
pg_dump: reading indexes for table "public.patientphysician"
pg_dump: reading indexes for table "public.patientinteraction"
pg_dump: reading indexes for table "public.patientstatus"
pg_dump: reading indexes for table "public.teampersonlist"
pg_dump: reading indexes for table "public.facilitytype"
pg_dump: reading indexes for table "public.patientfacility"
pg_dump: reading indexes for table "public.dischargecode"
pg_dump: reading indexes for table "public.teamsiteassignment"
pg_dump: reading indexes for table "public.eligibility"
pg_dump: reading indexes for table "public.acl"
pg_dump: reading indexes for table "public.patientdiagnoses"
pg_dump: reading indexes for table "public.address_aud"
pg_dump: reading indexes for table "public.adjustmentreason"
pg_dump: reading indexes for table "public.adjustmentreason_aud"
pg_dump: reading indexes for table "public.patientlevelofcare"
pg_dump: reading indexes for table "public.person_programsite"
pg_dump: reading indexes for table "public.person_site"
pg_dump: reading indexes for table "public.allergy_aud"
pg_dump: reading indexes for table "public.claim"
pg_dump: reading indexes for table "public.claim_claimbatch"
pg_dump: reading indexes for table "public.claimtransaction"
pg_dump: reading indexes for table "public.batchmedication"
pg_dump: reading indexes for table "public.batchmedication_aud"
pg_dump: reading indexes for table "public.batchpatientmedication"
pg_dump: reading indexes for table "public.batchpatientmedication_aud"
pg_dump: reading indexes for table "public.claimbatch"
pg_dump: reading indexes for table "public.bereavementcontact"
pg_dump: reading indexes for table "public.bereavementcontact_aud"
pg_dump: reading indexes for table "public.bereavementsettings"
pg_dump: reading indexes for table "public.bereavementsettings_aud"
pg_dump: reading indexes for table "public.bereavementspecialoccasion"
pg_dump: reading indexes for table "public.bereavementspecialoccasion_aud"
pg_dump: reading indexes for table "public.roomboardgroup"
pg_dump: reading indexes for table "public.roomboardtier"
pg_dump: reading indexes for table "public.billingfollowup"
pg_dump: reading indexes for table "public.billingfollowup_aud"
pg_dump: reading indexes for table "public.billlog"
pg_dump: reading indexes for table "public.billlog_aud"
pg_dump: reading indexes for table "public.booksclosedhistory"
pg_dump: reading indexes for table "public.certification"
pg_dump: reading indexes for table "public.certification_aud"
pg_dump: reading indexes for table "public.certification_patientinteraction"
pg_dump: reading indexes for table "public.certification_patientinteraction_aud"
pg_dump: reading indexes for table "public.certificationnarrative"
pg_dump: reading indexes for table "public.church_aud"
pg_dump: reading indexes for table "public.church_pas_records_aud"
pg_dump: reading indexes for table "public.claim_aud"
pg_dump: reading indexes for table "public.claim_claimrevenuedetail_aud"
pg_dump: reading indexes for table "public.claim_claimtransaction_aud"
pg_dump: reading indexes for table "public.claim_claimtransactiondetail_aud"
pg_dump: reading indexes for table "public.claim_log"
pg_dump: reading indexes for table "public.claim_prebill"
pg_dump: reading indexes for table "public.claimcmsstatus"
pg_dump: reading indexes for table "public.claimstatusdata"
pg_dump: reading indexes for table "public.claimbatch_aud"
pg_dump: reading indexes for table "public.claimbatch_gen"
pg_dump: reading indexes for table "public.claimchanges"
pg_dump: reading indexes for table "public.claimmedication"
pg_dump: reading indexes for table "public.claimmedication_aud"
pg_dump: reading indexes for table "public.claimpatientvisit"
pg_dump: reading indexes for table "public.claimpatientvisit_aud"
pg_dump: reading indexes for table "public.claimrequestlog"
pg_dump: reading indexes for table "public.claimrevenuedetail"
pg_dump: reading indexes for table "public.claimrevenuedetail_aud"
pg_dump: reading indexes for table "public.claimstatushistory"
pg_dump: reading indexes for table "public.claimstatusinquirylog"
pg_dump: reading indexes for table "public.claimstatusinquirylog_aud"
pg_dump: reading indexes for table "public.claimtransaction_aud"
pg_dump: reading indexes for table "public.claimtransaction_claimtransactiondetail_aud"
pg_dump: reading indexes for table "public.claimtransactiondetail"
pg_dump: reading indexes for table "public.claimtransactiondetail_aud"
pg_dump: reading indexes for table "public.clinical_data"
pg_dump: reading indexes for table "public.contract"
pg_dump: reading indexes for table "public.contract_aud"
pg_dump: reading indexes for table "public.dancefloorpanel"
pg_dump: reading indexes for table "public.dancefloorpanel_aud"
pg_dump: reading indexes for table "public.databasechangeloglock"
pg_dump: reading indexes for table "public.datafix_log"
pg_dump: reading indexes for table "public.dischargeclaimnotrclaim"
pg_dump: reading indexes for table "public.dischargecode_aud"
pg_dump: reading indexes for table "public.dischargecode_program"
pg_dump: reading indexes for table "public.dischargecode_program_aud"
pg_dump: reading indexes for table "public.dischargedaybillingrule"
pg_dump: reading indexes for table "public.dischargedaybillingrule_aud"
pg_dump: reading indexes for table "public.dischargereason_aud"
pg_dump: reading indexes for table "public.dischargereason_program"
pg_dump: reading indexes for table "public.dischargereason_program_aud"
pg_dump: reading indexes for table "public.displayfield"
pg_dump: reading indexes for table "public.displayfield_aud"
pg_dump: reading indexes for table "public.displayviewfields"
pg_dump: reading indexes for table "public.displayviewfields_aud"
pg_dump: reading indexes for table "public.displayviewfields_displayfield_aud"
pg_dump: reading indexes for table "public.electiondefinition_aud"
pg_dump: reading indexes for table "public.eligibility_aud"
pg_dump: reading indexes for table "public.eligibility_smartformresponse"
pg_dump: reading indexes for table "public.eligibility_smartformresponse_aud"
pg_dump: reading indexes for table "public.email_list_person"
pg_dump: reading indexes for table "public.email_list_person_aud"
pg_dump: reading indexes for table "public.emaillisttype"
pg_dump: reading indexes for table "public.emaillisttype_aud"
pg_dump: reading indexes for table "public.externallink"
pg_dump: reading indexes for table "public.facility_aud"
pg_dump: reading indexes for table "public.facility_facilitytypes"
pg_dump: reading indexes for table "public.facility_facilitytypes_aud"
pg_dump: reading indexes for table "public.facility_offices"
pg_dump: reading indexes for table "public.facility_offices_aud"
pg_dump: reading indexes for table "public.facility_smartformresponse"
pg_dump: reading indexes for table "public.facility_smartformresponse_aud"
pg_dump: reading indexes for table "public.facilitytype_aud"
pg_dump: reading indexes for table "public.facilitytype_loc_aud"
pg_dump: reading indexes for table "public.favprocedurecode"
pg_dump: reading indexes for table "public.favprocedurecode_aud"
pg_dump: reading indexes for table "public.filescheduler"
pg_dump: reading indexes for table "public.fileuploadlog"
pg_dump: reading indexes for table "public.fileuploadlog_aud"
pg_dump: reading indexes for table "public.finalclaimcancelclaim"
pg_dump: reading indexes for table "public.griefrisk"
pg_dump: reading indexes for table "public.hbrole_aud"
pg_dump: reading indexes for table "public.hbuniquenumber"
pg_dump: reading indexes for table "public.hospice_acl_aud"
pg_dump: reading indexes for table "public.hospice_aud"
pg_dump: reading indexes for table "public.insurancecarrier_aud"
pg_dump: reading indexes for table "public.insurancecarrier_dischargedaybillingrule_aud"
pg_dump: reading indexes for table "public.insurancecarrier_insurancecarrierrates_aud"
pg_dump: reading indexes for table "public.insurancecarrier_insurancecarrierrevcode_aud"
pg_dump: reading indexes for table "public.insurancecarrier_insurancecarriersitecredentials_aud"
pg_dump: reading indexes for table "public.insurancecarrier_insurancecarriertob_aud"
pg_dump: reading indexes for table "public.insurancecarrier_site_financialcredentials"
pg_dump: reading indexes for table "public.insurancecarrier_site_financialcredentials_aud"
pg_dump: reading indexes for table "public.insurancecarrierrate"
pg_dump: reading indexes for table "public.insurancecarrierrate_aud"
pg_dump: reading indexes for table "public.insurancecarrierrates"
pg_dump: reading indexes for table "public.insurancecarrierrates_aud"
pg_dump: reading indexes for table "public.insurancecarrierrates_insurancecarrierrate_aud"
pg_dump: reading indexes for table "public.insurancecarrierrevcode"
pg_dump: reading indexes for table "public.insurancecarrierrevcode_aud"
pg_dump: reading indexes for table "public.insurancecarriertob"
pg_dump: reading indexes for table "public.insurancecarriertob_aud"
pg_dump: reading indexes for table "public.insurancecoverage"
pg_dump: reading indexes for table "public.insurancecoverage_aud"
pg_dump: reading indexes for table "public.labeltemplate"
pg_dump: reading indexes for table "public.labeltemplate_aud"
pg_dump: reading indexes for table "public.language_aud"
pg_dump: reading indexes for table "public.lettertemplate"
pg_dump: reading indexes for table "public.lettertemplate_aud"
pg_dump: reading indexes for table "public.locationconfig"
pg_dump: reading indexes for table "public.medicareintermediary"
pg_dump: reading indexes for table "public.medicareintermediaryinfo"
pg_dump: reading indexes for table "public.medsandprescriptions"
pg_dump: reading indexes for table "public.medsandprescriptions_aud"
pg_dump: reading indexes for table "public.messageattribute"
pg_dump: reading indexes for table "public.messageattribute_aud"
pg_dump: reading indexes for table "public.messagetemplate"
pg_dump: reading indexes for table "public.messagetemplate_aud"
pg_dump: reading indexes for table "public.newsitem_aud"
pg_dump: reading indexes for table "public.noa"
pg_dump: reading indexes for table "public.noa_aud"
pg_dump: reading indexes for table "public.notificationtype"
pg_dump: reading indexes for table "public.notificationtype_aud"
pg_dump: reading indexes for table "public.notr"
pg_dump: reading indexes for table "public.notr_aud"
pg_dump: reading indexes for table "public.npiadminlog"
pg_dump: reading indexes for table "public.npiadminlog_aud"
pg_dump: reading indexes for table "public.office_aud"
pg_dump: reading indexes for table "public.openedvisit"
pg_dump: reading indexes for table "public.pasrecord"
pg_dump: reading indexes for table "public.passwordverification"
pg_dump: reading indexes for table "public.patientvisit"
pg_dump: reading indexes for table "public.patient_allergy_aud"
pg_dump: reading indexes for table "public.patient_aud"
pg_dump: reading indexes for table "public.patient_diagnosis_aud"
pg_dump: reading indexes for table "public.patient_patientmedication_aud"
pg_dump: reading indexes for table "public.patientbillingnote"
pg_dump: reading indexes for table "public.patientdiagnoses_aud"
pg_dump: reading indexes for table "public.patientfacility_aud"
pg_dump: reading indexes for table "public.patientinsurance"
pg_dump: reading indexes for table "public.patientinsurance_aud"
pg_dump: reading indexes for table "public.patientintakenote"
pg_dump: reading indexes for table "public.patientinteraction_aud"
pg_dump: reading indexes for table "public.patientinteraction_patientdiagnoses_aud"
pg_dump: reading indexes for table "public.patientinteraction_patientfacility_aud"
pg_dump: reading indexes for table "public.patientinteraction_patientlevelofcare_aud"
pg_dump: reading indexes for table "public.patientinteraction_patientstatus_aud"
pg_dump: reading indexes for table "public.patientinteraction_patientvisit_aud"
pg_dump: reading indexes for table "public.patientlevelofcare_aud"
pg_dump: reading indexes for table "public.patientmedication"
pg_dump: reading indexes for table "public.patientmedication_aud"
pg_dump: reading indexes for table "public.patientoffice"
pg_dump: reading indexes for table "public.patientoffice_aud"
pg_dump: reading indexes for table "public.patientpersonrelation_aud"
pg_dump: reading indexes for table "public.patientpersonrelation_types_aud"
pg_dump: reading indexes for table "public.patientphysician_aud"
pg_dump: reading indexes for table "public.patientreferral_aud"
pg_dump: reading indexes for table "public.patientroleassignment_aud"
pg_dump: reading indexes for table "public.patientstatus_aud"
pg_dump: reading indexes for table "public.patientteam"
pg_dump: reading indexes for table "public.patientteam_aud"
pg_dump: reading indexes for table "public.patientvisit_aud"
pg_dump: reading indexes for table "public.person_aud"
pg_dump: reading indexes for table "public.person_dde_credentials"
pg_dump: reading indexes for table "public.person_dde_credentials_aud"
pg_dump: reading indexes for table "public.person_hospice"
pg_dump: reading indexes for table "public.person_hospice_aud"
pg_dump: reading indexes for table "public.person_office"
pg_dump: reading indexes for table "public.person_office_aud"
pg_dump: reading indexes for table "public.person_region"
pg_dump: reading indexes for table "public.person_region_aud"
pg_dump: reading indexes for table "public.person_role_aud"
pg_dump: reading indexes for table "public.person_site_aud"
pg_dump: reading indexes for table "public.person_smartformresponse_aud"
pg_dump: reading indexes for table "public.pharmacybenefitmanager"
pg_dump: reading indexes for table "public.pharmacybenefitmanager_aud"
pg_dump: reading indexes for table "public.phone_aud"
pg_dump: reading indexes for table "public.phone_facility_aud"
pg_dump: reading indexes for table "public.phone_hospice"
pg_dump: reading indexes for table "public.phone_hospice_aud"
pg_dump: reading indexes for table "public.phone_insurancecarrier"
pg_dump: reading indexes for table "public.phone_insurancecarrier_aud"
pg_dump: reading indexes for table "public.phone_office"
pg_dump: reading indexes for table "public.phone_office_aud"
pg_dump: reading indexes for table "public.phone_patient_aud"
pg_dump: reading indexes for table "public.phone_person_aud"
pg_dump: reading indexes for table "public.phraselibrary"
pg_dump: reading indexes for table "public.phraselibrary_aud"
pg_dump: reading indexes for table "public.physicianservice"
pg_dump: reading indexes for table "public.physicianservice_aud"
pg_dump: reading indexes for table "public.physicianservicediagnoses"
pg_dump: reading indexes for table "public.physicianservicediagnoses_aud"
pg_dump: reading indexes for table "public.priorauthorization"
pg_dump: reading indexes for table "public.priorauthorization_aud"
pg_dump: reading indexes for table "public.program_aud"
pg_dump: reading indexes for table "public.programsite_aud"
pg_dump: reading indexes for table "public.rate"
pg_dump: reading indexes for table "public.rate_aud"
pg_dump: reading indexes for table "public.refdbref"
pg_dump: reading indexes for table "public.referralrejectionreason_aud"
pg_dump: reading indexes for table "public.referralsourcetype_aud"
pg_dump: reading indexes for table "public.region"
pg_dump: reading indexes for table "public.region_aud"
pg_dump: reading indexes for table "public.religion_aud"
pg_dump: reading indexes for table "public.remit"
pg_dump: reading indexes for table "public.remitcheck"
pg_dump: reading indexes for table "public.remitdetail"
pg_dump: reading indexes for table "public.remitfile"
pg_dump: reading indexes for table "public.resource"
pg_dump: reading indexes for table "public.revinfo"
pg_dump: reading indexes for table "public.role_rolerate_aud"
pg_dump: reading indexes for table "public.rolegroup_aud"
pg_dump: reading indexes for table "public.rolerate"
pg_dump: reading indexes for table "public.rolerate_aud"
pg_dump: reading indexes for table "public.roomboardgroup_aud"
pg_dump: reading indexes for table "public.roomboardgroup_tiers"
pg_dump: reading indexes for table "public.roomboardgroup_tiers_aud"
pg_dump: reading indexes for table "public.roomboardtier_aud"
pg_dump: reading indexes for table "public.scenariotype"
pg_dump: reading indexes for table "public.seqhclaimlog"
pg_dump: reading indexes for table "public.sitenotification"
pg_dump: reading indexes for table "public.sitenotification_aud"
pg_dump: reading indexes for table "public.sitenotification_email_aud"
pg_dump: reading indexes for table "public.sitepayertype"
pg_dump: reading indexes for table "public.siteroleassignment"
pg_dump: reading indexes for table "public.siteroleassignment_aud"
pg_dump: reading indexes for table "public.siterolelist"
pg_dump: reading indexes for table "public.siterolelist_aud"
pg_dump: reading indexes for table "public.smartformanswer_aud"
pg_dump: reading indexes for table "public.smartformexpression"
pg_dump: reading indexes for table "public.smartformexpression_aud"
pg_dump: reading indexes for table "public.smartformquestion_aud"
pg_dump: reading indexes for table "public.smartformresponse_aud"
pg_dump: reading indexes for table "public.tabconfig"
pg_dump: reading indexes for table "public.tabcontext"
pg_dump: reading indexes for table "public.teamofficeassignment"
pg_dump: reading indexes for table "public.teamofficeassignment_aud"
pg_dump: reading indexes for table "public.teampersonassignment"
pg_dump: reading indexes for table "public.teampersonassignment_aud"
pg_dump: reading indexes for table "public.teampersonlist_aud"
pg_dump: reading indexes for table "public.teamregionassignment"
pg_dump: reading indexes for table "public.teamregionassignment_aud"
pg_dump: reading indexes for table "public.teamsiteassignment_aud"
pg_dump: reading indexes for table "public.thirdpartyrolemap"
pg_dump: reading indexes for table "public.tier_rates"
pg_dump: reading indexes for table "public.tier_rates_aud"
pg_dump: reading indexes for table "public.userpreference"
pg_dump: reading indexes for table "public.visittrip"
pg_dump: reading indexes for table "public.wagecache"
pg_dump: flagging indexes in partitioned tables
pg_dump: reading extended statistics
pg_dump: reading constraints
pg_dump: reading foreign key constraints for table "public.principal"
pg_dump: reading foreign key constraints for table "public.insurancecarrier"
pg_dump: reading foreign key constraints for table "public.office"
pg_dump: reading foreign key constraints for table "public.hbrole"
pg_dump: reading foreign key constraints for table "public.hospice"
pg_dump: reading foreign key constraints for table "public.person"
pg_dump: reading foreign key constraints for table "public.person_role"
pg_dump: reading foreign key constraints for table "public.person_smartformresponse"
pg_dump: reading foreign key constraints for table "public.rolegroup"
pg_dump: reading foreign key constraints for table "public.smartformanswer"
pg_dump: reading foreign key constraints for table "public.smartformquestion"
pg_dump: reading foreign key constraints for table "public.smartformresponse"
pg_dump: reading foreign key constraints for table "public.policy"
pg_dump: reading foreign key constraints for table "public.phone"
pg_dump: reading foreign key constraints for table "public.phone_person"
pg_dump: reading foreign key constraints for table "public.patientroleassignment"
pg_dump: reading foreign key constraints for table "public.address"
pg_dump: reading foreign key constraints for table "public.patientpersonrelation"
pg_dump: reading foreign key constraints for table "public.patientpersonrelation_types"
pg_dump: reading foreign key constraints for table "public.coverage"
pg_dump: reading foreign key constraints for table "public.coverageset"
pg_dump: reading foreign key constraints for table "public.allergy"
pg_dump: reading foreign key constraints for table "public.church"
pg_dump: reading foreign key constraints for table "public.dischargereason"
pg_dump: reading foreign key constraints for table "public.electiondefinition"
pg_dump: reading foreign key constraints for table "public.electionperiod"
pg_dump: reading foreign key constraints for table "public.facility"
pg_dump: reading foreign key constraints for table "public.language"
pg_dump: reading foreign key constraints for table "public.patient"
pg_dump: reading foreign key constraints for table "public.patientreferral"
pg_dump: reading foreign key constraints for table "public.program"
pg_dump: reading foreign key constraints for table "public.programsite"
pg_dump: reading foreign key constraints for table "public.referralrejectionreason"
pg_dump: reading foreign key constraints for table "public.referralsourcetype"
pg_dump: reading foreign key constraints for table "public.religion"
pg_dump: reading foreign key constraints for table "public.phone_facility"
pg_dump: reading foreign key constraints for table "public.phone_patient"
pg_dump: reading foreign key constraints for table "public.patientphysician"
pg_dump: reading foreign key constraints for table "public.patientinteraction"
pg_dump: reading foreign key constraints for table "public.patientstatus"
pg_dump: reading foreign key constraints for table "public.teampersonlist"
pg_dump: reading foreign key constraints for table "public.facilitytype"
pg_dump: reading foreign key constraints for table "public.patientfacility"
pg_dump: reading foreign key constraints for table "public.dischargecode"
pg_dump: reading foreign key constraints for table "public.teamsiteassignment"
pg_dump: reading foreign key constraints for table "public.eligibility"
pg_dump: reading foreign key constraints for table "public.acl"
pg_dump: reading foreign key constraints for table "public.acl_aud"
pg_dump: reading foreign key constraints for table "public.patientdiagnoses"
pg_dump: reading foreign key constraints for table "public.adjustmentreason"
pg_dump: reading foreign key constraints for table "public.patientlevelofcare"
pg_dump: reading foreign key constraints for table "public.person_programsite"
pg_dump: reading foreign key constraints for table "public.person_site"
pg_dump: reading foreign key constraints for table "public.claim"
pg_dump: reading foreign key constraints for table "public.claim_claimbatch"
pg_dump: reading foreign key constraints for table "public.claimtransaction"
pg_dump: reading foreign key constraints for table "public.batchmedication"
pg_dump: reading foreign key constraints for table "public.batchpatientmedication"
pg_dump: reading foreign key constraints for table "public.claimbatch"
pg_dump: reading foreign key constraints for table "public.bereavementcontact"
pg_dump: reading foreign key constraints for table "public.bereavementsettings"
pg_dump: reading foreign key constraints for table "public.bereavementspecialoccasion"
pg_dump: reading foreign key constraints for table "public.roomboardgroup"
pg_dump: reading foreign key constraints for table "public.roomboardtier"
pg_dump: reading foreign key constraints for table "public.billingfollowup"
pg_dump: reading foreign key constraints for table "public.billingfollowup_aud"
pg_dump: reading foreign key constraints for table "public.billlog"
pg_dump: reading foreign key constraints for table "public.billlog_aud"
pg_dump: reading foreign key constraints for table "public.certification"
pg_dump: reading foreign key constraints for table "public.certification_patientinteraction"
pg_dump: reading foreign key constraints for table "public.certification_patientinteraction_aud"
pg_dump: reading foreign key constraints for table "public.church_pas_records"
pg_dump: reading foreign key constraints for table "public.church_pas_records_aud"
pg_dump: reading foreign key constraints for table "public.claim_aud"
pg_dump: reading foreign key constraints for table "public.claimcmsstatus"
pg_dump: reading foreign key constraints for table "public.claimstatusdata"
pg_dump: reading foreign key constraints for table "public.claimmedication"
pg_dump: reading foreign key constraints for table "public.claimpatientvisit"
pg_dump: reading foreign key constraints for table "public.claimrequestlog"
pg_dump: reading foreign key constraints for table "public.claimrevenuedetail"
pg_dump: reading foreign key constraints for table "public.claimstatushistory"
pg_dump: reading foreign key constraints for table "public.claimtransaction_aud"
pg_dump: reading foreign key constraints for table "public.claimtransactiondetail"
pg_dump: reading foreign key constraints for table "public.clinical_data"
pg_dump: reading foreign key constraints for table "public.contract"
pg_dump: reading foreign key constraints for table "public.dancefloorpanel_aud"
pg_dump: reading foreign key constraints for table "public.dischargecode_program"
pg_dump: reading foreign key constraints for table "public.dischargedaybillingrule"
pg_dump: reading foreign key constraints for table "public.dischargereason_program"
pg_dump: reading foreign key constraints for table "public.displayfield"
pg_dump: reading foreign key constraints for table "public.displayviewfields"
pg_dump: reading foreign key constraints for table "public.displayviewfields_displayfield"
pg_dump: reading foreign key constraints for table "public.eligibility_smartformresponse"
pg_dump: reading foreign key constraints for table "public.email_list_person"
pg_dump: reading foreign key constraints for table "public.emaillisttype"
pg_dump: reading foreign key constraints for table "public.emaillisttype_aud"
pg_dump: reading foreign key constraints for table "public.externallink"
pg_dump: reading foreign key constraints for table "public.facility_facilitytypes"
pg_dump: reading foreign key constraints for table "public.facility_offices"
pg_dump: reading foreign key constraints for table "public.facility_smartformresponse"
pg_dump: reading foreign key constraints for table "public.facilitytype_loc"
pg_dump: reading foreign key constraints for table "public.facilitytype_loc_aud"
pg_dump: reading foreign key constraints for table "public.hospice_acl"
pg_dump: reading foreign key constraints for table "public.hospice_acl_aud"
pg_dump: reading foreign key constraints for table "public.insurancecarrier_site_financialcredentials"
pg_dump: reading foreign key constraints for table "public.insurancecarrierrate"
pg_dump: reading foreign key constraints for table "public.insurancecarrierrates"
pg_dump: reading foreign key constraints for table "public.insurancecarrierrevcode"
pg_dump: reading foreign key constraints for table "public.insurancecarriertob"
pg_dump: reading foreign key constraints for table "public.insurancecoverage"
pg_dump: reading foreign key constraints for table "public.insurancecoverage_aud"
pg_dump: reading foreign key constraints for table "public.labeltemplate"
pg_dump: reading foreign key constraints for table "public.lettertemplate"
pg_dump: reading foreign key constraints for table "public.medicareintermediary"
pg_dump: reading foreign key constraints for table "public.medicareintermediaryinfo"
pg_dump: reading foreign key constraints for table "public.medsandprescriptions"
pg_dump: reading foreign key constraints for table "public.medsandprescriptions_aud"
pg_dump: reading foreign key constraints for table "public.noa"
pg_dump: reading foreign key constraints for table "public.notificationtype"
pg_dump: reading foreign key constraints for table "public.notr"
pg_dump: reading foreign key constraints for table "public.notr_aud"
pg_dump: reading foreign key constraints for table "public.npiadminlog_aud"
pg_dump: reading foreign key constraints for table "public.office_aud"
pg_dump: reading foreign key constraints for table "public.pasrecord"
pg_dump: reading foreign key constraints for table "public.passwordverification"
pg_dump: reading foreign key constraints for table "public.patientvisit"
pg_dump: reading foreign key constraints for table "public.patient_aud"
pg_dump: reading foreign key constraints for table "public.patient_diagnosis_aud"
pg_dump: reading foreign key constraints for table "public.patientbillingnote"
pg_dump: reading foreign key constraints for table "public.patientinsurance"
pg_dump: reading foreign key constraints for table "public.patientinsurance_aud"
pg_dump: reading foreign key constraints for table "public.patientintakenote"
pg_dump: reading foreign key constraints for table "public.patientinteraction_aud"
pg_dump: reading foreign key constraints for table "public.patientinteraction_patientstatus_aud"
pg_dump: reading foreign key constraints for table "public.patientinteraction_patientvisit_aud"
pg_dump: reading foreign key constraints for table "public.patientmedication"
pg_dump: reading foreign key constraints for table "public.patientoffice"
pg_dump: reading foreign key constraints for table "public.patientteam"
pg_dump: reading foreign key constraints for table "public.patientvisit_aud"
pg_dump: reading foreign key constraints for table "public.person_dde_credentials"
pg_dump: reading foreign key constraints for table "public.person_hospice"
pg_dump: reading foreign key constraints for table "public.person_hospice_aud"
pg_dump: reading foreign key constraints for table "public.person_office"
pg_dump: reading foreign key constraints for table "public.person_region"
pg_dump: reading foreign key constraints for table "public.person_region_aud"
pg_dump: reading foreign key constraints for table "public.pharmacybenefitmanager"
pg_dump: reading foreign key constraints for table "public.pharmacybenefitmanager_aud"
pg_dump: reading foreign key constraints for table "public.phone_church"
pg_dump: reading foreign key constraints for table "public.phone_hospice"
pg_dump: reading foreign key constraints for table "public.phone_hospice_aud"
pg_dump: reading foreign key constraints for table "public.phone_insurancecarrier"
pg_dump: reading foreign key constraints for table "public.phone_office"
pg_dump: reading foreign key constraints for table "public.phraselibrary_aud"
pg_dump: reading foreign key constraints for table "public.physicianservice"
pg_dump: reading foreign key constraints for table "public.physicianservicediagnoses"
pg_dump: reading foreign key constraints for table "public.priorauthorization"
pg_dump: reading foreign key constraints for table "public.priorauthorization_aud"
pg_dump: reading foreign key constraints for table "public.rate"
pg_dump: reading foreign key constraints for table "public.rate_aud"
pg_dump: reading foreign key constraints for table "public.referralrejectionreason_aud"
pg_dump: reading foreign key constraints for table "public.region"
pg_dump: reading foreign key constraints for table "public.remit"
pg_dump: reading foreign key constraints for table "public.remitcheck"
pg_dump: reading foreign key constraints for table "public.remitdetail"
pg_dump: reading foreign key constraints for table "public.remitfile"
pg_dump: reading foreign key constraints for table "public.resource"
pg_dump: reading foreign key constraints for table "public.resource_aud"
pg_dump: reading foreign key constraints for table "public.revinfo"
pg_dump: reading foreign key constraints for table "public.rolerate"
pg_dump: reading foreign key constraints for table "public.roomboardgroup_aud"
pg_dump: reading foreign key constraints for table "public.roomboardgroup_tiers"
pg_dump: reading foreign key constraints for table "public.roomboardgroup_tiers_aud"
pg_dump: reading foreign key constraints for table "public.roomboardtier_aud"
pg_dump: reading foreign key constraints for table "public.scenariotype"
pg_dump: reading foreign key constraints for table "public.sitenotification"
pg_dump: reading foreign key constraints for table "public.sitenotification_email"
pg_dump: reading foreign key constraints for table "public.siteroleassignment"
pg_dump: reading foreign key constraints for table "public.siterolelist"
pg_dump: reading foreign key constraints for table "public.smartformanswer_aud"
pg_dump: reading foreign key constraints for table "public.smartformexpression"
pg_dump: reading foreign key constraints for table "public.smartformquestion_aud"
pg_dump: reading foreign key constraints for table "public.tabconfig"
pg_dump: reading foreign key constraints for table "public.teamofficeassignment"
pg_dump: reading foreign key constraints for table "public.teampersonassignment"
pg_dump: reading foreign key constraints for table "public.teamregionassignment"
pg_dump: reading foreign key constraints for table "public.teamregionassignment_aud"
pg_dump: reading foreign key constraints for table "public.thirdpartyrolemap"
pg_dump: reading foreign key constraints for table "public.thirdpartyrolemap_aud"
pg_dump: reading foreign key constraints for table "public.tier_rates"
pg_dump: reading foreign key constraints for table "public.tier_rates_aud"
pg_dump: reading foreign key constraints for table "public.userpreference"
pg_dump: reading triggers
pg_dump: reading triggers for table "public.principal"
pg_dump: reading triggers for table "public.insurancecarrier"
pg_dump: reading triggers for table "public.office"
pg_dump: reading triggers for table "public.hbrole"
pg_dump: reading triggers for table "public.hospice"
pg_dump: reading triggers for table "public.person"
pg_dump: reading triggers for table "public.person_role"
pg_dump: reading triggers for table "public.person_smartformresponse"
pg_dump: reading triggers for table "public.rolegroup"
pg_dump: reading triggers for table "public.smartformanswer"
pg_dump: reading triggers for table "public.smartformquestion"
pg_dump: reading triggers for table "public.smartformresponse"
pg_dump: reading triggers for table "public.policy"
pg_dump: reading triggers for table "public.phone"
pg_dump: reading triggers for table "public.phone_person"
pg_dump: reading triggers for table "public.patientroleassignment"
pg_dump: reading triggers for table "public.address"
pg_dump: reading triggers for table "public.patientpersonrelation"
pg_dump: reading triggers for table "public.patientpersonrelation_types"
pg_dump: reading triggers for table "public.coverage"
pg_dump: reading triggers for table "public.coverageset"
pg_dump: reading triggers for table "public.allergy"
pg_dump: reading triggers for table "public.church"
pg_dump: reading triggers for table "public.dischargereason"
pg_dump: reading triggers for table "public.electiondefinition"
pg_dump: reading triggers for table "public.electionperiod"
pg_dump: reading triggers for table "public.facility"
pg_dump: reading triggers for table "public.language"
pg_dump: reading triggers for table "public.patient"
pg_dump: reading triggers for table "public.patientreferral"
pg_dump: reading triggers for table "public.program"
pg_dump: reading triggers for table "public.programsite"
pg_dump: reading triggers for table "public.referralrejectionreason"
pg_dump: reading triggers for table "public.referralsourcetype"
pg_dump: reading triggers for table "public.religion"
pg_dump: reading triggers for table "public.phone_facility"
pg_dump: reading triggers for table "public.phone_patient"
pg_dump: reading triggers for table "public.patientphysician"
pg_dump: reading triggers for table "public.patientinteraction"
pg_dump: reading triggers for table "public.patientstatus"
pg_dump: reading triggers for table "public.teampersonlist"
pg_dump: reading triggers for table "public.facilitytype"
pg_dump: reading triggers for table "public.patientfacility"
pg_dump: reading triggers for table "public.dischargecode"
pg_dump: reading triggers for table "public.teamsiteassignment"
pg_dump: reading triggers for table "public.eligibility"
pg_dump: reading triggers for table "public.acl"
pg_dump: reading triggers for table "public.acl_aud"
pg_dump: reading triggers for table "public.patientdiagnoses"
pg_dump: reading triggers for table "public.adjustmentreason"
pg_dump: reading triggers for table "public.patientlevelofcare"
pg_dump: reading triggers for table "public.person_programsite"
pg_dump: reading triggers for table "public.person_site"
pg_dump: reading triggers for table "public.claim"
pg_dump: reading triggers for table "public.claim_claimbatch"
pg_dump: reading triggers for table "public.claimtransaction"
pg_dump: reading triggers for table "public.batchmedication"
pg_dump: reading triggers for table "public.batchpatientmedication"
pg_dump: reading triggers for table "public.claimbatch"
pg_dump: reading triggers for table "public.bereavementcontact"
pg_dump: reading triggers for table "public.bereavementsettings"
pg_dump: reading triggers for table "public.bereavementspecialoccasion"
pg_dump: reading triggers for table "public.roomboardgroup"
pg_dump: reading triggers for table "public.roomboardtier"
pg_dump: reading triggers for table "public.billingfollowup"
pg_dump: reading triggers for table "public.billingfollowup_aud"
pg_dump: reading triggers for table "public.billlog"
pg_dump: reading triggers for table "public.billlog_aud"
pg_dump: reading triggers for table "public.certification"
pg_dump: reading triggers for table "public.certification_patientinteraction"
pg_dump: reading triggers for table "public.certification_patientinteraction_aud"
pg_dump: reading triggers for table "public.church_pas_records"
pg_dump: reading triggers for table "public.church_pas_records_aud"
pg_dump: reading triggers for table "public.claim_aud"
pg_dump: reading triggers for table "public.claimcmsstatus"
pg_dump: reading triggers for table "public.claimstatusdata"
pg_dump: reading triggers for table "public.claimmedication"
pg_dump: reading triggers for table "public.claimpatientvisit"
pg_dump: reading triggers for table "public.claimrequestlog"
pg_dump: reading triggers for table "public.claimrevenuedetail"
pg_dump: reading triggers for table "public.claimstatushistory"
pg_dump: reading triggers for table "public.claimtransaction_aud"
pg_dump: reading triggers for table "public.claimtransactiondetail"
pg_dump: reading triggers for table "public.clinical_data"
pg_dump: reading triggers for table "public.contract"
pg_dump: reading triggers for table "public.dancefloorpanel_aud"
pg_dump: reading triggers for table "public.dischargecode_program"
pg_dump: reading triggers for table "public.dischargedaybillingrule"
pg_dump: reading triggers for table "public.dischargereason_program"
pg_dump: reading triggers for table "public.displayfield"
pg_dump: reading triggers for table "public.displayviewfields"
pg_dump: reading triggers for table "public.displayviewfields_displayfield"
pg_dump: reading triggers for table "public.eligibility_smartformresponse"
pg_dump: reading triggers for table "public.email_list_person"
pg_dump: reading triggers for table "public.emaillisttype"
pg_dump: reading triggers for table "public.emaillisttype_aud"
pg_dump: reading triggers for table "public.externallink"
pg_dump: reading triggers for table "public.facility_facilitytypes"
pg_dump: reading triggers for table "public.facility_offices"
pg_dump: reading triggers for table "public.facility_smartformresponse"
pg_dump: reading triggers for table "public.facilitytype_loc"
pg_dump: reading triggers for table "public.facilitytype_loc_aud"
pg_dump: reading triggers for table "public.hospice_acl"
pg_dump: reading triggers for table "public.hospice_acl_aud"
pg_dump: reading triggers for table "public.insurancecarrier_site_financialcredentials"
pg_dump: reading triggers for table "public.insurancecarrierrate"
pg_dump: reading triggers for table "public.insurancecarrierrates"
pg_dump: reading triggers for table "public.insurancecarrierrevcode"
pg_dump: reading triggers for table "public.insurancecarriertob"
pg_dump: reading triggers for table "public.insurancecoverage"
pg_dump: reading triggers for table "public.insurancecoverage_aud"
pg_dump: reading triggers for table "public.labeltemplate"
pg_dump: reading triggers for table "public.lettertemplate"
pg_dump: reading triggers for table "public.medicareintermediary"
pg_dump: reading triggers for table "public.medicareintermediaryinfo"
pg_dump: reading triggers for table "public.medsandprescriptions"
pg_dump: reading triggers for table "public.medsandprescriptions_aud"
pg_dump: reading triggers for table "public.noa"
pg_dump: reading triggers for table "public.notificationtype"
pg_dump: reading triggers for table "public.notr"
pg_dump: reading triggers for table "public.notr_aud"
pg_dump: reading triggers for table "public.npiadminlog_aud"
pg_dump: reading triggers for table "public.office_aud"
pg_dump: reading triggers for table "public.pasrecord"
pg_dump: reading triggers for table "public.passwordverification"
pg_dump: reading triggers for table "public.patientvisit"
pg_dump: reading triggers for table "public.patient_aud"
pg_dump: reading triggers for table "public.patient_diagnosis_aud"
pg_dump: reading triggers for table "public.patientbillingnote"
pg_dump: reading triggers for table "public.patientinsurance"
pg_dump: reading triggers for table "public.patientinsurance_aud"
pg_dump: reading triggers for table "public.patientintakenote"
pg_dump: reading triggers for table "public.patientinteraction_aud"
pg_dump: reading triggers for table "public.patientinteraction_patientstatus_aud"
pg_dump: reading triggers for table "public.patientinteraction_patientvisit_aud"
pg_dump: reading triggers for table "public.patientmedication"
pg_dump: reading triggers for table "public.patientoffice"
pg_dump: reading triggers for table "public.patientteam"
pg_dump: reading triggers for table "public.patientvisit_aud"
pg_dump: reading triggers for table "public.person_dde_credentials"
pg_dump: reading triggers for table "public.person_hospice"
pg_dump: reading triggers for table "public.person_hospice_aud"
pg_dump: reading triggers for table "public.person_office"
pg_dump: reading triggers for table "public.person_region"
pg_dump: reading triggers for table "public.person_region_aud"
pg_dump: reading triggers for table "public.pharmacybenefitmanager"
pg_dump: reading triggers for table "public.pharmacybenefitmanager_aud"
pg_dump: reading triggers for table "public.phone_church"
pg_dump: reading triggers for table "public.phone_hospice"
pg_dump: reading triggers for table "public.phone_hospice_aud"
pg_dump: reading triggers for table "public.phone_insurancecarrier"
pg_dump: reading triggers for table "public.phone_office"
pg_dump: reading triggers for table "public.phraselibrary_aud"
pg_dump: reading triggers for table "public.physicianservice"
pg_dump: reading triggers for table "public.physicianservicediagnoses"
pg_dump: reading triggers for table "public.priorauthorization"
pg_dump: reading triggers for table "public.priorauthorization_aud"
pg_dump: reading triggers for table "public.rate"
pg_dump: reading triggers for table "public.rate_aud"
pg_dump: reading triggers for table "public.referralrejectionreason_aud"
pg_dump: reading triggers for table "public.region"
pg_dump: reading triggers for table "public.remit"
pg_dump: reading triggers for table "public.remitcheck"
pg_dump: reading triggers for table "public.remitdetail"
pg_dump: reading triggers for table "public.remitfile"
pg_dump: reading triggers for table "public.resource"
pg_dump: reading triggers for table "public.resource_aud"
pg_dump: reading triggers for table "public.revinfo"
pg_dump: reading triggers for table "public.rolerate"
pg_dump: reading triggers for table "public.roomboardgroup_aud"
pg_dump: reading triggers for table "public.roomboardgroup_tiers"
pg_dump: reading triggers for table "public.roomboardgroup_tiers_aud"
pg_dump: reading triggers for table "public.roomboardtier_aud"
pg_dump: reading triggers for table "public.scenariotype"
pg_dump: reading triggers for table "public.sitenotification"
pg_dump: reading triggers for table "public.sitenotification_email"
pg_dump: reading triggers for table "public.siteroleassignment"
pg_dump: reading triggers for table "public.siterolelist"
pg_dump: reading triggers for table "public.smartformanswer_aud"
pg_dump: reading triggers for table "public.smartformexpression"
pg_dump: reading triggers for table "public.smartformquestion_aud"
pg_dump: reading triggers for table "public.tabconfig"
pg_dump: reading triggers for table "public.teamofficeassignment"
pg_dump: reading triggers for table "public.teampersonassignment"
pg_dump: reading triggers for table "public.teamregionassignment"
pg_dump: reading triggers for table "public.teamregionassignment_aud"
pg_dump: reading triggers for table "public.thirdpartyrolemap"
pg_dump: reading triggers for table "public.thirdpartyrolemap_aud"
pg_dump: reading triggers for table "public.tier_rates"
pg_dump: reading triggers for table "public.tier_rates_aud"
pg_dump: reading triggers for table "public.userpreference"
pg_dump: reading rewrite rules
pg_dump: reading policies
pg_dump: reading publications
pg_dump: reading publication membership
pg_dump: reading subscriptions
pg_dump: reading dependency data
pg_dump: saving encoding = UTF8
pg_dump: saving standard_conforming_strings = on
pg_dump: saving search_path = 
pg_dump: saving database definition
pg_restore: connecting to database for restore
pg_restore: while INITIALIZING:
pg_restore: error: could not execute query: ERROR:  unrecognized configuration parameter "idle_in_transaction_session_timeout"
Command was: SET idle_in_transaction_session_timeout = 0;
pg_restore: error: could not execute query: ERROR:  unrecognized configuration parameter "row_security"
Command was: SET row_security = off;
pg_restore: dropping FK CONSTRAINT userpreference userpreference_person_fk
pg_restore: dropping FK CONSTRAINT tabconfig tabconfig_rolegroup_fk
pg_restore: dropping FK CONSTRAINT smartformresponse smartformresponse_question_id_fkey
pg_restore: dropping FK CONSTRAINT smartformresponse smartformresponse_answer_id_fkey
pg_restore: dropping FK CONSTRAINT smartformquestion smartformquestion_referringrolegroup_id_fkey
pg_restore: dropping FK CONSTRAINT smartformquestion smartformquestion_parentanswer_id_fkey
pg_restore: dropping FK CONSTRAINT smartformanswer smartformanswer_question_id_fkey
pg_restore: dropping FK CONSTRAINT siteroleassignment siteroleassignment_role_id_fkey
pg_restore: dropping FK CONSTRAINT sitenotification_email sitenotification_email_sitenotification_id_fkey
pg_restore: dropping FK CONSTRAINT church site_id_fkey
pg_restore: dropping FK CONSTRAINT office sitePayerType_office_fk
pg_restore: dropping FK CONSTRAINT claim scenariotype_fk_key
pg_restore: dropping FK CONSTRAINT rolerate rolerate_role_id_fkey
pg_restore: dropping FK CONSTRAINT remitdetail remitdetail_remit_fkey
pg_restore: dropping FK CONSTRAINT programsite programsite_program_id_fkey
pg_restore: dropping FK CONSTRAINT priorauthorization priorauthorization_policy_fkey
pg_restore: dropping FK CONSTRAINT policy policy_patientpersonrelation_fkey
pg_restore: dropping FK CONSTRAINT policy policy_patient_fkey
pg_restore: dropping FK CONSTRAINT phone_church phone_id_fk
pg_restore: dropping FK CONSTRAINT phone_facility phone_facility_facility_id_fkey
pg_restore: dropping FK CONSTRAINT person_smartformresponse person_smartformresponse_smartformresponses_id_fkey
pg_restore: dropping FK CONSTRAINT person_role person_role_role_id_fkey
pg_restore: dropping FK CONSTRAINT person_programsite person_programsite_programsiteid_fk
pg_restore: dropping FK CONSTRAINT person_programsite person_programsite_personid_fk
pg_restore: dropping FK CONSTRAINT passwordverification person_fk
pg_restore: dropping FK CONSTRAINT patientstatus patientstatus_rejectionreason_id_fkey
pg_restore: dropping FK CONSTRAINT patientstatus patientstatus_program_id_fkey
pg_restore: dropping FK CONSTRAINT patientstatus patientstatus_dischargereason_id_fkey
pg_restore: dropping FK CONSTRAINT patientroleassignment patientroleassignment_role_id_fkey
pg_restore: dropping FK CONSTRAINT patientreferral patientreferral_referralsourcetype_id_fkey
pg_restore: dropping FK CONSTRAINT patientreferral patientreferral_facility_id_fkey
pg_restore: dropping FK CONSTRAINT patientmedication patientmedication_patient_id_fkey
pg_restore: dropping FK CONSTRAINT patientinteraction patientinteraction_role_id_fkey
pg_restore: dropping FK CONSTRAINT patientfacility patientfacility_policy_fkey
pg_restore: dropping FK CONSTRAINT patientfacility patientfacility_facility_id_fkey
pg_restore: dropping FK CONSTRAINT patientdiagnoses patientdiagnosis_fk
pg_restore: dropping FK CONSTRAINT patient patient_secondary_language_id_fkey
pg_restore: dropping FK CONSTRAINT patient patient_religion_id_fkey
pg_restore: dropping FK CONSTRAINT patient patient_language_id_fkey
pg_restore: dropping FK CONSTRAINT clinical_data patient_fk
pg_restore: dropping FK CONSTRAINT noa noa_policy_fkey
pg_restore: dropping FK CONSTRAINT medicareintermediaryinfo medicareintermediaryinfo_medicareintermediary_id_fkey
pg_restore: dropping FK CONSTRAINT eligibility_smartformresponse medicareeligibility_smartformrespons_smartformresponses_id_fkey
pg_restore: dropping FK CONSTRAINT insurancecoverage insurancecoverage_policy_fkey
pg_restore: dropping FK CONSTRAINT insurancecarrier insurancecarrier_hospice_election_def_id_fkey
pg_restore: dropping FK CONSTRAINT hospice_acl hospice_acl_hospice_fk
pg_restore: dropping FK CONSTRAINT hospice_acl_aud hospice_acl_aud_rev_fkey
pg_restore: dropping FK CONSTRAINT hospice_acl hospice_acl_acl_fk
pg_restore: dropping FK CONSTRAINT thirdpartyrolemap_aud hbrole_thirdpartyrolemap_fkey
pg_restore: dropping FK CONSTRAINT thirdpartyrolemap hbrole_thirdpartyrolemap_fkey
pg_restore: dropping FK CONSTRAINT hbrole hbrole_rolegroup_id_fkey
pg_restore: dropping FK CONSTRAINT displayviewfields fkfb3f0000d475355a
pg_restore: dropping FK CONSTRAINT patientinteraction fkf5aba1edf3bc649a
pg_restore: dropping FK CONSTRAINT patientinteraction fkf5aba1edd9bf889a
pg_restore: dropping FK CONSTRAINT rolerate fkf3f57a96d475355a
pg_restore: dropping FK CONSTRAINT lettertemplate fkey_lettertemplate_site
pg_restore: dropping FK CONSTRAINT labeltemplate fkey_labeltemplate_site
pg_restore: dropping FK CONSTRAINT bereavementsettings fkey_bereavementsetting_site
pg_restore: dropping FK CONSTRAINT bereavementsettings fkey_bereavementsetting_hospice
pg_restore: dropping FK CONSTRAINT adjustmentreason fkey_adjustmentreason_hospice
pg_restore: dropping FK CONSTRAINT siteroleassignment fkefa5e72a606ed71a
pg_restore: dropping FK CONSTRAINT patientinteraction_patientstatus_aud fkef4943b6df74e053
pg_restore: dropping FK CONSTRAINT patientfacility fkeb5aa0a89c7872bd
pg_restore: dropping FK CONSTRAINT patientfacility fkeb5aa0a8593b6c91
pg_restore: dropping FK CONSTRAINT patientlevelofcare fkea44e207593b6c91
pg_restore: dropping FK CONSTRAINT person_role fke6a16b20f3bc649a
pg_restore: dropping FK CONSTRAINT patientinsurance fke664b575852ff560
pg_restore: dropping FK CONSTRAINT patientinsurance fke664b5757693bdd2
pg_restore: dropping FK CONSTRAINT patientinsurance fke664b575593b6c91
pg_restore: dropping FK CONSTRAINT religion fke3393151d475355a
pg_restore: dropping FK CONSTRAINT person_region_aud fkde5cfdefdf74e053
pg_restore: dropping FK CONSTRAINT referralsourcetype fkd7e8d992d475355a
pg_restore: dropping FK CONSTRAINT batchpatientmedication fkd65d8f948bafcb8a
pg_restore: dropping FK CONSTRAINT patientvisit fkd527e166593b6c91
pg_restore: dropping FK CONSTRAINT insurancecarrier fkd468aded475355a
pg_restore: dropping FK CONSTRAINT insurancecarrier fkd468ade8f4e2e3a
pg_restore: dropping FK CONSTRAINT church_pas_records_aud fkcdac2c1edf74e053
pg_restore: dropping FK CONSTRAINT patientstatus fkcb48bf37593b6c91
pg_restore: dropping FK CONSTRAINT smartformanswer_aud fkcb0ff87cdf74e053
pg_restore: dropping FK CONSTRAINT person_smartformresponse fkc070a324f3bc649a
pg_restore: dropping FK CONSTRAINT patientphysician fkbe7a65c5f3bc649a
pg_restore: dropping FK CONSTRAINT patientphysician fkbe7a65c5d9bf889a
pg_restore: dropping FK CONSTRAINT dischargecode fkb9e5a5afd475355a
pg_restore: dropping FK CONSTRAINT hbrole fkb7128070d475355a
pg_restore: dropping FK CONSTRAINT siterolelist fkb49fdabbd475355a
pg_restore: dropping FK CONSTRAINT dischargedaybillingrule fkb226301df567a3da
pg_restore: dropping FK CONSTRAINT patientinteraction_patientvisit_aud fkb11b2449df74e053
pg_restore: dropping FK CONSTRAINT teamsiteassignment fkaf0f951ccbe7b58
pg_restore: dropping FK CONSTRAINT teamsiteassignment fkaf0f951711f475a
pg_restore: dropping FK CONSTRAINT phone_hospice_aud fkae206b27df74e053
pg_restore: dropping FK CONSTRAINT email_list_person fkac3eedd3f3bc649a
pg_restore: dropping FK CONSTRAINT teampersonassignment fka7fbf89ff3bc649a
pg_restore: dropping FK CONSTRAINT teampersonassignment fka7fbf89fccbe7b58
pg_restore: dropping FK CONSTRAINT hospice fka4b3a647b8c9c42e
pg_restore: dropping FK CONSTRAINT hospice fka4b3a6478f4e2e3a
pg_restore: dropping FK CONSTRAINT hospice fka4b3a6477089967e
pg_restore: dropping FK CONSTRAINT patientpersonrelation_types fka495e950b96e033a
pg_restore: dropping FK CONSTRAINT language fka3acf778d475355a
pg_restore: dropping FK CONSTRAINT dancefloorpanel_aud fka369ed9cdf74e053
pg_restore: dropping FK CONSTRAINT patientreferral fka26aada2d9bf889a
pg_restore: dropping FK CONSTRAINT patientreferral fka26aada22260bb39
pg_restore: dropping FK CONSTRAINT teamofficeassignment fka063c746ccbe7b58
pg_restore: dropping FK CONSTRAINT teamofficeassignment fka063c7463924573a
pg_restore: dropping FK CONSTRAINT patientreferral fk_teampersonlist_id
pg_restore: dropping FK CONSTRAINT patientteam fk_teampersonlist
pg_restore: dropping FK CONSTRAINT smartformquestion fk_smartformquestion_smartformexpression
pg_restore: dropping FK CONSTRAINT smartformexpression fk_smartformexpression2_smartformexpression
pg_restore: dropping FK CONSTRAINT smartformexpression fk_smartformexpression1_smartformexpression
pg_restore: dropping FK CONSTRAINT office fk_site_pbm_id
pg_restore: dropping FK CONSTRAINT office fk_site_medsandprescriptions_id
pg_restore: dropping FK CONSTRAINT sitenotification fk_site
pg_restore: dropping FK CONSTRAINT batchmedication fk_site
pg_restore: dropping FK CONSTRAINT claim fk_secondaryInsuranceCoverage_claim_coverage
pg_restore: dropping FK CONSTRAINT rolegroup fk_rolegroup_principal
pg_restore: dropping FK CONSTRAINT hbrole fk_role_principal
pg_restore: dropping FK CONSTRAINT resource_aud fk_resource_revinfo
pg_restore: dropping FK CONSTRAINT remitcheck fk_remitcheck_remitfile_id
pg_restore: dropping FK CONSTRAINT patientreferral fk_refphysician_id
pg_restore: dropping FK CONSTRAINT remit fk_programsite
pg_restore: dropping FK CONSTRAINT dischargereason_program fk_program_id_dischargereason_program
pg_restore: dropping FK CONSTRAINT dischargecode_program fk_program_id_dischargecode_program
pg_restore: dropping FK CONSTRAINT bereavementcontact fk_program_id_bereavementcontact
pg_restore: dropping FK CONSTRAINT physicianservicediagnoses fk_physicianservicediagnoses_physicianservice
pg_restore: dropping FK CONSTRAINT pharmacybenefitmanager_aud fk_pharmacybenefitmanager_revinfo
pg_restore: dropping FK CONSTRAINT person fk_person_principal
pg_restore: dropping FK CONSTRAINT person_dde_credentials fk_person_person_dde_credentials
pg_restore: dropping FK CONSTRAINT patientvisit fk_patientvisit_site
pg_restore: dropping FK CONSTRAINT patientstatus fk_patientstatus_programsite_id
pg_restore: dropping FK CONSTRAINT patientfacility fk_patientfacility_facilitytype
pg_restore: dropping FK CONSTRAINT batchpatientmedication fk_patient_medication
pg_restore: dropping FK CONSTRAINT patientbillingnote fk_patient
pg_restore: dropping FK CONSTRAINT patientintakenote fk_patient
pg_restore: dropping FK CONSTRAINT patientoffice fk_patient
pg_restore: dropping FK CONSTRAINT patientteam fk_patient
pg_restore: dropping FK CONSTRAINT externallink fk_parentexternallink
pg_restore: dropping FK CONSTRAINT office fk_office_medicareintermediaryinfo
pg_restore: dropping FK CONSTRAINT patientreferral fk_office_id
pg_restore: dropping FK CONSTRAINT patientoffice fk_office
pg_restore: dropping FK CONSTRAINT npiadminlog_aud fk_npiadminlog_revinfo
pg_restore: dropping FK CONSTRAINT notr_aud fk_notr_revinfo
pg_restore: dropping FK CONSTRAINT notr_aud fk_notr_claim
pg_restore: dropping FK CONSTRAINT notr fk_notr_claim
pg_restore: dropping FK CONSTRAINT sitenotification fk_notificationtype
pg_restore: dropping FK CONSTRAINT noa fk_noa_programsite_id
pg_restore: dropping FK CONSTRAINT noa fk_noa_claim
pg_restore: dropping FK CONSTRAINT medsandprescriptions_aud fk_medsandprescriptions_revinfo
pg_restore: dropping FK CONSTRAINT medicareintermediaryinfo fk_medicareintermediaryinfo_hospice
pg_restore: dropping FK CONSTRAINT person_dde_credentials fk_medicareintermediary_person_dde_credentials
pg_restore: dropping FK CONSTRAINT bereavementcontact fk_lettertemplate
pg_restore: dropping FK CONSTRAINT bereavementcontact fk_labeltemplate
pg_restore: dropping FK CONSTRAINT insurancecoverage fk_insurancecoverage_referral_id
pg_restore: dropping FK CONSTRAINT insurancecoverage fk_insurancecoverage_programsite_id
pg_restore: dropping FK CONSTRAINT patientfacility fk_insurancecoverage_id
pg_restore: dropping FK CONSTRAINT insurancecoverage fk_insurancecoverage_eligibility_id
pg_restore: dropping FK CONSTRAINT insurancecoverage fk_insurancecoverage_admission_id
pg_restore: dropping FK CONSTRAINT insurancecarriertob fk_insurancecarriertob_insurancecarrier
pg_restore: dropping FK CONSTRAINT insurancecarrierrevcode fk_insurancecarrierrevcode_insurancecarrier
pg_restore: dropping FK CONSTRAINT priorauthorization fk_insuranceCoverage_prior_auth
pg_restore: dropping FK CONSTRAINT claim fk_insuranceCoverage_claim_coverage
pg_restore: dropping FK CONSTRAINT certification fk_hosptaken_id
pg_restore: dropping FK CONSTRAINT certification fk_hospcerttaken_id
pg_restore: dropping FK CONSTRAINT patientfacility fk_group
pg_restore: dropping FK CONSTRAINT insurancecarrier_site_financialcredentials fk_financialcredentials_site
pg_restore: dropping FK CONSTRAINT insurancecarrier_site_financialcredentials fk_financialcredentials_insurancecarrier
pg_restore: dropping FK CONSTRAINT dischargereason_program fk_dischargereason_id_dischargereason_program
pg_restore: dropping FK CONSTRAINT dischargecode_program fk_dischargecode_id_dischargecode_program
pg_restore: dropping FK CONSTRAINT patient fk_current_patient_facility_id
pg_restore: dropping FK CONSTRAINT patientreferral fk_crm_id
pg_restore: dropping FK CONSTRAINT coverage fk_coverage_policy_id
pg_restore: dropping FK CONSTRAINT claimtransactiondetail fk_claimtransdetail_claimtransaction
pg_restore: dropping FK CONSTRAINT claimtransactiondetail fk_claimtransdetail_claimrevenue
pg_restore: dropping FK CONSTRAINT claimtransaction fk_claimtrans_remit_id
pg_restore: dropping FK CONSTRAINT claimtransaction fk_claimtrans_adjustreason
pg_restore: dropping FK CONSTRAINT claimstatushistory fk_claimstatushistory_claimbatch
pg_restore: dropping FK CONSTRAINT claimrevenuedetail fk_claimrev_claim
pg_restore: dropping FK CONSTRAINT claimpatientvisit fk_claimpatientvisit_claim
pg_restore: dropping FK CONSTRAINT claimmedication fk_claimmedication_claim
pg_restore: dropping FK CONSTRAINT claimtransaction_aud fk_claimdetail_revinfo
pg_restore: dropping FK CONSTRAINT claim_claimbatch fk_claimbatch
pg_restore: dropping FK CONSTRAINT claim_aud fk_claim_revinfo
pg_restore: dropping FK CONSTRAINT claim fk_claim_programsite
pg_restore: dropping FK CONSTRAINT claim fk_claim_patient_address
pg_restore: dropping FK CONSTRAINT claim fk_claim_patient
pg_restore: dropping FK CONSTRAINT claim fk_claim_claimbatch
pg_restore: dropping FK CONSTRAINT claim fk_claim_claim_id
pg_restore: dropping FK CONSTRAINT claim_claimbatch fk_claim
pg_restore: dropping FK CONSTRAINT remit fk_claim
pg_restore: dropping FK CONSTRAINT billlog fk_billlog_hospice_id
pg_restore: dropping FK CONSTRAINT bereavementcontact fk_bereavementspecialoccasion_id_bereavementcontact
pg_restore: dropping FK CONSTRAINT certification fk_attdtaken_id
pg_restore: dropping FK CONSTRAINT certification fk_attdcerttaken_id
pg_restore: dropping FK CONSTRAINT priorauthorization_aud fk_adjustmentreason_rev
pg_restore: dropping FK CONSTRAINT acl_aud fk_acl_revinfo
pg_restore: dropping FK CONSTRAINT acl fk_acl_principal
pg_restore: dropping FK CONSTRAINT programsite fk9fa537cb711f475a
pg_restore: dropping FK CONSTRAINT insurancecarrierrate fk9f50acde4df4cf23
pg_restore: dropping FK CONSTRAINT phone_patient fk927d34f4d9bf889a
pg_restore: dropping FK CONSTRAINT phone_patient fk927d34f43e0e43fa
pg_restore: dropping FK CONSTRAINT region fk91ad1314d475355a
pg_restore: dropping FK CONSTRAINT region fk91ad1314606ed71a
pg_restore: dropping FK CONSTRAINT phone_facility fk915e62743e0e43fa
pg_restore: dropping FK CONSTRAINT phone_insurancecarrier fk90ab31af3e0e43fa
pg_restore: dropping FK CONSTRAINT phone_insurancecarrier fk90ab31af24d0b803
pg_restore: dropping FK CONSTRAINT person fk8e488775d475355a
pg_restore: dropping FK CONSTRAINT person fk8e4887758f4e2e3a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adcd475355a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adcc8b4cc3a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adc8f4e2e3a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adc711f475a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adc7089967e
pg_restore: dropping FK CONSTRAINT office fk8c9c2adc606ed71a
pg_restore: dropping FK CONSTRAINT office fk8c9c2adc3161b2f5
pg_restore: dropping FK CONSTRAINT rolegroup fk8a267f89d475355a
pg_restore: dropping FK CONSTRAINT patient_aud fk82c2b636df74e053
pg_restore: dropping FK CONSTRAINT patientpersonrelation fk7f2daeb6f3bc649a
pg_restore: dropping FK CONSTRAINT patientpersonrelation fk7f2daeb6d9bf889a
pg_restore: dropping FK CONSTRAINT smartformquestion_aud fk7f1ed964df74e053
pg_restore: dropping FK CONSTRAINT physicianservice fk7e01c84ba2e6f2b
pg_restore: dropping FK CONSTRAINT tier_rates fk7cb92d6e9c6b637
pg_restore: dropping FK CONSTRAINT tier_rates fk7cb92d6afec008
pg_restore: dropping FK CONSTRAINT roomboardgroup_tiers_aud fk79008ff7df74e053
pg_restore: dropping FK CONSTRAINT church fk784525c7d475355a
pg_restore: dropping FK CONSTRAINT church fk784525c78f4e2e3a
pg_restore: dropping FK CONSTRAINT church fk784525c73e0e43fa
pg_restore: dropping FK CONSTRAINT insurancecoverage fk75130d06f567a3da
pg_restore: dropping FK CONSTRAINT insurancecoverage fk75130d06d9bf889a
pg_restore: dropping FK CONSTRAINT insurancecoverage fk75130d0655340fcd
pg_restore: dropping FK CONSTRAINT church_pas_records fk74ad2ccdec2f8197
pg_restore: dropping FK CONSTRAINT church_pas_records fk74ad2ccd48d218ff
pg_restore: dropping FK CONSTRAINT billingfollowup fk737db587d475355a
pg_restore: dropping FK CONSTRAINT billingfollowup fk737db5873e0e43fa
pg_restore: dropping FK CONSTRAINT patientroleassignment fk714b2228f3bc649a
pg_restore: dropping FK CONSTRAINT patientroleassignment fk714b2228d9bf889a
pg_restore: dropping FK CONSTRAINT displayviewfields_displayfield fk6e6d7f57fca51efa
pg_restore: dropping FK CONSTRAINT displayviewfields_displayfield fk6e6d7f57f4887c3c
pg_restore: dropping FK CONSTRAINT billlog_aud fk6c8e64eedf74e053
pg_restore: dropping FK CONSTRAINT facility_offices fk6be4d77b3924573a
pg_restore: dropping FK CONSTRAINT insurancecoverage_aud fk6b4547d7df74e053
pg_restore: dropping FK CONSTRAINT billingfollowup_aud fk6b35c7d8df74e053
pg_restore: dropping FK CONSTRAINT roomboardgroup_aud fk6af44e65df74e053
pg_restore: dropping FK CONSTRAINT person_site fk68b84df1f3bc649a
pg_restore: dropping FK CONSTRAINT person_site fk68b84df1711f475a
pg_restore: dropping FK CONSTRAINT displayfield fk68ad1578d475355a
pg_restore: dropping FK CONSTRAINT teamregionassignment fk6579c97eccbe7b58
pg_restore: dropping FK CONSTRAINT teamregionassignment fk6579c97ec8b4cc3a
pg_restore: dropping FK CONSTRAINT facilitytype_loc_aud fk5d19a76fdf74e053
pg_restore: dropping FK CONSTRAINT patientvisit_aud fk5218ec37df74e053
pg_restore: dropping FK CONSTRAINT program fk50c7b664d475355a
pg_restore: dropping FK CONSTRAINT referralrejectionreason_aud fk4fbf7c01df74e053
pg_restore: dropping FK CONSTRAINT phone_person fk4f15366f3bc649a
pg_restore: dropping FK CONSTRAINT phone_person fk4f153663e0e43fa
pg_restore: dropping FK CONSTRAINT insurancecarrierrates fk4ac4ef55f567a3da
pg_restore: dropping FK CONSTRAINT patient_diagnosis_aud fk41980848df74e053
pg_restore: dropping FK CONSTRAINT tier_rates_aud fk3fa665a7df74e053
pg_restore: dropping FK CONSTRAINT roomboardgroup_tiers fk3af76526fb116d8c
pg_restore: dropping FK CONSTRAINT roomboardgroup_tiers fk3af76526afec008
pg_restore: dropping FK CONSTRAINT office_aud fk3abf8aaddf74e053
pg_restore: dropping FK CONSTRAINT emaillisttype_aud fk3a5f7c65df74e053
pg_restore: dropping FK CONSTRAINT smartformquestion fk38656d13d475355a
pg_restore: dropping FK CONSTRAINT referralrejectionreason fk3451e630d475355a
pg_restore: dropping FK CONSTRAINT phone_office fk344f6cd3e0e43fa
pg_restore: dropping FK CONSTRAINT phone_office fk344f6cd3924573a
pg_restore: dropping FK CONSTRAINT patient fk340c82e5f18ed3de
pg_restore: dropping FK CONSTRAINT patient fk340c82e5ec2f8197
pg_restore: dropping FK CONSTRAINT patient fk340c82e5d475355a
pg_restore: dropping FK CONSTRAINT patient fk340c82e58f4e2e3a
pg_restore: dropping FK CONSTRAINT patient fk340c82e5711f475a
pg_restore: dropping FK CONSTRAINT patient fk340c82e5584d75a4
pg_restore: dropping FK CONSTRAINT patient fk340c82e5440be4c7
pg_restore: dropping FK CONSTRAINT patient fk340c82e53924573a
pg_restore: dropping FK CONSTRAINT patient fk340c82e5371d86fa
pg_restore: dropping FK CONSTRAINT patient fk340c82e536dc7efa
pg_restore: dropping FK CONSTRAINT roomboardtier_aud fk333d367edf74e053
pg_restore: dropping FK CONSTRAINT phone_hospice fk3245856d475355a
pg_restore: dropping FK CONSTRAINT phone_hospice fk32458563e0e43fa
pg_restore: dropping FK CONSTRAINT eligibility fk313d01dfd9bf889a
pg_restore: dropping FK CONSTRAINT allergy fk2ce1fb60d9bf889a
pg_restore: dropping FK CONSTRAINT patientdiagnoses fk2962b910593b6c91
pg_restore: dropping FK CONSTRAINT teampersonlist fk256967f0d475355a
pg_restore: dropping FK CONSTRAINT person_hospice fk2406ab5df3bc649a
pg_restore: dropping FK CONSTRAINT person_hospice fk2406ab5dd475355a
pg_restore: dropping FK CONSTRAINT facility fk21b8d2c3d475355a
pg_restore: dropping FK CONSTRAINT facility fk21b8d2c38f4e2e3a
pg_restore: dropping FK CONSTRAINT facility fk21b8d2c3711f475a
pg_restore: dropping FK CONSTRAINT facility fk21b8d2c356ec622a
pg_restore: dropping FK CONSTRAINT person_hospice_aud fk2003e2aedf74e053
pg_restore: dropping FK CONSTRAINT rate_aud fk1d0a6ed1df74e053
pg_restore: dropping FK CONSTRAINT person_region fk19e98f1ef3bc649a
pg_restore: dropping FK CONSTRAINT person_region fk19e98f1ec8b4cc3a
pg_restore: dropping FK CONSTRAINT teamregionassignment_aud fk1889084fdf74e053
pg_restore: dropping FK CONSTRAINT person_office fk14d8a6e6f3bc649a
pg_restore: dropping FK CONSTRAINT person_office fk14d8a6e63924573a
pg_restore: dropping FK CONSTRAINT patientinteraction_aud fk122b113edf74e053
pg_restore: dropping FK CONSTRAINT patientinsurance_aud fk119f20c6df74e053
pg_restore: dropping FK CONSTRAINT phraselibrary_aud fk115657a5df74e053
pg_restore: dropping FK CONSTRAINT facilitytype_loc facilitytype_loc_facilitytype_id_fkey
pg_restore: dropping FK CONSTRAINT facility_smartformresponse facility_smartformresponse_smartformresponses_id_fkey
pg_restore: dropping FK CONSTRAINT facility_smartformresponse facility_smartformresponse_facility_id_fkey
pg_restore: dropping FK CONSTRAINT facility_offices facility_offices_facility_id_fkey
pg_restore: dropping FK CONSTRAINT facility_facilitytypes facility_facilitytypes_facilitytype_id_fkey
pg_restore: dropping FK CONSTRAINT facility_facilitytypes facility_facilitytypes_facility_id_fkey
pg_restore: dropping FK CONSTRAINT email_list_person email_list_person_emaillist_id_fkey
pg_restore: dropping FK CONSTRAINT eligibility_smartformresponse eligibilitysmartformrespons_eligibility_fkey
pg_restore: dropping FK CONSTRAINT eligibility eligibility_policy_fkey
pg_restore: dropping FK CONSTRAINT eligibility eligibility_insurancecoverage_fkey
pg_restore: dropping FK CONSTRAINT electionperiod electionperiod_policy_fkey
pg_restore: dropping FK CONSTRAINT electionperiod electionperiod_insurancecoverage_fkey
pg_restore: dropping FK CONSTRAINT electionperiod electionperiod_eligibility_id_fkey
pg_restore: dropping FK CONSTRAINT electionperiod electionperiod_dischargeinteraction_id_fkey
pg_restore: dropping FK CONSTRAINT electionperiod electionperiod_admissioninteraction_id_fkey
pg_restore: dropping FK CONSTRAINT dischargereason dischargereason_dischargecode_id_fkey
pg_restore: dropping FK CONSTRAINT coverageset coverageset_patient_fkey
pg_restore: dropping FK CONSTRAINT coverage coverage_coverageset_fkey
pg_restore: dropping FK CONSTRAINT contract contract_facility_id_fkey
pg_restore: dropping FK CONSTRAINT claimrevenuedetail claimrevenuedetail_facility_id_fkey
pg_restore: dropping FK CONSTRAINT claimtransaction claimdetail_claim_fkey
pg_restore: dropping FK CONSTRAINT claimcmsstatus claimcmsstatus_status_fk
pg_restore: dropping FK CONSTRAINT claimcmsstatus claimcmsstatus_claim_fk
pg_restore: dropping FK CONSTRAINT claim claim_secondarypolicy_fkey
pg_restore: dropping FK CONSTRAINT claim claim_policy_fkey
pg_restore: dropping FK CONSTRAINT church church_religion_id_fkey
pg_restore: dropping FK CONSTRAINT phone_church church_id_fk
pg_restore: dropping FK CONSTRAINT certification_patientinteraction certificationpatientinteraction_patientinteraction_id_fkey
pg_restore: dropping FK CONSTRAINT certification_patientinteraction certificationpatientinteraction_certification_id_fkey
pg_restore: dropping FK CONSTRAINT certification_patientinteraction_aud certification_patientinteraction_aud_rev_fkey
pg_restore: dropping FK CONSTRAINT certification certification_hospicephysician_id_fkey
pg_restore: dropping FK CONSTRAINT certification certification_facetofacevisit_id_fkey
pg_restore: dropping FK CONSTRAINT certification certification_electionperiod_fkey
pg_restore: dropping FK CONSTRAINT certification certification_attendingphysician_id_fkey
pg_restore: dropping FK CONSTRAINT acl acl_resource_id_fkey
pg_restore: dropping TRIGGER patientinteraction trans_ep_num_set
pg_restore: dropping TRIGGER patientstatus status_rank_trigger
pg_restore: dropping TRIGGER claim seqh_claim_trigger
pg_restore: dropping TRIGGER patientphysician phys_ep_num_set
pg_restore: dropping TRIGGER patientstatus patient_status_denorm_trigger
pg_restore: dropping TRIGGER patientlevelofcare patient_levelofcare_denorm_trigger
pg_restore: dropping TRIGGER patientinteraction patient_interaction_denorm_trigger
pg_restore: dropping TRIGGER patientfacility patient_facility_denorm_trigger
pg_restore: dropping TRIGGER office new_site_insert_trigger_unassignedteam
pg_restore: dropping TRIGGER office new_site_insert_trigger
pg_restore: dropping TRIGGER patientteam maintaineffectiveenddt_trigger_insert_delete_update_after
pg_restore: dropping TRIGGER patientoffice maintaineffectiveenddt_trigger_insert_delete_update_after
pg_restore: dropping TRIGGER insurancecoverage ins_ep_num_set
pg_restore: dropping TRIGGER patientstatus episode_num_status_update
pg_restore: dropping TRIGGER patientstatus episode_num_status_insert
pg_restore: dropping TRIGGER claimrequestlog claimrequestlogtrigger
pg_restore: dropping TRIGGER claim claimhistory_update
pg_restore: dropping TRIGGER claim claimhistory_insert
pg_restore: dropping TRIGGER claim claim_cms_status_update
pg_restore: dropping TRIGGER office booksclosedhistory_update
pg_restore: dropping TRIGGER office booksclosedhistory_insert
pg_restore: dropping TRIGGER patientstatus before_patient_status_insertion_trigger
pg_restore: dropping TRIGGER claim before_claim_deletion_trigger
pg_restore: dropping TRIGGER claimbatch batchrejected_update
pg_restore: dropping TRIGGER patient audit_entry_on_patient_delete
pg_restore: dropping TRIGGER claimtransactiondetail audit_entry_on_claimtransactiondetail_update
pg_restore: dropping TRIGGER claimtransactiondetail audit_entry_on_claimtransactiondetail_insert_or_delete
pg_restore: dropping TRIGGER claimtransaction audit_entry_on_claimtransaction_update
pg_restore: dropping TRIGGER claimtransaction audit_entry_on_claimtransaction_insert_or_delete
pg_restore: dropping TRIGGER claimrevenuedetail audit_entry_on_claimrevenuedetail_update
pg_restore: dropping TRIGGER claimrevenuedetail audit_entry_on_claimrevenuedetail_insert_or_delete
pg_restore: dropping TRIGGER claimpatientvisit audit_entry_on_claimpatientvisit_update
pg_restore: dropping TRIGGER claimpatientvisit audit_entry_on_claimpatientvisit_insert_or_delete
pg_restore: dropping TRIGGER claimmedication audit_entry_on_claimmedication_update
pg_restore: dropping TRIGGER claimmedication audit_entry_on_claimmedication_insert_or_delete
pg_restore: dropping TRIGGER claim audit_entry_on_claim_update
pg_restore: dropping TRIGGER claim audit_entry_on_claim_insert_or_delete
pg_restore: dropping TRIGGER program after_program_insertion_trigger
pg_restore: dropping TRIGGER address address_admit_county_trigger_update
pg_restore: dropping TRIGGER address address_admit_county_trigger_delete
pg_restore: dropping INDEX zipfiscal
pg_restore: dropping INDEX teampersonassignment_person_id_teamperson_id_idx
pg_restore: dropping INDEX statusrank_idx
pg_restore: dropping INDEX pvcpcvisitid_idx
pg_restore: dropping INDEX programsite_site_id_idx
pg_restore: dropping INDEX programsite_program_id_idx
pg_restore: dropping INDEX policyinsurer
pg_restore: dropping INDEX policy_patientpersonrelation_id_idx
pg_restore: dropping INDEX policy_patient_idx
pg_restore: dropping INDEX physicianservicediagnoses_physicianservice_id_idx
pg_restore: dropping INDEX physicianservicediagnoses_lut_idx
pg_restore: dropping INDEX physicianservice_patient_visit_id_idx
pg_restore: dropping INDEX physicianservice_lut_idx
pg_restore: dropping INDEX phone_phonetype_idx
pg_restore: dropping INDEX phone_person_personid_idx
pg_restore: dropping INDEX phone_patient_patientid_idx
pg_restore: dropping INDEX phone_office_office_id_phone_id_idx
pg_restore: dropping INDEX phone_insurancecarrier_payer_id_phone_id_idx
pg_restore: dropping INDEX phone_facility_facility_id_phone_id_idx
pg_restore: dropping INDEX person_smartformresponse_person_id_smartformresponses_id_idx
pg_restore: dropping INDEX person_site_siteid
pg_restore: dropping INDEX person_serialnumber_idx
pg_restore: dropping INDEX person_role_person_id_rank_role_id_idx
pg_restore: dropping INDEX person_programsite_personid_rank_idx
pg_restore: dropping INDEX patientvisit_lut_idx
pg_restore: dropping INDEX patientvisit_created_idx
pg_restore: dropping INDEX patientvisit_cpcvisitid_idx
pg_restore: dropping INDEX patientstatus_status_idx
pg_restore: dropping INDEX patientstatus_rejectionreason_id_idx
pg_restore: dropping INDEX patientstatus_patientinteraction_idx
pg_restore: dropping INDEX patientstatus_dischargereason_id_idx
pg_restore: dropping INDEX patientstatus_deleted_idx
pg_restore: dropping INDEX patientstatus_datetimeiddesc_idx
pg_restore: dropping INDEX patientstatus_datetimeid_idx
pg_restore: dropping INDEX patientroleassignment_personid_roleid_idx
pg_restore: dropping INDEX patientroleassignment_patientid_roleid_idx
pg_restore: dropping INDEX patientreferral_referral_date_time_idx
pg_restore: dropping INDEX patientreferral_patientid_effdt_idx
pg_restore: dropping INDEX patientreferral_facility_id_idx
pg_restore: dropping INDEX patientreferral_callreceivedphone_id_idx
pg_restore: dropping INDEX patientphysician_physiciantype
pg_restore: dropping INDEX patientphysician_personid_idx
pg_restore: dropping INDEX patientphysician_patientid_effdt_idx
pg_restore: dropping INDEX patientphysician_effectivedate_idx
pg_restore: dropping INDEX patientpersonrelation_types_patientpersonrelation_id_types_idx
pg_restore: dropping INDEX patientpersonrelation_personid_idx
pg_restore: dropping INDEX patientpersonrelation_patientid_idx
pg_restore: dropping INDEX patientoffice_paitent_id_idx
pg_restore: dropping INDEX patientnumber
pg_restore: dropping INDEX patientmedication_patient_id_idx
pg_restore: dropping INDEX patientinteraction_personid_idx
pg_restore: dropping INDEX patientinteraction_patientid_effdt_idx
pg_restore: dropping INDEX patientinteraction_patientepisodeeffdtdesc_idx
pg_restore: dropping INDEX patientinteraction_patientepisodeeffdt_idx
pg_restore: dropping INDEX patientinteraction_patient_idx
pg_restore: dropping INDEX patientinteraction_lut_idx
pg_restore: dropping INDEX patientinteraction_episodenum_idx
pg_restore: dropping INDEX patientinteraction_effdt_idx
pg_restore: dropping INDEX patientfacility_facilityid_idx
pg_restore: dropping INDEX patientdiagnoses_interactionid_effdt_idx
pg_restore: dropping INDEX patient_ssn_idx
pg_restore: dropping INDEX patient_lut_idx
pg_restore: dropping INDEX patient_id_idx
pg_restore: dropping INDEX patient_dischargedate_partialidx
pg_restore: dropping INDEX patient_currentstatus_idx
pg_restore: dropping INDEX patient_combined_office_idx
pg_restore: dropping INDEX patient_combined_idx
pg_restore: dropping INDEX patient_aud_lut_idx
pg_restore: dropping INDEX patient_admissiondate_idx
pg_restore: dropping INDEX patient_address_id_idx
pg_restore: dropping INDEX openedvisit_lut_index
pg_restore: dropping INDEX openedvisit_hbcvisitid_idx
pg_restore: dropping INDEX openedvisit_creationdate_idx
pg_restore: dropping INDEX noa_policy_id_idx
pg_restore: dropping INDEX noa_patient_id_idx
pg_restore: dropping INDEX noa_coverage_id_idx
pg_restore: dropping INDEX noa_claim_id_idx
pg_restore: dropping INDEX noa_certifyingphysician_id_idx
pg_restore: dropping INDEX noa_attendingphysician_id_idx
pg_restore: dropping INDEX noa_admissiondate_idx
pg_restore: dropping INDEX last
pg_restore: dropping INDEX insurancecoverage_patientid_effdt_idx
pg_restore: dropping INDEX insurancecoverage_effdt_idx
pg_restore: dropping INDEX insurancecarrierrates_insurancecarrier_id_idx
pg_restore: dropping INDEX insurancecarrierrate_carrier_rates_id_idx
pg_restore: dropping INDEX insurancecarrier_payertype_idx
pg_restore: dropping INDEX insurancecarrier_address_id_idx
pg_restore: dropping INDEX first
pg_restore: dropping INDEX facility_smartformresponse_facility_id_smartformresponse_id_idx
pg_restore: dropping INDEX facility_offices_facility_id_office_id_idx
pg_restore: dropping INDEX facility_npi_idx
pg_restore: dropping INDEX facility_facilitytypes_facility_id_facilitytype_id_idx
pg_restore: dropping INDEX eligibility_smartformresponse_eligibility_id_smartformresponses
pg_restore: dropping INDEX eligibility_patient_id_idx
pg_restore: dropping INDEX electionperiod_startdate_insurancecoverage_id_idx
pg_restore: dropping INDEX electionperiod_policy_id_idx
pg_restore: dropping INDEX electionperiod_insurancecoverage_id_electionnumber_idx
pg_restore: dropping INDEX electionperiod_expectedenddate_insurancecoverage_id_idx
pg_restore: dropping INDEX electionperiod_episodenum_idx
pg_restore: dropping INDEX electionperiod_actualenddate_insurancecoverage_id_idx
pg_restore: dropping INDEX dobdate
pg_restore: dropping INDEX dischargereason_dischargecode_id_idx
pg_restore: dropping INDEX dischargenotr
pg_restore: dropping INDEX dischargedaybillingrule_insurancecarrier_id_idx
pg_restore: dropping INDEX dischargedaybillingrule_dischargetype_idx
pg_restore: dropping INDEX covsetpatient
pg_restore: dropping INDEX covpolicy
pg_restore: dropping INDEX coverageset_patientepisode_idx
pg_restore: dropping INDEX coverageset_enddt_idx
pg_restore: dropping INDEX coverageset_effdt_idx
pg_restore: dropping INDEX coverage_policy_idx
pg_restore: dropping INDEX coverage_cvgset_idx
pg_restore: dropping INDEX clinical_data_patient_id_idx
pg_restore: dropping INDEX claimtransactiondetail_claimtransaction_id_idx
pg_restore: dropping INDEX claimtransactiondetail_claimrevenuedetail_id_idx
pg_restore: dropping INDEX claimtransaction_claim_id_idx
pg_restore: dropping INDEX claimrevenuedetail_claim_id_idx
pg_restore: dropping INDEX claimcancel
pg_restore: dropping INDEX claimbatch_id_idx
pg_restore: dropping INDEX claim_servicestart_patient_id_idx
pg_restore: dropping INDEX claim_posted_patient_id_idx
pg_restore: dropping INDEX claim_patient_id_idx
pg_restore: dropping INDEX claim_id_idx
pg_restore: dropping INDEX claim_id_claimstatus_idx
pg_restore: dropping INDEX claim_claimkey_idx
pg_restore: dropping INDEX checkNumNPI
pg_restore: dropping INDEX checkNoNPI
pg_restore: dropping INDEX certification_patientinteraction_certification_id_idx
pg_restore: dropping INDEX certification_hospicephysician_id_idx
pg_restore: dropping INDEX certification_electionperiod_id_idx
pg_restore: dropping INDEX certification_certificationtype_idx
pg_restore: dropping INDEX allergy_patient_id_idx
pg_restore: dropping CONSTRAINT wagecache wagecache_pk
pg_restore: dropping CONSTRAINT userpreference userpreference_pk
pg_restore: dropping CONSTRAINT tier_rates tier_rates_rate_id_key
pg_restore: dropping CONSTRAINT tier_rates_aud tier_rates_aud_pkey
pg_restore: dropping CONSTRAINT thirdpartyrolemap thirdpartyrolemap_pk
pg_restore: dropping CONSTRAINT teamsiteassignment teamsiteassignment_pkey
pg_restore: dropping CONSTRAINT teamsiteassignment_aud teamsiteassignment_aud_pkey
pg_restore: dropping CONSTRAINT teamregionassignment teamregionassignment_pkey
pg_restore: dropping CONSTRAINT teamregionassignment_aud teamregionassignment_aud_pkey
pg_restore: dropping CONSTRAINT teampersonlist teampersonlist_teamnumber_key
pg_restore: dropping CONSTRAINT teampersonlist teampersonlist_pkey
pg_restore: dropping CONSTRAINT teampersonlist_aud teampersonlist_aud_pkey
pg_restore: dropping CONSTRAINT teampersonassignment teampersonassignment_pkey
pg_restore: dropping CONSTRAINT teampersonassignment_aud teampersonassignment_aud_pkey
pg_restore: dropping CONSTRAINT teamofficeassignment teamofficeassignment_pkey
pg_restore: dropping CONSTRAINT teamofficeassignment_aud teamofficeassignment_aud_pkey
pg_restore: dropping CONSTRAINT tabcontext tabcontext_pk
pg_restore: dropping CONSTRAINT tabconfig tabconconfig_pk
pg_restore: dropping CONSTRAINT smartformresponse smartformresponse_pkey
pg_restore: dropping CONSTRAINT smartformresponse_aud smartformresponse_aud_pkey
pg_restore: dropping CONSTRAINT smartformquestion smartformquestion_pkey
pg_restore: dropping CONSTRAINT smartformquestion_aud smartformquestion_aud_pkey
pg_restore: dropping CONSTRAINT smartformexpression_aud smartformexpression_aud_pkey
pg_restore: dropping CONSTRAINT smartformanswer smartformanswer_pkey
pg_restore: dropping CONSTRAINT smartformanswer_aud smartformanswer_aud_pkey
pg_restore: dropping CONSTRAINT siterolelist siterolelist_pkey
pg_restore: dropping CONSTRAINT siterolelist_aud siterolelist_aud_pkey
pg_restore: dropping CONSTRAINT siteroleassignment siteroleassignment_pkey
pg_restore: dropping CONSTRAINT siteroleassignment_aud siteroleassignment_aud_pkey
pg_restore: dropping CONSTRAINT sitepayertype sitepayertype_site_id_payertype_key
pg_restore: dropping CONSTRAINT sitepayertype sitepayertype_pk
pg_restore: dropping CONSTRAINT sitenotification_email_aud sitenotification_email_aud_pkey
pg_restore: dropping CONSTRAINT sitenotification_aud sitenotification_aud_pkey
pg_restore: dropping CONSTRAINT seqhclaimlog seqhclaimslog_pk
pg_restore: dropping CONSTRAINT scenariotype scenariotype_pk
pg_restore: dropping CONSTRAINT roomboardtier roomboardtier_pkey
pg_restore: dropping CONSTRAINT roomboardtier_aud roomboardtier_aud_pkey
pg_restore: dropping CONSTRAINT roomboardgroup_tiers roomboardgroup_tiers_tier_id_key
pg_restore: dropping CONSTRAINT roomboardgroup_tiers_aud roomboardgroup_tiers_aud_pkey
pg_restore: dropping CONSTRAINT roomboardgroup roomboardgroup_pkey
pg_restore: dropping CONSTRAINT roomboardgroup_aud roomboardgroup_aud_pkey
pg_restore: dropping CONSTRAINT rolerate rolerate_pkey
pg_restore: dropping CONSTRAINT rolerate_aud rolerate_aud_pkey
pg_restore: dropping CONSTRAINT rolegroup rolegroup_pkey
pg_restore: dropping CONSTRAINT rolegroup_aud rolegroup_aud_pkey
pg_restore: dropping CONSTRAINT role_rolerate_aud role_rolerate_aud_pkey
pg_restore: dropping CONSTRAINT revinfo revinfo_pkey
pg_restore: dropping CONSTRAINT resource resource_resourceid_key
pg_restore: dropping CONSTRAINT resource resource_pkey
pg_restore: dropping CONSTRAINT remitfile remitfile_pk
pg_restore: dropping CONSTRAINT remitcheck remitcheck_pk
pg_restore: dropping CONSTRAINT religion religion_pkey
pg_restore: dropping CONSTRAINT religion_aud religion_aud_pkey
pg_restore: dropping CONSTRAINT region region_pkey
pg_restore: dropping CONSTRAINT region_aud region_aud_pkey
pg_restore: dropping CONSTRAINT referralsourcetype referralsourcetype_pkey
pg_restore: dropping CONSTRAINT referralsourcetype_aud referralsourcetype_aud_pkey
pg_restore: dropping CONSTRAINT referralrejectionreason referralrejectionreason_pkey
pg_restore: dropping CONSTRAINT referralrejectionreason_aud referralrejectionreason_aud_pkey
pg_restore: dropping CONSTRAINT refdbref refdbref_pk
pg_restore: dropping CONSTRAINT rate rate_pkey
pg_restore: dropping CONSTRAINT rate_aud rate_aud_pkey
pg_restore: dropping CONSTRAINT programsite programsite_pkey
pg_restore: dropping CONSTRAINT programsite_aud programsite_aud_pkey
pg_restore: dropping CONSTRAINT program program_pkey
pg_restore: dropping CONSTRAINT program_aud program_aud_pkey
pg_restore: dropping CONSTRAINT favprocedurecode procedurecode_pkey
pg_restore: dropping CONSTRAINT favprocedurecode_aud procedurecode_aud_pkey
pg_restore: dropping CONSTRAINT priorauthorization priorauthorization_pkey
pg_restore: dropping CONSTRAINT priorauthorization_aud priorauthorization_aud_pkey
pg_restore: dropping CONSTRAINT principal principal_pkey
pg_restore: dropping CONSTRAINT visittrip pk_visittrip
pg_restore: dropping CONSTRAINT smartformexpression pk_smartformexpression
pg_restore: dropping CONSTRAINT sitenotification pk_sitenotification
pg_restore: dropping CONSTRAINT remitdetail pk_remitdetail
pg_restore: dropping CONSTRAINT remit pk_remit
pg_restore: dropping CONSTRAINT policy pk_policy
pg_restore: dropping CONSTRAINT physicianservicediagnoses pk_physicianservicediagnoses
pg_restore: dropping CONSTRAINT pharmacybenefitmanager pk_pharmacybenefitmanager
pg_restore: dropping CONSTRAINT person_dde_credentials pk_person_dde_credentials
pg_restore: dropping CONSTRAINT patientteam pk_patientteam
pg_restore: dropping CONSTRAINT patientoffice pk_patientoffice
pg_restore: dropping CONSTRAINT patientintakenote pk_patientintakenote
pg_restore: dropping CONSTRAINT patientbillingnote pk_patientbillingnote
pg_restore: dropping CONSTRAINT passwordverification pk_passwordverification
pg_restore: dropping CONSTRAINT npiadminlog_aud pk_npiadminlog_aud
pg_restore: dropping CONSTRAINT npiadminlog pk_npiadminlog
pg_restore: dropping CONSTRAINT notr pk_notr
pg_restore: dropping CONSTRAINT notificationtype pk_notificationtype
pg_restore: dropping CONSTRAINT messagetemplate pk_messagetemplate
pg_restore: dropping CONSTRAINT messageattribute pk_messageattribute
pg_restore: dropping CONSTRAINT medsandprescriptions pk_medsandprescriptions
pg_restore: dropping CONSTRAINT lettertemplate pk_lettertemplate
pg_restore: dropping CONSTRAINT labeltemplate pk_labeltemplate
pg_restore: dropping CONSTRAINT insurancecarriertob pk_insurancecarriertob
pg_restore: dropping CONSTRAINT insurancecarrierrevcode pk_insurancecarrierrevcode
pg_restore: dropping CONSTRAINT insurancecarrier_site_financialcredentials pk_insurancecarrier_site_financialcredentials
pg_restore: dropping CONSTRAINT hbuniquenumber pk_hbuniquenumber
pg_restore: dropping CONSTRAINT griefrisk pk_griefrisk
pg_restore: dropping CONSTRAINT finalclaimcancelclaim pk_finalclaimcancelclaim
pg_restore: dropping CONSTRAINT filescheduler pk_filescheduler
pg_restore: dropping CONSTRAINT facesheet_phonetypes pk_facesheet_phntypes
pg_restore: dropping CONSTRAINT externallink pk_externallink
pg_restore: dropping CONSTRAINT dischargeclaimnotrclaim pk_dischargeclaimnotrclaim
pg_restore: dropping CONSTRAINT databasechangeloglock pk_databasechangeloglock
pg_restore: dropping CONSTRAINT coverageset pk_coverageset
pg_restore: dropping CONSTRAINT coverage pk_coverage
pg_restore: dropping CONSTRAINT claimtransactiondetail pk_claimtransdetail
pg_restore: dropping CONSTRAINT claimstatusdata pk_claimstatusdata
pg_restore: dropping CONSTRAINT claimrevenuedetail pk_claimrev
pg_restore: dropping CONSTRAINT claimpatientvisit pk_claimpatientvisit
pg_restore: dropping CONSTRAINT claimmedication pk_claimmedication
pg_restore: dropping CONSTRAINT certificationnarrative pk_certificationnarrative
pg_restore: dropping CONSTRAINT bereavementspecialoccasion pk_bereavementspecialoccasion
pg_restore: dropping CONSTRAINT bereavementsettings pk_bereavementoption
pg_restore: dropping CONSTRAINT bereavementcontact pk_bereavementcontact
pg_restore: dropping CONSTRAINT physicianservicediagnoses_aud physicianservicediagnoses_aud_pkey
pg_restore: dropping CONSTRAINT physicianservice physicianservice_pkey
pg_restore: dropping CONSTRAINT physicianservice_aud physicianservice_aud_pkey
pg_restore: dropping CONSTRAINT phraselibrary phraselibrary_pkey
pg_restore: dropping CONSTRAINT phraselibrary_aud phraselibrary_aud_pkey
pg_restore: dropping CONSTRAINT phone phone_pkey
pg_restore: dropping CONSTRAINT phone_person phone_person_phone_id_key
pg_restore: dropping CONSTRAINT phone_person_aud phone_person_aud_pkey
pg_restore: dropping CONSTRAINT phone_patient phone_patient_phone_id_key
pg_restore: dropping CONSTRAINT phone_patient_aud phone_patient_aud_pkey
pg_restore: dropping CONSTRAINT phone_office phone_office_phone_id_key
pg_restore: dropping CONSTRAINT phone_office_aud phone_office_aud_pkey
pg_restore: dropping CONSTRAINT phone_insurancecarrier phone_insurancecarrier_phone_id_key
pg_restore: dropping CONSTRAINT phone_insurancecarrier_aud phone_insurancecarrier_aud_pkey
pg_restore: dropping CONSTRAINT phone_hospice phone_hospice_pkey
pg_restore: dropping CONSTRAINT phone_hospice_aud phone_hospice_aud_pkey
pg_restore: dropping CONSTRAINT phone_facility phone_facility_phone_id_key
pg_restore: dropping CONSTRAINT phone_facility_aud phone_facility_aud_pkey
pg_restore: dropping CONSTRAINT phone_aud phone_aud_pkey
pg_restore: dropping CONSTRAINT pharmacybenefitmanager_aud pharmacybenefitmanager_aud_pkey
pg_restore: dropping CONSTRAINT person_smartformresponse person_smartformresponse_smartformresponses_id_key
pg_restore: dropping CONSTRAINT person_smartformresponse_aud person_smartformresponse_aud_pkey
pg_restore: dropping CONSTRAINT person_site person_site_pkey
pg_restore: dropping CONSTRAINT person_site_aud person_site_aud_pkey
pg_restore: dropping CONSTRAINT person_role person_role_pkey
pg_restore: dropping CONSTRAINT person_role_aud person_role_aud_pkey
pg_restore: dropping CONSTRAINT person_region person_region_pkey
pg_restore: dropping CONSTRAINT person_region_aud person_region_aud_pkey
pg_restore: dropping CONSTRAINT person_programsite person_programsite_person_id_rank_key
pg_restore: dropping CONSTRAINT person person_pkey
pg_restore: dropping CONSTRAINT person person_personnumber_key
pg_restore: dropping CONSTRAINT person_office person_office_pkey
pg_restore: dropping CONSTRAINT person_office_aud person_office_aud_pkey
pg_restore: dropping CONSTRAINT person_hospice person_hospice_pkey
pg_restore: dropping CONSTRAINT person_hospice_aud person_hospice_aud_pkey
pg_restore: dropping CONSTRAINT person_dde_credentials_aud person_dde_credentials_aud_pkey
pg_restore: dropping CONSTRAINT person_aud person_aud_pkey
pg_restore: dropping CONSTRAINT patientvisit patientvisit_pkey
pg_restore: dropping CONSTRAINT patientvisit patientvisit_interaction_id_key
pg_restore: dropping CONSTRAINT patientvisit_aud patientvisit_aud_pkey
pg_restore: dropping CONSTRAINT patientteam patientteam_patient_id_episodenum_effectivedate_ukey
pg_restore: dropping CONSTRAINT patientteam_aud patientteam_aud_id_pk
pg_restore: dropping CONSTRAINT patientstatus patientstatus_pkey
pg_restore: dropping CONSTRAINT patientstatus patientstatus_interaction_id_key
pg_restore: dropping CONSTRAINT patientstatus_aud patientstatus_aud_pkey
pg_restore: dropping CONSTRAINT patientroleassignment patientroleassignment_pkey
pg_restore: dropping CONSTRAINT patientroleassignment_aud patientroleassignment_aud_pkey
pg_restore: dropping CONSTRAINT patientreferral patientreferral_pkey
pg_restore: dropping CONSTRAINT patientreferral_aud patientreferral_aud_pkey
pg_restore: dropping CONSTRAINT patientphysician patientphysician_pkey
pg_restore: dropping CONSTRAINT patientphysician_aud patientphysician_aud_pkey
pg_restore: dropping CONSTRAINT patientpersonrelation_types_aud patientpersonrelation_types_aud_pkey
pg_restore: dropping CONSTRAINT patientpersonrelation patientpersonrelation_pkey
pg_restore: dropping CONSTRAINT patientpersonrelation patientpersonrelation_patientid_rank_unique_key
pg_restore: dropping CONSTRAINT patientpersonrelation_aud patientpersonrelation_aud_pkey
pg_restore: dropping CONSTRAINT patientoffice patientoffice_patient_id_episodenum_effectivedate_ukey
pg_restore: dropping CONSTRAINT patientoffice_aud patientoffice_aud_id_pk
pg_restore: dropping CONSTRAINT patientmedication patientmedication_pkey
pg_restore: dropping CONSTRAINT patientmedication_aud patientmedication_aud_pkey
pg_restore: dropping CONSTRAINT patientlevelofcare patientlevelofcare_pkey
pg_restore: dropping CONSTRAINT patientlevelofcare patientlevelofcare_interaction_id_key
pg_restore: dropping CONSTRAINT patientlevelofcare_aud patientlevelofcare_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction patientinteraction_pkey
pg_restore: dropping CONSTRAINT patientinteraction_patientvisit_aud patientinteraction_patientvisit_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction_patientstatus_aud patientinteraction_patientstatus_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction_patientlevelofcare_aud patientinteraction_patientlevelofcare_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction_patientfacility_aud patientinteraction_patientfacility_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction_patientdiagnoses_aud patientinteraction_patientdiagnoses_aud_pkey
pg_restore: dropping CONSTRAINT patientinteraction_aud patientinteraction_aud_pkey
pg_restore: dropping CONSTRAINT patientinsurance patientinsurance_pkey
pg_restore: dropping CONSTRAINT patientinsurance_aud patientinsurance_aud_pkey
pg_restore: dropping CONSTRAINT patientfacility patientfacility_pkey
pg_restore: dropping CONSTRAINT patientfacility patientfacility_interaction_id_key
pg_restore: dropping CONSTRAINT patientfacility_aud patientfacility_aud_pkey
pg_restore: dropping CONSTRAINT patientdiagnoses patientdiagnoses_pkey
pg_restore: dropping CONSTRAINT patientdiagnoses_aud patientdiagnoses_aud_pkey
pg_restore: dropping CONSTRAINT patient patient_pkey
pg_restore: dropping CONSTRAINT patient patient_patientnumber_key
pg_restore: dropping CONSTRAINT patient_patientmedication_aud patient_patientmedication_aud_pkey
pg_restore: dropping CONSTRAINT patient patient_patientaltnumber_key
pg_restore: dropping CONSTRAINT patient_diagnosis_aud patient_diagnosis_aud_pkey
pg_restore: dropping CONSTRAINT patient_aud patient_aud_pkey
pg_restore: dropping CONSTRAINT patient_allergy_aud patient_allergy_aud_pkey
pg_restore: dropping CONSTRAINT pasrecord pasrecord_pkey
pg_restore: dropping CONSTRAINT openedvisit openedvisit_pk
pg_restore: dropping CONSTRAINT office office_pkey
pg_restore: dropping CONSTRAINT office office_cpclocation_key
pg_restore: dropping CONSTRAINT office_aud office_aud_pkey
pg_restore: dropping CONSTRAINT notr_aud notr_aud_pkey
pg_restore: dropping CONSTRAINT notificationtype_aud notificationtype_aud_pkey
pg_restore: dropping CONSTRAINT noa noa_pkey
pg_restore: dropping CONSTRAINT noa_aud noa_aud_composite_pkey
pg_restore: dropping CONSTRAINT newsitem_aud newsitem_aud_pkey
pg_restore: dropping CONSTRAINT messagetemplate_aud messagetemplate_aud_pkey
pg_restore: dropping CONSTRAINT messageattribute_aud messageattribute_aud_pkey
pg_restore: dropping CONSTRAINT medsandprescriptions_aud medsandprescriptions_aud_pkey
pg_restore: dropping CONSTRAINT medicareintermediaryinfo medicareintermediaryinfo_pkey
pg_restore: dropping CONSTRAINT medicareintermediary medicareintermediary_pkey
pg_restore: dropping CONSTRAINT eligibility_smartformresponse medicareeligibility_smartformresponse_smartformresponses_id_key
pg_restore: dropping CONSTRAINT eligibility_smartformresponse_aud medicareeligibility_smartformresponse_aud_pkey
pg_restore: dropping CONSTRAINT eligibility medicareeligibility_pkey
pg_restore: dropping CONSTRAINT eligibility_aud medicareeligibility_aud_pkey
pg_restore: dropping CONSTRAINT locationconfig locationconfig_pkey
pg_restore: dropping CONSTRAINT lettertemplate_aud lettertemplate_aud_pkey
pg_restore: dropping CONSTRAINT language language_pkey
pg_restore: dropping CONSTRAINT language_aud language_aud_pkey
pg_restore: dropping CONSTRAINT labeltemplate_aud labeltemplate_aud_pkey
pg_restore: dropping CONSTRAINT electiondefinition insuranceprovider_pkey
pg_restore: dropping CONSTRAINT electiondefinition_aud insuranceprovider_aud_pkey
pg_restore: dropping CONSTRAINT insurancecoverage insuranceholder_pkey
pg_restore: dropping CONSTRAINT insurancecoverage_aud insuranceholder_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarriertob insurancecarriertob_tob_effectivedate_insurancecarrier_id_key
pg_restore: dropping CONSTRAINT insurancecarriertob_aud insurancecarriertob_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrevcode insurancecarrierrevcode_type_effectivedate_insurancecarrier_key
pg_restore: dropping CONSTRAINT insurancecarrierrevcode_aud insurancecarrierrevcode_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrates insurancecarrierrates_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrates_insurancecarrierrate_aud insurancecarrierrates_insurancecarrierrate_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrates_aud insurancecarrierrates_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrate insurancecarrierrate_pkey
pg_restore: dropping CONSTRAINT insurancecarrierrate_aud insurancecarrierrate_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_site_financialcredentials_aud insurancecarrier_site_financialcredentials_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier insurancecarrier_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_insurancecarriertob_aud insurancecarrier_insurancecarriertob_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_insurancecarrierrevcode_aud insurancecarrier_insurancecarrierrevcode_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_insurancecarrierrates_aud insurancecarrier_insurancecarrierrates_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_dischargedaybillingrule_aud insurancecarrier_dischargedaybillingrule_aud_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_insurancecarriersitecredentials_aud insurancecarrier_carriersitecredentials_aud_composite_pkey
pg_restore: dropping CONSTRAINT insurancecarrier_aud insurancecarrier_aud_pkey
pg_restore: dropping CONSTRAINT hospice hospice_pkey
pg_restore: dropping CONSTRAINT hospice_aud hospice_aud_pkey
pg_restore: dropping CONSTRAINT hospice_acl_aud hospice_acl_aud_pkey
pg_restore: dropping CONSTRAINT hbrole hbrole_pkey
pg_restore: dropping CONSTRAINT hbrole_aud hbrole_aud_pkey
pg_restore: dropping CONSTRAINT finalclaimcancelclaim finalclaimcancelclaim_final_claim_id_key
pg_restore: dropping CONSTRAINT finalclaimcancelclaim finalclaimcancelclaim_cancel_claim_id_key
pg_restore: dropping CONSTRAINT fileuploadlog fileuploadlog_pkey
pg_restore: dropping CONSTRAINT fileuploadlog_aud fileuploadlog_aud_pkey
pg_restore: dropping CONSTRAINT facilitytype facilitytype_pkey
pg_restore: dropping CONSTRAINT facilitytype facilitytype_name_key
pg_restore: dropping CONSTRAINT facilitytype_loc_aud facilitytype_loc_aud_pkey
pg_restore: dropping CONSTRAINT facilitytype_aud facilitytype_aud_pkey
pg_restore: dropping CONSTRAINT facility_smartformresponse_aud facility_smartformresponse_aud_pkey
pg_restore: dropping CONSTRAINT facility facility_pkey
pg_restore: dropping CONSTRAINT facility_offices_aud facility_offices_aud_pkey
pg_restore: dropping CONSTRAINT facility_facilitytypes_aud facility_facilitytypes_aud_pkey
pg_restore: dropping CONSTRAINT facility_aud facility_aud_pkey
pg_restore: dropping CONSTRAINT emaillisttype emaillisttype_pkey
pg_restore: dropping CONSTRAINT emaillisttype_aud emaillisttype_aud_pkey
pg_restore: dropping CONSTRAINT email_list_person email_list_person_person_id_emaillist_id_key
pg_restore: dropping CONSTRAINT email_list_person_aud email_list_person_aud_pkey
pg_restore: dropping CONSTRAINT electionperiod electionperiod_pkey
pg_restore: dropping CONSTRAINT displayviewfields displayviewfields_pkey
pg_restore: dropping CONSTRAINT displayviewfields_displayfield_aud displayviewfields_displayfield_aud_pkey
pg_restore: dropping CONSTRAINT displayviewfields_aud displayviewfields_aud_pkey
pg_restore: dropping CONSTRAINT displayfield displayfield_unique_key
pg_restore: dropping CONSTRAINT displayfield displayfield_pkey
pg_restore: dropping CONSTRAINT displayfield_aud displayfield_aud_pkey
pg_restore: dropping CONSTRAINT dischargereason_program dischargereason_program_pkey
pg_restore: dropping CONSTRAINT dischargereason_program_aud dischargereason_program_aud_pkey
pg_restore: dropping CONSTRAINT dischargereason dischargereason_pkey
pg_restore: dropping CONSTRAINT dischargereason_aud dischargereason_aud_pkey
pg_restore: dropping CONSTRAINT dischargedaybillingrule dischargedaybillingrule_pkey
pg_restore: dropping CONSTRAINT dischargedaybillingrule_aud dischargedaybillingrule_aud_pkey
pg_restore: dropping CONSTRAINT dischargecode_program dischargecode_program_pkey
pg_restore: dropping CONSTRAINT dischargecode_program_aud dischargecode_program_aud_pkey
pg_restore: dropping CONSTRAINT dischargecode dischargecode_pkey
pg_restore: dropping CONSTRAINT dischargecode dischargecode_codetype_code_hospice_id_key
pg_restore: dropping CONSTRAINT dischargecode_aud dischargecode_aud_pkey
pg_restore: dropping CONSTRAINT dischargeclaimnotrclaim dischargeclaimnotrclaim_notr_claim_id_key
pg_restore: dropping CONSTRAINT dischargeclaimnotrclaim dischargeclaimnotrclaim_discharge_claim_id_key
pg_restore: dropping CONSTRAINT datafix_log datafix_log_pkey
pg_restore: dropping CONSTRAINT dancefloorpanel dancefloorpanel_pkey
pg_restore: dropping CONSTRAINT dancefloorpanel_aud dancefloorpanel_aud_pkey
pg_restore: dropping CONSTRAINT contract contract_pkey
pg_restore: dropping CONSTRAINT contract_aud contract_aud_pkey
pg_restore: dropping CONSTRAINT clinical_data clinical_data_pkey
pg_restore: dropping CONSTRAINT claimtransactiondetail_aud claimtransdetail_aud_pkey
pg_restore: dropping CONSTRAINT claimtransaction_claimtransactiondetail_aud claimtransaction_claimtransactiondetail_aud_pkey
pg_restore: dropping CONSTRAINT claimstatusinquirylog claimstatusinquirylog_pkey
pg_restore: dropping CONSTRAINT claimstatusinquirylog_aud claimstatusinquirylog_aud_pkey
pg_restore: dropping CONSTRAINT claimstatushistory claimstatushistory_pk
pg_restore: dropping CONSTRAINT claimstatusdata claimstatusdata_code_key
pg_restore: dropping CONSTRAINT claimrevenuedetail_aud claimrev_aud_pkey
pg_restore: dropping CONSTRAINT claimrequestlog claimrequestlog_pk
pg_restore: dropping CONSTRAINT claimpatientvisit_aud claimpatientvisit_aud_pkey
pg_restore: dropping CONSTRAINT claimmedication_aud claimmedication_aud_pkey
pg_restore: dropping CONSTRAINT claimtransaction claimdetail_pkey
pg_restore: dropping CONSTRAINT claimtransaction_aud claimdetail_aud_pkey
pg_restore: dropping CONSTRAINT claimcmsstatus claimcmsstatus_pk
pg_restore: dropping CONSTRAINT claimcmsstatus claimcmsstatus_claim_id_key
pg_restore: dropping CONSTRAINT claimchanges claimchanges_pk
pg_restore: dropping CONSTRAINT claimbatch claimbatch_pkey
pg_restore: dropping CONSTRAINT claimbatch_gen claimbatch_gen_pkey
pg_restore: dropping CONSTRAINT claimbatch_aud claimbatch_aud_pkey
pg_restore: dropping CONSTRAINT claim_prebill claim_prebill_pkey
pg_restore: dropping CONSTRAINT claim claim_pkey
pg_restore: dropping CONSTRAINT claim_log claim_log_pkey
pg_restore: dropping CONSTRAINT claim_claimtransactiondetail_aud claim_claimtransactionsdetail_aud_pkey
pg_restore: dropping CONSTRAINT claim_claimtransaction_aud claim_claimtransaction_aud_pkey
pg_restore: dropping CONSTRAINT claim_claimrevenuedetail_aud claim_claimrevenuedetail_aud_pkey
pg_restore: dropping CONSTRAINT claim_aud claim_aud_pkey
pg_restore: dropping CONSTRAINT church church_pkey
pg_restore: dropping CONSTRAINT church_pas_records_aud church_pas_records_aud_pkey
pg_restore: dropping CONSTRAINT church_aud church_aud_pkey
pg_restore: dropping CONSTRAINT certification_patientinteraction certificationpatientinteraction_pkey
pg_restore: dropping CONSTRAINT certification certification_pkey
pg_restore: dropping CONSTRAINT certification_patientinteraction_aud certification_patientinteraction_aud_pkey
pg_restore: dropping CONSTRAINT certification_aud certification_aud_pkey
pg_restore: dropping CONSTRAINT booksclosedhistory booksclosedhistory_pk
pg_restore: dropping CONSTRAINT billlog billlog_pkey
pg_restore: dropping CONSTRAINT billlog_aud billlog_aud_pkey
pg_restore: dropping CONSTRAINT billingfollowup billingfollowup_pkey
pg_restore: dropping CONSTRAINT billingfollowup_aud billingfollowup_aud_pkey
pg_restore: dropping CONSTRAINT bereavementspecialoccasion_aud bereavementspecialoccasion_aud_pkey
pg_restore: dropping CONSTRAINT bereavementsettings bereavementsettings_bereavementsettings_cd_site_id_hospice__key
pg_restore: dropping CONSTRAINT bereavementsettings_aud bereavementsettings_aud_pkey
pg_restore: dropping CONSTRAINT bereavementcontact_aud bereavementcontact_aud_pkey
pg_restore: dropping CONSTRAINT batchpatientmedication batchpatientmedication_pkey
pg_restore: dropping CONSTRAINT batchpatientmedication_aud batchpatientmedication_aud_pkey
pg_restore: dropping CONSTRAINT batchmedication batchmedication_pkey
pg_restore: dropping CONSTRAINT batchmedication_aud batchmedication_aud_pkey
pg_restore: dropping CONSTRAINT claimbatch batchkey_unique
pg_restore: dropping CONSTRAINT allergy allergy_pkey
pg_restore: dropping CONSTRAINT allergy_aud allergy_aud_pkey
pg_restore: dropping CONSTRAINT adjustmentreason adjustmentreason_pkey
pg_restore: dropping CONSTRAINT adjustmentreason adjustmentreason_code_ukey
pg_restore: dropping CONSTRAINT adjustmentreason_aud adjustmentreason_aud_pkey
pg_restore: dropping CONSTRAINT address address_pkey
pg_restore: dropping CONSTRAINT address_aud address_aud_pkey
pg_restore: dropping CONSTRAINT acl acl_pkey
pg_restore: dropping DEFAULT wagecache id
pg_restore: dropping DEFAULT visittrip id
pg_restore: dropping DEFAULT userpreference id
pg_restore: dropping DEFAULT thirdpartyrolemap id
pg_restore: dropping DEFAULT teamsiteassignment id
pg_restore: dropping DEFAULT teamregionassignment id
pg_restore: dropping DEFAULT teampersonlist id
pg_restore: dropping DEFAULT teampersonassignment id
pg_restore: dropping DEFAULT teamofficeassignment id
pg_restore: dropping DEFAULT tabcontext id
pg_restore: dropping DEFAULT tabconfig id
pg_restore: dropping DEFAULT smartformresponse id
pg_restore: dropping DEFAULT smartformquestion id
pg_restore: dropping DEFAULT smartformexpression id
pg_restore: dropping DEFAULT smartformanswer id
pg_restore: dropping DEFAULT siterolelist id
pg_restore: dropping DEFAULT siteroleassignment id
pg_restore: dropping DEFAULT sitepayertype id
pg_restore: dropping DEFAULT sitenotification id
pg_restore: dropping DEFAULT seqhclaimlog id
pg_restore: dropping DEFAULT scenariotype id
pg_restore: dropping DEFAULT roomboardtier id
pg_restore: dropping DEFAULT roomboardgroup id
pg_restore: dropping DEFAULT rolerate id
pg_restore: dropping DEFAULT rolegroup id
pg_restore: dropping DEFAULT resource id
pg_restore: dropping DEFAULT remitfile id
pg_restore: dropping DEFAULT remitdetail id
pg_restore: dropping DEFAULT remitcheck id
pg_restore: dropping DEFAULT remit id
pg_restore: dropping DEFAULT religion id
pg_restore: dropping DEFAULT region id
pg_restore: dropping DEFAULT referralsourcetype id
pg_restore: dropping DEFAULT referralrejectionreason id
pg_restore: dropping DEFAULT refdbref id
pg_restore: dropping DEFAULT rate id
pg_restore: dropping DEFAULT programsite id
pg_restore: dropping DEFAULT program id
pg_restore: dropping DEFAULT priorauthorization id
pg_restore: dropping DEFAULT principal id
pg_restore: dropping DEFAULT policy_aud id
pg_restore: dropping DEFAULT policy id
pg_restore: dropping DEFAULT physicianservicediagnoses id
pg_restore: dropping DEFAULT physicianservice id
pg_restore: dropping DEFAULT phraselibrary id
pg_restore: dropping DEFAULT phone id
pg_restore: dropping DEFAULT pharmacybenefitmanager id
pg_restore: dropping DEFAULT person_role id
pg_restore: dropping DEFAULT person_dde_credentials id
pg_restore: dropping DEFAULT person id
pg_restore: dropping DEFAULT patientvisit id
pg_restore: dropping DEFAULT patientteam id
pg_restore: dropping DEFAULT patientstatus id
pg_restore: dropping DEFAULT patientroleassignment id
pg_restore: dropping DEFAULT patientreferral id
pg_restore: dropping DEFAULT patientphysician id
pg_restore: dropping DEFAULT patientpersonrelation id
pg_restore: dropping DEFAULT patientoffice id
pg_restore: dropping DEFAULT patientmedication id
pg_restore: dropping DEFAULT patientlevelofcare id
pg_restore: dropping DEFAULT patientinteraction id
pg_restore: dropping DEFAULT patientintakenote_aud id
pg_restore: dropping DEFAULT patientintakenote id
pg_restore: dropping DEFAULT patientinsurance id
pg_restore: dropping DEFAULT patientfacility id
pg_restore: dropping DEFAULT patientdiagnoses id
pg_restore: dropping DEFAULT patientbillingnote_aud id
pg_restore: dropping DEFAULT patientbillingnote id
pg_restore: dropping DEFAULT patient id
pg_restore: dropping DEFAULT pasrecord id
pg_restore: dropping DEFAULT openedvisit id
pg_restore: dropping DEFAULT office id
pg_restore: dropping DEFAULT npiadminlog id
pg_restore: dropping DEFAULT notr id
pg_restore: dropping DEFAULT notificationtype id
pg_restore: dropping DEFAULT noa id
pg_restore: dropping DEFAULT messagetemplate_aud id
pg_restore: dropping DEFAULT messagetemplate id
pg_restore: dropping DEFAULT messageattribute_aud id
pg_restore: dropping DEFAULT messageattribute id
pg_restore: dropping DEFAULT medsandprescriptions id
pg_restore: dropping DEFAULT medicareintermediaryinfo id
pg_restore: dropping DEFAULT medicareintermediary id
pg_restore: dropping DEFAULT locationconfig id
pg_restore: dropping DEFAULT lettertemplate id
pg_restore: dropping DEFAULT language id
pg_restore: dropping DEFAULT labeltemplate id
pg_restore: dropping DEFAULT insurancecoverage id
pg_restore: dropping DEFAULT insurancecarriertob id
pg_restore: dropping DEFAULT insurancecarrierrevcode id
pg_restore: dropping DEFAULT insurancecarrierrates id
pg_restore: dropping DEFAULT insurancecarrierrate id
pg_restore: dropping DEFAULT insurancecarrier_site_financialcredentials id
pg_restore: dropping DEFAULT insurancecarrier id
pg_restore: dropping DEFAULT hospice id
pg_restore: dropping DEFAULT hbuniquenumber id
pg_restore: dropping DEFAULT hbrole id
pg_restore: dropping DEFAULT griefrisk id
pg_restore: dropping DEFAULT finalclaimcancelclaim_aud id
pg_restore: dropping DEFAULT finalclaimcancelclaim id
pg_restore: dropping DEFAULT fileuploadlog id
pg_restore: dropping DEFAULT filescheduler id
pg_restore: dropping DEFAULT favprocedurecode id
pg_restore: dropping DEFAULT facilitytype id
pg_restore: dropping DEFAULT facility id
pg_restore: dropping DEFAULT facesheet_phonetypes_aud id
pg_restore: dropping DEFAULT facesheet_phonetypes id
pg_restore: dropping DEFAULT externallink id
pg_restore: dropping DEFAULT emaillisttype id
pg_restore: dropping DEFAULT eligibility id
pg_restore: dropping DEFAULT electionperiod id
pg_restore: dropping DEFAULT electiondefinition id
pg_restore: dropping DEFAULT displayviewfields id
pg_restore: dropping DEFAULT displayfield id
pg_restore: dropping DEFAULT dischargereason id
pg_restore: dropping DEFAULT dischargedaybillingrule id
pg_restore: dropping DEFAULT dischargecode id
pg_restore: dropping DEFAULT dischargeclaimnotrclaim_aud id
pg_restore: dropping DEFAULT dischargeclaimnotrclaim id
pg_restore: dropping DEFAULT dancefloorpanel id
pg_restore: dropping DEFAULT coverageset_aud id
pg_restore: dropping DEFAULT coverageset id
pg_restore: dropping DEFAULT coverage_aud id
pg_restore: dropping DEFAULT coverage id
pg_restore: dropping DEFAULT contract id
pg_restore: dropping DEFAULT clinical_data id
pg_restore: dropping DEFAULT claimtransactiondetail id
pg_restore: dropping DEFAULT claimtransaction id
pg_restore: dropping DEFAULT claimstatusinquirylog id
pg_restore: dropping DEFAULT claimstatushistory id
pg_restore: dropping DEFAULT claimrevenuedetail id
pg_restore: dropping DEFAULT claimrequestlog id
pg_restore: dropping DEFAULT claimpatientvisit id
pg_restore: dropping DEFAULT claimmedication id
pg_restore: dropping DEFAULT claimcmsstatus id
pg_restore: dropping DEFAULT claimchanges id
pg_restore: dropping DEFAULT claimbatch id
pg_restore: dropping DEFAULT claim id
pg_restore: dropping DEFAULT church id
pg_restore: dropping DEFAULT certificationnarrative_aud id
pg_restore: dropping DEFAULT certificationnarrative id
pg_restore: dropping DEFAULT certification_patientinteraction id
pg_restore: dropping DEFAULT certification id
pg_restore: dropping DEFAULT booksclosedhistory id
pg_restore: dropping DEFAULT billlog id
pg_restore: dropping DEFAULT billingfollowup id
pg_restore: dropping DEFAULT bereavementspecialoccasion_aud id
pg_restore: dropping DEFAULT bereavementspecialoccasion id
pg_restore: dropping DEFAULT bereavementsettings id
pg_restore: dropping DEFAULT bereavementcontact_aud id
pg_restore: dropping DEFAULT bereavementcontact id
pg_restore: dropping DEFAULT batchpatientmedication id
pg_restore: dropping DEFAULT batchmedication id
pg_restore: dropping DEFAULT allergy id
pg_restore: dropping DEFAULT adjustmentreason id
pg_restore: dropping DEFAULT address id
pg_restore: dropping DEFAULT acl id
pg_restore: dropping SEQUENCE wagecache_id_seq
pg_restore: dropping TABLE wagecache_aud
pg_restore: dropping TABLE wagecache
pg_restore: dropping SEQUENCE visittrip_id_seq
pg_restore: dropping TABLE visittrip
pg_restore: dropping SEQUENCE userpreference_id_seq
pg_restore: dropping TABLE userpreference_aud
pg_restore: dropping TABLE userpreference
pg_restore: dropping TABLE tier_rates_aud
pg_restore: dropping TABLE tier_rates
pg_restore: dropping SEQUENCE thirdpartyrolemap_id_seq
pg_restore: dropping TABLE thirdpartyrolemap_aud
pg_restore: dropping TABLE thirdpartyrolemap
pg_restore: dropping TABLE temp_patientdiagnoses_v1
pg_restore: dropping TABLE temp_certification
pg_restore: dropping SEQUENCE teamsiteassignment_id_seq
pg_restore: dropping TABLE teamsiteassignment_aud
pg_restore: dropping SEQUENCE teamregionassignment_id_seq
pg_restore: dropping TABLE teamregionassignment_aud
pg_restore: dropping TABLE teamregionassignment
pg_restore: dropping SEQUENCE teampersonlist_id_seq
pg_restore: dropping TABLE teampersonlist_aud
pg_restore: dropping SEQUENCE teampersonassignment_id_seq
pg_restore: dropping TABLE teampersonassignment_aud
pg_restore: dropping TABLE teampersonassignment
pg_restore: dropping SEQUENCE teamofficeassignment_id_seq
pg_restore: dropping TABLE teamofficeassignment_aud
pg_restore: dropping TABLE teamofficeassignment
pg_restore: dropping SEQUENCE tabcontext_id_seq
pg_restore: dropping TABLE tabcontext
pg_restore: dropping SEQUENCE tabconfig_id_seq
pg_restore: dropping TABLE tabconfig
pg_restore: dropping SEQUENCE smartformresponse_id_seq
pg_restore: dropping TABLE smartformresponse_aud
pg_restore: dropping TABLE smartformresponse
pg_restore: dropping SEQUENCE smartformquestion_id_seq
pg_restore: dropping TABLE smartformquestion_aud
pg_restore: dropping TABLE smartformquestion
pg_restore: dropping SEQUENCE smartformexpression_id_seq
pg_restore: dropping TABLE smartformexpression_aud
pg_restore: dropping TABLE smartformexpression
pg_restore: dropping SEQUENCE smartformanswer_id_seq
pg_restore: dropping TABLE smartformanswer_aud
pg_restore: dropping TABLE smartformanswer
pg_restore: dropping SEQUENCE siterolelist_id_seq
pg_restore: dropping TABLE siterolelist_aud
pg_restore: dropping TABLE siterolelist
pg_restore: dropping SEQUENCE siteroleassignment_id_seq
pg_restore: dropping TABLE siteroleassignment_aud
pg_restore: dropping TABLE siteroleassignment
pg_restore: dropping SEQUENCE sitepayertype_id_seq
pg_restore: dropping TABLE sitepayertype_aud
pg_restore: dropping TABLE sitepayertype
pg_restore: dropping SEQUENCE sitenotification_id_seq
pg_restore: dropping TABLE sitenotification_email_aud
pg_restore: dropping TABLE sitenotification_email
pg_restore: dropping TABLE sitenotification_aud
pg_restore: dropping TABLE sitenotification
pg_restore: dropping SEQUENCE seqhclaimlog_id_seq
pg_restore: dropping TABLE seqhclaimlog_aud
pg_restore: dropping TABLE seqhclaimlog
pg_restore: dropping TABLE selec
pg_restore: dropping SEQUENCE scenariotype_id_seq
pg_restore: dropping TABLE scenariotype
pg_restore: dropping SEQUENCE roomboardtier_id_seq
pg_restore: dropping TABLE roomboardtier_aud
pg_restore: dropping TABLE roomboardgroup_tiers_aud
pg_restore: dropping TABLE roomboardgroup_tiers
pg_restore: dropping SEQUENCE roomboardgroup_id_seq
pg_restore: dropping TABLE roomboardgroup_aud
pg_restore: dropping SEQUENCE rolerate_id_seq
pg_restore: dropping TABLE rolerate_aud
pg_restore: dropping TABLE rolerate
pg_restore: dropping SEQUENCE rolegroup_id_seq
pg_restore: dropping TABLE rolegroup_aud
pg_restore: dropping TABLE role_rolerate_aud
pg_restore: dropping TABLE revinfo
pg_restore: dropping SEQUENCE resource_id_seq
pg_restore: dropping TABLE resource_aud
pg_restore: dropping TABLE resource
pg_restore: dropping TABLE remitfile_remitcheck_aud
pg_restore: dropping SEQUENCE remitfile_id_seq
pg_restore: dropping TABLE remitfile_aud
pg_restore: dropping TABLE remitfile
pg_restore: dropping SEQUENCE remitdetail_id_seq
pg_restore: dropping TABLE remitdetail_aud
pg_restore: dropping TABLE remitdetail
pg_restore: dropping SEQUENCE remitcheck_id_seq
pg_restore: dropping TABLE remitcheck_aud
pg_restore: dropping TABLE remitcheck
pg_restore: dropping SEQUENCE remit_id_seq
pg_restore: dropping TABLE remit_aud
pg_restore: dropping TABLE remit
pg_restore: dropping SEQUENCE religion_id_seq
pg_restore: dropping TABLE religion_aud
pg_restore: dropping SEQUENCE region_id_seq
pg_restore: dropping TABLE region_aud
pg_restore: dropping TABLE region
pg_restore: dropping SEQUENCE referralsourcetype_id_seq
pg_restore: dropping TABLE referralsourcetype_aud
pg_restore: dropping SEQUENCE referralrejectionreason_id_seq
pg_restore: dropping TABLE referralrejectionreason_aud
pg_restore: dropping SEQUENCE refdbref_id_seq
pg_restore: dropping TABLE refdbref
pg_restore: dropping SEQUENCE rate_id_seq
pg_restore: dropping TABLE rate_aud
pg_restore: dropping TABLE rate
pg_restore: dropping SEQUENCE programsite_id_seq
pg_restore: dropping TABLE programsite_aud
pg_restore: dropping SEQUENCE program_id_seq
pg_restore: dropping TABLE program_aud
pg_restore: dropping TABLE procedurecode_program_aud
pg_restore: dropping TABLE procedurecode_program
pg_restore: dropping SEQUENCE procedurecode_id_seq
pg_restore: dropping SEQUENCE priorauthorization_id_seq
pg_restore: dropping TABLE priorauthorization_aud
pg_restore: dropping TABLE priorauthorization
pg_restore: dropping SEQUENCE principal_id_seq
pg_restore: dropping TABLE principal_aud
pg_restore: dropping TABLE policy_mbi
pg_restore: dropping SEQUENCE policy_id_seq
pg_restore: dropping SEQUENCE policy_aud_id_seq
pg_restore: dropping TABLE policy_aud
pg_restore: dropping SEQUENCE physicianservicediagnoses_id_seq
pg_restore: dropping TABLE physicianservicediagnoses_aud
pg_restore: dropping TABLE physicianservicediagnoses
pg_restore: dropping SEQUENCE physicianservice_id_seq
pg_restore: dropping TABLE physicianservice_aud
pg_restore: dropping TABLE physicianservice
pg_restore: dropping SEQUENCE phraselibrary_id_seq
pg_restore: dropping TABLE phraselibrary_aud
pg_restore: dropping TABLE phraselibrary
pg_restore: dropping TABLE phone_person_aud
pg_restore: dropping TABLE phone_patient_aud
pg_restore: dropping TABLE phone_office_aud
pg_restore: dropping TABLE phone_office
pg_restore: dropping TABLE phone_insurancecarrier_aud
pg_restore: dropping TABLE phone_insurancecarrier
pg_restore: dropping SEQUENCE phone_id_seq
pg_restore: dropping TABLE phone_hospice_aud
pg_restore: dropping TABLE phone_hospice
pg_restore: dropping TABLE phone_facility_aud
pg_restore: dropping TABLE phone_church_aud
pg_restore: dropping TABLE phone_church
pg_restore: dropping TABLE phone_aud
pg_restore: dropping SEQUENCE pharmacybenefitmanager_id_seq
pg_restore: dropping TABLE pharmacybenefitmanager_aud
pg_restore: dropping TABLE pharmacybenefitmanager
pg_restore: dropping TABLE person_smartformresponse_aud
pg_restore: dropping TABLE person_smartformresponse
pg_restore: dropping TABLE person_site_aud
pg_restore: dropping SEQUENCE person_role_id_seq
pg_restore: dropping TABLE person_role_aud
pg_restore: dropping TABLE person_removeblanksback
pg_restore: dropping TABLE person_region_aud
pg_restore: dropping TABLE person_region
pg_restore: dropping TABLE person_programsite_aud
pg_restore: dropping TABLE person_office_aud
pg_restore: dropping TABLE person_office
pg_restore: dropping SEQUENCE person_id_seq
pg_restore: dropping TABLE person_hospice_aud
pg_restore: dropping TABLE person_hospice
pg_restore: dropping SEQUENCE person_dde_credentials_id_seq
pg_restore: dropping TABLE person_dde_credentials_aud
pg_restore: dropping TABLE person_dde_credentials
pg_restore: dropping TABLE person_aud
pg_restore: dropping SEQUENCE patientvisit_id_seq
pg_restore: dropping TABLE patientvisit_aud
pg_restore: dropping SEQUENCE patientteam_id_seq
pg_restore: dropping TABLE patientteam_aud
pg_restore: dropping TABLE patientteam
pg_restore: dropping SEQUENCE patientstatus_id_seq
pg_restore: dropping TABLE patientstatus_aud
pg_restore: dropping SEQUENCE patientroleassignment_id_seq
pg_restore: dropping TABLE patientroleassignment_aud
pg_restore: dropping SEQUENCE patientreferral_id_seq
pg_restore: dropping TABLE patientreferral_aud
pg_restore: dropping SEQUENCE patientphysician_id_seq
pg_restore: dropping TABLE patientphysician_aud
pg_restore: dropping TABLE patientpersonrelation_types_aud
pg_restore: dropping SEQUENCE patientpersonrelation_id_seq
pg_restore: dropping TABLE patientpersonrelation_aud
pg_restore: dropping SEQUENCE patientoffice_id_seq
pg_restore: dropping TABLE patientoffice_aud
pg_restore: dropping TABLE patientoffice
pg_restore: dropping SEQUENCE patientmedication_id_seq
pg_restore: dropping TABLE patientmedication_aud
pg_restore: dropping TABLE patientmedication
pg_restore: dropping SEQUENCE patientlevelofcare_id_seq
pg_restore: dropping TABLE patientlevelofcare_aud
pg_restore: dropping TABLE patientinteraction_patientvisit_aud
pg_restore: dropping TABLE patientinteraction_patientstatus_aud
pg_restore: dropping TABLE patientinteraction_patientlevelofcare_aud
pg_restore: dropping TABLE patientinteraction_patientfacility_aud
pg_restore: dropping TABLE patientinteraction_patientdiagnoses_aud
pg_restore: dropping SEQUENCE patientinteraction_id_seq
pg_restore: dropping TABLE patientinteraction_aud
pg_restore: dropping SEQUENCE patientintakenote_id_seq
pg_restore: dropping SEQUENCE patientintakenote_aud_id_seq
pg_restore: dropping TABLE patientintakenote_aud
pg_restore: dropping TABLE patientintakenote
pg_restore: dropping SEQUENCE patientinsurance_id_seq
pg_restore: dropping TABLE patientinsurance_aud
pg_restore: dropping TABLE patientinsurance
pg_restore: dropping SEQUENCE patientfacility_id_seq
pg_restore: dropping TABLE patientfacility_aud
pg_restore: dropping SEQUENCE patientdiagnoses_id_seq
pg_restore: dropping TABLE patientdiagnoses_aud
pg_restore: dropping SEQUENCE patientbillingnote_id_seq
pg_restore: dropping SEQUENCE patientbillingnote_aud_id_seq
pg_restore: dropping TABLE patientbillingnote_aud
pg_restore: dropping TABLE patientbillingnote
pg_restore: dropping TABLE patient_patientmedication_aud
pg_restore: dropping SEQUENCE patient_id_seq
pg_restore: dropping TABLE patient_diagnosis_aud
pg_restore: dropping TABLE patient_aud
pg_restore: dropping TABLE patient_allergy_aud
pg_restore: dropping TABLE patientvisit
pg_restore: dropping TABLE passwordverification_aud
pg_restore: dropping TABLE passwordverification
pg_restore: dropping SEQUENCE pasrecord_id_seq
pg_restore: dropping TABLE pasrecord
pg_restore: dropping SEQUENCE openedvisit_id_seq
pg_restore: dropping TABLE openedvisit_aud
pg_restore: dropping TABLE openedvisit
pg_restore: dropping SEQUENCE office_id_seq
pg_restore: dropping TABLE office_aud
pg_restore: dropping SEQUENCE npiadminlog_id_seq
pg_restore: dropping TABLE npiadminlog_aud
pg_restore: dropping TABLE npiadminlog
pg_restore: dropping SEQUENCE notr_id_seq
pg_restore: dropping TABLE notr_aud
pg_restore: dropping TABLE notr
pg_restore: dropping SEQUENCE notificationtype_id_seq
pg_restore: dropping TABLE notificationtype_aud
pg_restore: dropping TABLE notificationtype
pg_restore: dropping SEQUENCE noa_id_seq
pg_restore: dropping TABLE noa_aud
pg_restore: dropping TABLE noa
pg_restore: dropping TABLE newsitem_aud
pg_restore: dropping TABLE newsitem
pg_restore: dropping TABLE newranks_tmp
pg_restore: dropping SEQUENCE messagetemplate_id_seq
pg_restore: dropping SEQUENCE messagetemplate_aud_id_seq
pg_restore: dropping TABLE messagetemplate_aud
pg_restore: dropping TABLE messagetemplate
pg_restore: dropping SEQUENCE messageattribute_id_seq
pg_restore: dropping SEQUENCE messageattribute_aud_id_seq
pg_restore: dropping TABLE messageattribute_aud
pg_restore: dropping TABLE messageattribute
pg_restore: dropping SEQUENCE medsandprescriptions_id_seq
pg_restore: dropping TABLE medsandprescriptions_aud
pg_restore: dropping TABLE medsandprescriptions
pg_restore: dropping SEQUENCE medicareintermediaryinfo_id_seq
pg_restore: dropping TABLE medicareintermediaryinfo_aud
pg_restore: dropping SEQUENCE medicareintermediary_id_seq
pg_restore: dropping TABLE medicareintermediary_aud
pg_restore: dropping TABLE medicareintermediaryinfo
pg_restore: dropping TABLE medicareintermediary
pg_restore: dropping SEQUENCE medicareeligibility_id_seq
pg_restore: dropping SEQUENCE locationconfig_id_seq
pg_restore: dropping TABLE locationconfig
pg_restore: dropping SEQUENCE lettertemplate_id_seq
pg_restore: dropping TABLE lettertemplate_aud
pg_restore: dropping TABLE lettertemplate
pg_restore: dropping SEQUENCE language_id_seq
pg_restore: dropping TABLE language_aud
pg_restore: dropping SEQUENCE labeltemplate_id_seq
pg_restore: dropping TABLE labeltemplate_aud
pg_restore: dropping TABLE labeltemplate
pg_restore: dropping SEQUENCE insuranceprovider_id_seq
pg_restore: dropping SEQUENCE insuranceholder_id_seq
pg_restore: dropping TABLE insurancecoverage_aud
pg_restore: dropping TABLE insurancecoverage
pg_restore: dropping SEQUENCE insurancecarriertob_id_seq
pg_restore: dropping TABLE insurancecarriertob_aud
pg_restore: dropping TABLE insurancecarriertob
pg_restore: dropping SEQUENCE insurancecarrierrevcode_id_seq
pg_restore: dropping TABLE insurancecarrierrevcode_aud
pg_restore: dropping TABLE insurancecarrierrevcode
pg_restore: dropping TABLE insurancecarrierrates_insurancecarrierrate_aud
pg_restore: dropping SEQUENCE insurancecarrierrates_id_seq
pg_restore: dropping TABLE insurancecarrierrates_aud
pg_restore: dropping TABLE insurancecarrierrates
pg_restore: dropping SEQUENCE insurancecarrierrate_id_seq
pg_restore: dropping TABLE insurancecarrierrate_aud
pg_restore: dropping TABLE insurancecarrierrate
pg_restore: dropping SEQUENCE insurancecarrier_site_financialcredentials_id_seq
pg_restore: dropping TABLE insurancecarrier_site_financialcredentials_aud
pg_restore: dropping TABLE insurancecarrier_site_financialcredentials
pg_restore: dropping TABLE insurancecarrier_insurancecarriertob_aud
pg_restore: dropping TABLE insurancecarrier_insurancecarriersitecredentials_aud
pg_restore: dropping TABLE insurancecarrier_insurancecarrierrevcode_aud
pg_restore: dropping TABLE insurancecarrier_insurancecarrierrates_aud
pg_restore: dropping SEQUENCE insurancecarrier_id_seq
pg_restore: dropping TABLE insurancecarrier_dischargedaybillingrule_aud
pg_restore: dropping TABLE insurancecarrier_aud
pg_restore: dropping SEQUENCE hospice_id_seq
pg_restore: dropping TABLE hospice_aud
pg_restore: dropping TABLE hospice_acl_aud
pg_restore: dropping TABLE hospice_acl
pg_restore: dropping SEQUENCE hbuniquenumber_id_seq
pg_restore: dropping TABLE hbuniquenumber
pg_restore: dropping SEQUENCE hbrole_id_seq
pg_restore: dropping TABLE hbrole_aud
pg_restore: dropping SEQUENCE griefrisk_id_seq
pg_restore: dropping TABLE griefrisk_aud
pg_restore: dropping TABLE griefrisk
pg_restore: dropping SEQUENCE finalclaimcancelclaim_id_seq
pg_restore: dropping SEQUENCE finalclaimcancelclaim_aud_id_seq
pg_restore: dropping TABLE finalclaimcancelclaim_aud
pg_restore: dropping TABLE finalclaimcancelclaim
pg_restore: dropping SEQUENCE fileuploadlog_id_seq
pg_restore: dropping TABLE fileuploadlog_aud
pg_restore: dropping TABLE fileuploadlog
pg_restore: dropping SEQUENCE filescheduler_id_seq
pg_restore: dropping TABLE filescheduler
pg_restore: dropping TABLE favprocedurecode_aud
pg_restore: dropping TABLE favprocedurecode
pg_restore: dropping TABLE facilitytype_loc_aud
pg_restore: dropping TABLE facilitytype_loc
pg_restore: dropping SEQUENCE facilitytype_id_seq
pg_restore: dropping TABLE facilitytype_aud
pg_restore: dropping TABLE facility_smartformresponse_aud
pg_restore: dropping TABLE facility_smartformresponse
pg_restore: dropping TABLE facility_offices_aud
pg_restore: dropping TABLE facility_offices
pg_restore: dropping SEQUENCE facility_id_seq
pg_restore: dropping TABLE facility_facilitytypes_aud
pg_restore: dropping TABLE facility_facilitytypes
pg_restore: dropping TABLE facility_aud
pg_restore: dropping SEQUENCE facesheet_phonetypes_id_seq
pg_restore: dropping SEQUENCE facesheet_phonetypes_aud_id_seq
pg_restore: dropping TABLE facesheet_phonetypes_aud
pg_restore: dropping SEQUENCE externallink_id_seq
pg_restore: dropping TABLE externallink
pg_restore: dropping TABLE episode_exception
pg_restore: dropping SEQUENCE emaillisttype_id_seq
pg_restore: dropping TABLE emaillisttype_aud
pg_restore: dropping TABLE emaillisttype
pg_restore: dropping TABLE email_list_person_aud
pg_restore: dropping TABLE email_list_person
pg_restore: dropping TABLE eligibility_smartformresponse_aud
pg_restore: dropping TABLE eligibility_smartformresponse
pg_restore: dropping TABLE eligibility_aud
pg_restore: dropping SEQUENCE electionperiod_id_seq
pg_restore: dropping TABLE electionperiod_aud
pg_restore: dropping TABLE electiondefinition_aud
pg_restore: dropping TABLE downloadxml
pg_restore: dropping SEQUENCE displayviewfields_id_seq
pg_restore: dropping TABLE displayviewfields_displayfield_aud
pg_restore: dropping TABLE displayviewfields_displayfield
pg_restore: dropping TABLE displayviewfields_aud
pg_restore: dropping TABLE displayviewfields
pg_restore: dropping SEQUENCE displayfield_id_seq
pg_restore: dropping TABLE displayfield_aud
pg_restore: dropping TABLE displayfield
pg_restore: dropping TABLE dischargereason_program_aud
pg_restore: dropping TABLE dischargereason_program
pg_restore: dropping SEQUENCE dischargereason_id_seq
pg_restore: dropping TABLE dischargereason_aud
pg_restore: dropping SEQUENCE dischargedaybillingrule_id_seq
pg_restore: dropping TABLE dischargedaybillingrule_aud
pg_restore: dropping TABLE dischargedaybillingrule
pg_restore: dropping TABLE dischargecode_program_aud
pg_restore: dropping TABLE dischargecode_program
pg_restore: dropping SEQUENCE dischargecode_id_seq
pg_restore: dropping TABLE dischargecode_aud
pg_restore: dropping SEQUENCE dischargeclaimnotrclaim_id_seq
pg_restore: dropping SEQUENCE dischargeclaimnotrclaim_aud_id_seq
pg_restore: dropping TABLE dischargeclaimnotrclaim_aud
pg_restore: dropping TABLE dischargeclaimnotrclaim
pg_restore: dropping TABLE datafix_log
pg_restore: dropping TABLE databasechangeloglock
pg_restore: dropping TABLE databasechangelog
pg_restore: dropping SEQUENCE dancefloorpanel_id_seq
pg_restore: dropping TABLE dancefloorpanel_aud
pg_restore: dropping TABLE dancefloorpanel
pg_restore: dropping SEQUENCE coverageset_id_seq
pg_restore: dropping SEQUENCE coverageset_aud_id_seq
pg_restore: dropping TABLE coverageset_aud
pg_restore: dropping SEQUENCE coverage_id_seq
pg_restore: dropping SEQUENCE coverage_aud_id_seq
pg_restore: dropping TABLE coverage_aud
pg_restore: dropping SEQUENCE contract_id_seq
pg_restore: dropping TABLE contract_aud
pg_restore: dropping TABLE contract
pg_restore: dropping SEQUENCE clinical_data_id_seq
pg_restore: dropping TABLE clinical_data
pg_restore: dropping SEQUENCE claimtransactiondetail_id_seq
pg_restore: dropping TABLE claimtransactiondetail_aud
pg_restore: dropping TABLE claimtransactiondetail
pg_restore: dropping TABLE claimtransaction_claimtransactiondetail_aud
pg_restore: dropping TABLE claimtransaction_aud
pg_restore: dropping SEQUENCE claimstatusinquirylog_id_seq
pg_restore: dropping TABLE claimstatusinquirylog_aud
pg_restore: dropping TABLE claimstatusinquirylog
pg_restore: dropping SEQUENCE claimstatushistory_id_seq
pg_restore: dropping TABLE claimstatushistory_aud
pg_restore: dropping TABLE claimstatushistory
pg_restore: dropping TABLE claimstatusdata_aud
pg_restore: dropping SEQUENCE claimrevenuedetail_id_seq
pg_restore: dropping TABLE claimrevenuedetail_aud
pg_restore: dropping TABLE claimrevenuedetail
pg_restore: dropping SEQUENCE claimrequestlog_id_seq
pg_restore: dropping TABLE claimrequestlog_aud
pg_restore: dropping TABLE claimrequestlog
pg_restore: dropping SEQUENCE claimpatientvisit_id_seq
pg_restore: dropping TABLE claimpatientvisit_aud
pg_restore: dropping TABLE claimpatientvisit
pg_restore: dropping SEQUENCE claimmedication_id_seq
pg_restore: dropping TABLE claimmedication_aud
pg_restore: dropping TABLE claimmedication
pg_restore: dropping SEQUENCE claimdetail_id_seq
pg_restore: dropping SEQUENCE claimcmsstatus_id_seq
pg_restore: dropping TABLE claimcmsstatus_aud
pg_restore: dropping SEQUENCE claimchanges_id_seq
pg_restore: dropping TABLE claimchanges_aud
pg_restore: dropping TABLE claimchanges
pg_restore: dropping SEQUENCE claimbatch_id_seq
pg_restore: dropping TABLE claimbatch_gen
pg_restore: dropping TABLE claimbatch_aud
pg_restore: dropping TABLE claimstatusdata
pg_restore: dropping TABLE claimcmsstatus
pg_restore: dropping TABLE claim_prebill
pg_restore: dropping TABLE claim_log
pg_restore: dropping SEQUENCE claim_id_seq
pg_restore: dropping TABLE claim_claimtransactiondetail_aud
pg_restore: dropping TABLE claim_claimtransaction_aud
pg_restore: dropping TABLE claim_claimrevenuedetail_aud
pg_restore: dropping TABLE claim_claimbatch_aud
pg_restore: dropping TABLE claim_aud
pg_restore: dropping TABLE church_pas_records_aud
pg_restore: dropping TABLE church_pas_records
pg_restore: dropping SEQUENCE church_id_seq
pg_restore: dropping TABLE church_aud
pg_restore: dropping SEQUENCE certificationnarrative_id_seq
pg_restore: dropping SEQUENCE certificationnarrative_aud_id_seq
pg_restore: dropping TABLE certificationnarrative_aud
pg_restore: dropping TABLE certificationnarrative
pg_restore: dropping SEQUENCE certification_patientinteraction_id_seq
pg_restore: dropping TABLE certification_patientinteraction_aud
pg_restore: dropping TABLE certification_patientinteraction
pg_restore: dropping SEQUENCE certification_id_seq
pg_restore: dropping TABLE certification_aud
pg_restore: dropping TABLE certification
pg_restore: dropping SEQUENCE booksclosedhistory_id_seq
pg_restore: dropping TABLE booksclosedhistory_aud
pg_restore: dropping TABLE booksclosedhistory
pg_restore: dropping SEQUENCE billlog_id_seq
pg_restore: dropping TABLE billlog_aud
pg_restore: dropping TABLE billlog
pg_restore: dropping SEQUENCE billingfollowup_id_seq
pg_restore: dropping TABLE billingfollowup_aud
pg_restore: dropping TABLE billingfollowup
pg_restore: dropping TABLE roomboardtier
pg_restore: dropping TABLE roomboardgroup
pg_restore: dropping SEQUENCE bereavementspecialoccasion_id_seq
pg_restore: dropping SEQUENCE bereavementspecialoccasion_aud_id_seq
pg_restore: dropping TABLE bereavementspecialoccasion_aud
pg_restore: dropping TABLE bereavementspecialoccasion
pg_restore: dropping SEQUENCE bereavementsettings_id_seq
pg_restore: dropping TABLE bereavementsettings_aud
pg_restore: dropping TABLE bereavementsettings
pg_restore: dropping SEQUENCE bereavementcontact_id_seq
pg_restore: dropping SEQUENCE bereavementcontact_aud_id_seq
pg_restore: dropping TABLE bereavementcontact_aud
pg_restore: dropping TABLE bereavementcontact
pg_restore: dropping TABLE claimbatch
pg_restore: dropping SEQUENCE batchpatientmedication_id_seq
pg_restore: dropping TABLE batchpatientmedication_aud
pg_restore: dropping TABLE batchpatientmedication
pg_restore: dropping SEQUENCE batchmedication_id_seq
pg_restore: dropping TABLE batchmedication_aud
pg_restore: dropping TABLE batchmedication
pg_restore: dropping TABLE claimtransaction
pg_restore: dropping TABLE claim_claimbatch
pg_restore: dropping TABLE claim
pg_restore: dropping TABLE backup_before_dx_redesign_patientdiagnoses
pg_restore: dropping SEQUENCE allergy_id_seq
pg_restore: dropping TABLE allergy_aud
pg_restore: dropping TABLE person_site
pg_restore: dropping TABLE person_programsite
pg_restore: dropping TABLE patientlevelofcare
pg_restore: dropping TABLE adminlink_roles_aud
pg_restore: dropping TABLE adminlink_roles
pg_restore: dropping SEQUENCE adjustmentreason_id_seq
pg_restore: dropping TABLE adjustmentreason_aud
pg_restore: dropping TABLE adjustmentreason
pg_restore: dropping SEQUENCE address_id_seq
pg_restore: dropping TABLE address_aud
pg_restore: dropping TABLE patientdiagnoses
pg_restore: dropping SEQUENCE acl_id_seq
pg_restore: dropping TABLE acl_aud
pg_restore: dropping TABLE acl
pg_restore: dropping TABLE eligibility
pg_restore: dropping TABLE rolegroup
pg_restore: dropping TABLE person_role
pg_restore: dropping TABLE teamsiteassignment
pg_restore: dropping TABLE dischargecode
pg_restore: dropping TABLE patientfacility
pg_restore: dropping TABLE facilitytype
pg_restore: dropping TABLE teampersonlist
pg_restore: dropping TABLE patientstatus
pg_restore: dropping TABLE patientinteraction
pg_restore: dropping TABLE patientphysician
pg_restore: dropping TABLE phone_patient
pg_restore: dropping TABLE phone_facility
pg_restore: dropping TABLE religion
pg_restore: dropping TABLE referralsourcetype
pg_restore: dropping TABLE referralrejectionreason
pg_restore: dropping TABLE programsite
pg_restore: dropping TABLE program
pg_restore: dropping TABLE patientreferral
pg_restore: dropping TABLE patient
pg_restore: dropping TABLE office
pg_restore: dropping TABLE language
pg_restore: dropping TABLE hospice
pg_restore: dropping TABLE facility
pg_restore: dropping TABLE electionperiod
pg_restore: dropping TABLE electiondefinition
pg_restore: dropping TABLE dischargereason
pg_restore: dropping TABLE church
pg_restore: dropping TABLE allergy
pg_restore: dropping TABLE coverageset
pg_restore: dropping TABLE coverage
pg_restore: dropping TABLE patientpersonrelation_types
pg_restore: dropping TABLE patientpersonrelation
pg_restore: dropping TABLE address
pg_restore: dropping TABLE person
pg_restore: dropping TABLE patientroleassignment
pg_restore: dropping TABLE hbrole
pg_restore: dropping TABLE facesheet_phonetypes
pg_restore: dropping TABLE phone_person
pg_restore: dropping TABLE phone
pg_restore: dropping TABLE policy
pg_restore: dropping TABLE insurancecarrier
pg_restore: dropping TABLE principal
pg_restore: creating TABLE "public.principal"
pg_restore: creating TABLE "public.insurancecarrier"
pg_restore: creating TABLE "public.policy"
pg_restore: creating TABLE "public.phone"
pg_restore: creating TABLE "public.phone_person"
pg_restore: creating TABLE "public.facesheet_phonetypes"
pg_restore: creating TABLE "public.hbrole"
pg_restore: creating TABLE "public.patientroleassignment"
pg_restore: creating TABLE "public.person"
pg_restore: while PROCESSING TOC:
pg_restore: from TOC entry 208; 1259 16783593 TABLE person hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.personnumber_seq" does not exist
Command was: CREATE TABLE public.person (
    id bigint NOT NULL,
    issystemdefined boolean NOT NULL,
    lastupdatetime timestamp without time zone,
    lastupdateuser character varying(255),
    version timestamp without time zone NOT NULL,
    deleted boolean,
    company character varying(255),
    credentials character varying(255),
    dob timestamp without time zone,
    email character varying(255),
    employmentenddate timestamp without time zone,
    employmentstartdate timestamp without time zone,
    ethnicity character varying(255),
    firstname character varying(255),
    sex character varying(255),
    hasldapprofile boolean,
    imageurl character varying(255),
    lastname character varying(255),
    licenseexpdate timestamp without time zone,
    licensenumber character varying(255),
    npi character varying(255),
    pasbin character varying(255),
    pasid character varying(255),
    race character varying(255),
    salutation character varying(255),
    serialnumber character varying(255),
    ssn character varying(255),
    hospice_id bigint,
    address_id bigint,
    active boolean DEFAULT false,
    principal_id bigint,
    personnumber character varying(255) DEFAULT (nextval('public.personnumber_seq'::regclass))::character varying,
    taxonomycode character varying(255),
    notes text,
    dateactive timestamp without time zone,
    clearscriptslogin character varying(255)
);


pg_restore: creating TABLE "public.address"
pg_restore: creating TABLE "public.patientpersonrelation"
pg_restore: creating TABLE "public.patientpersonrelation_types"
pg_restore: creating TABLE "public.coverage"
pg_restore: creating TABLE "public.coverageset"
pg_restore: creating TABLE "public.allergy"
pg_restore: creating TABLE "public.church"
pg_restore: creating TABLE "public.dischargereason"
pg_restore: creating TABLE "public.electiondefinition"
pg_restore: creating TABLE "public.electionperiod"
pg_restore: creating TABLE "public.facility"
pg_restore: creating TABLE "public.hospice"
pg_restore: creating TABLE "public.language"
pg_restore: creating TABLE "public.office"
pg_restore: creating TABLE "public.patient"
pg_restore: from TOC entry 268; 1259 16783913 TABLE patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patientnumber_seq" does not exist
Command was: CREATE TABLE public.patient (
    id bigint NOT NULL,
    issystemdefined boolean NOT NULL,
    lastupdatetime timestamp without time zone,
    lastupdateuser character varying(255),
    version timestamp without time zone NOT NULL,
    admitcounty character varying(255),
    anniversarydate timestamp without time zone,
    atrisk boolean,
    causeofstress character varying(3000),
    dateofbirth timestamp without time zone,
    donotresuscitate boolean,
    emotionalcontition character varying(255),
    ethnicity character varying(255),
    familydiagnosisawareness character varying(255),
    familyprognosisawareness character varying(255),
    firstname character varying(255),
    lastname character varying(255),
    maritalstatus character varying(255),
    nickname character varying(255),
    notes character varying(3000),
    pasbin character varying(255),
    pasid character varying(255),
    patientdiagnosisawareness character varying(255),
    patientgreatestneed character varying(3000),
    patientnumber character varying(255) DEFAULT (nextval('public.patientnumber_seq'::regclass))::character varying,
    patientprognosisawareness character varying(255),
    physicalcontition character varying(255),
    physiciallocation character varying(255),
    race character varying(255),
    section character varying(255),
    sex character varying(255),
    ssn character varying(255),
    suffix character varying(255),
    title character varying(255),
    veteran boolean,
    church_id bigint,
    dme_id bigint,
    funeralhome_id bigint,
    hospice_id bigint,
    office_id bigint,
    pharmacy_id bigint,
    address_id bigint,
    programsite_id bigint,
    site_id bigint,
    teampersonlist_id bigint,
    middleinitial character varying(4),
    patientaltnumber character varying(255),
    language_id bigint,
    secondary_language_id bigint,
    religion_id bigint,
    currentfacility_id bigint,
    admissiondate timestamp without time zone,
    dischargedate timestamp without time zone,
    referraldate timestamp without time zone,
    rejectiondate timestamp without time zone,
    currentstatus character varying(255),
    dischargereason_id bigint,
    referralrejectionreason_id bigint,
    loc character varying(255),
    height integer,
    weight integer,
    dateofdeath timestamp without time zone,
    episodenum integer DEFAULT 0 NOT NULL,
    iscaucasian boolean DEFAULT false,
    isblackorafricanamerican boolean DEFAULT false,
    isnativeamericanoralaskanative boolean DEFAULT false,
    isnativehawaiianorotherpacificislander boolean DEFAULT false,
    isasian boolean DEFAULT false
);


pg_restore: creating TABLE "public.patientreferral"
pg_restore: creating TABLE "public.program"
pg_restore: creating TABLE "public.programsite"
pg_restore: creating TABLE "public.referralrejectionreason"
pg_restore: creating TABLE "public.referralsourcetype"
pg_restore: creating TABLE "public.religion"
pg_restore: creating TABLE "public.phone_facility"
pg_restore: creating TABLE "public.phone_patient"
pg_restore: creating TABLE "public.patientphysician"
pg_restore: creating TABLE "public.patientinteraction"
pg_restore: creating TABLE "public.patientstatus"
pg_restore: creating TABLE "public.teampersonlist"
pg_restore: from TOC entry 305; 1259 16784112 TABLE teampersonlist hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teamnumber_seq" does not exist
Command was: CREATE TABLE public.teampersonlist (
    id bigint NOT NULL,
    issystemdefined boolean NOT NULL,
    lastupdatetime timestamp without time zone,
    lastupdateuser character varying(255),
    version timestamp without time zone NOT NULL,
    deleted boolean,
    name character varying(255),
    hospice_id bigint,
    teamnumber character varying(255) DEFAULT (nextval('public.teamnumber_seq'::regclass))::character varying NOT NULL,
    idgstartdate timestamp without time zone,
    idgfrequency integer,
    teamtype character varying
);


pg_restore: creating TABLE "public.facilitytype"
pg_restore: creating TABLE "public.patientfacility"
pg_restore: creating TABLE "public.dischargecode"
pg_restore: creating TABLE "public.teamsiteassignment"
pg_restore: creating TABLE "public.person_role"
pg_restore: creating TABLE "public.rolegroup"
pg_restore: creating TABLE "public.eligibility"
pg_restore: creating TABLE "public.acl"
pg_restore: creating TABLE "public.acl_aud"
pg_restore: creating SEQUENCE "public.acl_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.acl_id_seq"
pg_restore: creating TABLE "public.patientdiagnoses"
pg_restore: creating TABLE "public.address_aud"
pg_restore: creating SEQUENCE "public.address_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.address_id_seq"
pg_restore: creating TABLE "public.adjustmentreason"
pg_restore: creating TABLE "public.adjustmentreason_aud"
pg_restore: creating SEQUENCE "public.adjustmentreason_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.adjustmentreason_id_seq"
pg_restore: creating TABLE "public.adminlink_roles"
pg_restore: creating TABLE "public.adminlink_roles_aud"
pg_restore: creating TABLE "public.patientlevelofcare"
pg_restore: creating TABLE "public.person_programsite"
pg_restore: creating TABLE "public.person_site"
pg_restore: creating TABLE "public.allergy_aud"
pg_restore: creating SEQUENCE "public.allergy_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.allergy_id_seq"
pg_restore: creating TABLE "public.backup_before_dx_redesign_patientdiagnoses"
pg_restore: creating TABLE "public.claim"
pg_restore: creating TABLE "public.claim_claimbatch"
pg_restore: creating TABLE "public.claimtransaction"
pg_restore: creating TABLE "public.batchmedication"
pg_restore: creating TABLE "public.batchmedication_aud"
pg_restore: creating SEQUENCE "public.batchmedication_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.batchmedication_id_seq"
pg_restore: creating TABLE "public.batchpatientmedication"
pg_restore: creating TABLE "public.batchpatientmedication_aud"
pg_restore: creating SEQUENCE "public.batchpatientmedication_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.batchpatientmedication_id_seq"
pg_restore: creating TABLE "public.claimbatch"
pg_restore: creating TABLE "public.bereavementcontact"
pg_restore: creating TABLE "public.bereavementcontact_aud"
pg_restore: creating SEQUENCE "public.bereavementcontact_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.bereavementcontact_aud_id_seq"
pg_restore: creating SEQUENCE "public.bereavementcontact_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.bereavementcontact_id_seq"
pg_restore: creating TABLE "public.bereavementsettings"
pg_restore: creating TABLE "public.bereavementsettings_aud"
pg_restore: creating SEQUENCE "public.bereavementsettings_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.bereavementsettings_id_seq"
pg_restore: creating TABLE "public.bereavementspecialoccasion"
pg_restore: creating TABLE "public.bereavementspecialoccasion_aud"
pg_restore: creating SEQUENCE "public.bereavementspecialoccasion_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.bereavementspecialoccasion_aud_id_seq"
pg_restore: creating SEQUENCE "public.bereavementspecialoccasion_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.bereavementspecialoccasion_id_seq"
pg_restore: creating TABLE "public.roomboardgroup"
pg_restore: creating TABLE "public.roomboardtier"
pg_restore: creating TABLE "public.billingfollowup"
pg_restore: creating TABLE "public.billingfollowup_aud"
pg_restore: creating SEQUENCE "public.billingfollowup_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.billingfollowup_id_seq"
pg_restore: creating TABLE "public.billlog"
pg_restore: creating TABLE "public.billlog_aud"
pg_restore: creating SEQUENCE "public.billlog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.billlog_id_seq"
pg_restore: creating TABLE "public.booksclosedhistory"
pg_restore: creating TABLE "public.booksclosedhistory_aud"
pg_restore: creating SEQUENCE "public.booksclosedhistory_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.booksclosedhistory_id_seq"
pg_restore: creating TABLE "public.certification"
pg_restore: creating TABLE "public.certification_aud"
pg_restore: creating SEQUENCE "public.certification_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.certification_id_seq"
pg_restore: creating TABLE "public.certification_patientinteraction"
pg_restore: creating TABLE "public.certification_patientinteraction_aud"
pg_restore: creating SEQUENCE "public.certification_patientinteraction_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.certification_patientinteraction_id_seq"
pg_restore: creating TABLE "public.certificationnarrative"
pg_restore: creating TABLE "public.certificationnarrative_aud"
pg_restore: creating SEQUENCE "public.certificationnarrative_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.certificationnarrative_aud_id_seq"
pg_restore: creating SEQUENCE "public.certificationnarrative_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.certificationnarrative_id_seq"
pg_restore: creating TABLE "public.church_aud"
pg_restore: creating SEQUENCE "public.church_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.church_id_seq"
pg_restore: creating TABLE "public.church_pas_records"
pg_restore: creating TABLE "public.church_pas_records_aud"
pg_restore: creating TABLE "public.claim_aud"
pg_restore: creating TABLE "public.claim_claimbatch_aud"
pg_restore: creating TABLE "public.claim_claimrevenuedetail_aud"
pg_restore: creating TABLE "public.claim_claimtransaction_aud"
pg_restore: creating TABLE "public.claim_claimtransactiondetail_aud"
pg_restore: creating SEQUENCE "public.claim_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claim_id_seq"
pg_restore: creating TABLE "public.claim_log"
pg_restore: from TOC entry 549; 1259 16785272 TABLE claim_log hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claim_log_id_seq" does not exist
Command was: CREATE TABLE public.claim_log (
    id bigint DEFAULT nextval('public.claim_log_id_seq'::regclass) NOT NULL,
    claimkey character varying,
    lastupdatetime timestamp without time zone,
    lastupdateuser character varying,
    scenario character varying,
    issuccess boolean,
    message character varying,
    log_type character varying DEFAULT 'info'::character varying
);


pg_restore: creating TABLE "public.claim_prebill"
pg_restore: from TOC entry 551; 1259 16785282 TABLE claim_prebill hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claim_prebill_id_seq" does not exist
Command was: CREATE TABLE public.claim_prebill (
    id bigint DEFAULT nextval('public.claim_prebill_id_seq'::regclass) NOT NULL,
    claimbatch_run_prebill_id bigint,
    claim_id bigint,
    claimkey character varying,
    claimbatch_id bigint,
    batchkey character varying,
    lastupdatetime timestamp without time zone,
    lastupdateuser character varying,
    comment character varying,
    processed boolean DEFAULT false,
    inserted boolean DEFAULT false,
    updated boolean DEFAULT false,
    deleted boolean DEFAULT false,
    isnewclaim boolean,
    doclaimtotalsmatch boolean,
    arebooksopen boolean,
    isnotsent boolean,
    xml_fragment xml
);


pg_restore: creating TABLE "public.claimcmsstatus"
pg_restore: creating TABLE "public.claimstatusdata"
pg_restore: creating TABLE "public.claimbatch_aud"
pg_restore: creating TABLE "public.claimbatch_gen"
pg_restore: from TOC entry 557; 1259 16785315 TABLE claimbatch_gen hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claimbatch_gen_id_seq" does not exist
Command was: CREATE TABLE public.claimbatch_gen (
    id bigint DEFAULT nextval('public.claimbatch_gen_id_seq'::regclass) NOT NULL,
    active_date_range_start timestamp without time zone,
    active_date_range_end timestamp without time zone,
    current_month boolean,
    payer_type character varying,
    process_only_rb boolean,
    programsite_id bigint,
    splithcpcs boolean,
    patient_ids character varying,
    claim_ids character varying,
    maxclaims integer,
    claimbatch_id bigint,
    batchkey character varying,
    xml_fragment xml,
    lastupdatetime timestamp without time zone DEFAULT now()
);


pg_restore: creating SEQUENCE "public.claimbatch_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimbatch_id_seq"
pg_restore: creating TABLE "public.claimchanges"
pg_restore: creating TABLE "public.claimchanges_aud"
pg_restore: creating SEQUENCE "public.claimchanges_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimchanges_id_seq"
pg_restore: creating TABLE "public.claimcmsstatus_aud"
pg_restore: creating SEQUENCE "public.claimcmsstatus_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimcmsstatus_id_seq"
pg_restore: creating SEQUENCE "public.claimdetail_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimdetail_id_seq"
pg_restore: creating TABLE "public.claimmedication"
pg_restore: creating TABLE "public.claimmedication_aud"
pg_restore: creating SEQUENCE "public.claimmedication_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimmedication_id_seq"
pg_restore: creating TABLE "public.claimpatientvisit"
pg_restore: creating TABLE "public.claimpatientvisit_aud"
pg_restore: creating SEQUENCE "public.claimpatientvisit_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimpatientvisit_id_seq"
pg_restore: creating TABLE "public.claimrequestlog"
pg_restore: creating TABLE "public.claimrequestlog_aud"
pg_restore: creating SEQUENCE "public.claimrequestlog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimrequestlog_id_seq"
pg_restore: creating TABLE "public.claimrevenuedetail"
pg_restore: creating TABLE "public.claimrevenuedetail_aud"
pg_restore: creating SEQUENCE "public.claimrevenuedetail_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimrevenuedetail_id_seq"
pg_restore: creating TABLE "public.claimstatusdata_aud"
pg_restore: creating TABLE "public.claimstatushistory"
pg_restore: creating TABLE "public.claimstatushistory_aud"
pg_restore: creating SEQUENCE "public.claimstatushistory_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimstatushistory_id_seq"
pg_restore: creating TABLE "public.claimstatusinquirylog"
pg_restore: creating TABLE "public.claimstatusinquirylog_aud"
pg_restore: creating SEQUENCE "public.claimstatusinquirylog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimstatusinquirylog_id_seq"
pg_restore: creating TABLE "public.claimtransaction_aud"
pg_restore: creating TABLE "public.claimtransaction_claimtransactiondetail_aud"
pg_restore: creating TABLE "public.claimtransactiondetail"
pg_restore: creating TABLE "public.claimtransactiondetail_aud"
pg_restore: creating SEQUENCE "public.claimtransactiondetail_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.claimtransactiondetail_id_seq"
pg_restore: creating TABLE "public.clinical_data"
pg_restore: creating SEQUENCE "public.clinical_data_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.clinical_data_id_seq"
pg_restore: creating TABLE "public.contract"
pg_restore: creating TABLE "public.contract_aud"
pg_restore: creating SEQUENCE "public.contract_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.contract_id_seq"
pg_restore: creating TABLE "public.coverage_aud"
pg_restore: creating SEQUENCE "public.coverage_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.coverage_aud_id_seq"
pg_restore: creating SEQUENCE "public.coverage_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.coverage_id_seq"
pg_restore: creating TABLE "public.coverageset_aud"
pg_restore: creating SEQUENCE "public.coverageset_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.coverageset_aud_id_seq"
pg_restore: creating SEQUENCE "public.coverageset_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.coverageset_id_seq"
pg_restore: creating TABLE "public.dancefloorpanel"
pg_restore: creating TABLE "public.dancefloorpanel_aud"
pg_restore: creating SEQUENCE "public.dancefloorpanel_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dancefloorpanel_id_seq"
pg_restore: creating TABLE "public.databasechangelog"
pg_restore: creating TABLE "public.databasechangeloglock"
pg_restore: creating TABLE "public.datafix_log"
pg_restore: creating TABLE "public.dischargeclaimnotrclaim"
pg_restore: creating TABLE "public.dischargeclaimnotrclaim_aud"
pg_restore: creating SEQUENCE "public.dischargeclaimnotrclaim_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dischargeclaimnotrclaim_aud_id_seq"
pg_restore: creating SEQUENCE "public.dischargeclaimnotrclaim_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dischargeclaimnotrclaim_id_seq"
pg_restore: creating TABLE "public.dischargecode_aud"
pg_restore: creating SEQUENCE "public.dischargecode_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dischargecode_id_seq"
pg_restore: creating TABLE "public.dischargecode_program"
pg_restore: creating TABLE "public.dischargecode_program_aud"
pg_restore: creating TABLE "public.dischargedaybillingrule"
pg_restore: creating TABLE "public.dischargedaybillingrule_aud"
pg_restore: creating SEQUENCE "public.dischargedaybillingrule_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dischargedaybillingrule_id_seq"
pg_restore: creating TABLE "public.dischargereason_aud"
pg_restore: creating SEQUENCE "public.dischargereason_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.dischargereason_id_seq"
pg_restore: creating TABLE "public.dischargereason_program"
pg_restore: creating TABLE "public.dischargereason_program_aud"
pg_restore: creating TABLE "public.displayfield"
pg_restore: creating TABLE "public.displayfield_aud"
pg_restore: creating SEQUENCE "public.displayfield_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.displayfield_id_seq"
pg_restore: creating TABLE "public.displayviewfields"
pg_restore: creating TABLE "public.displayviewfields_aud"
pg_restore: creating TABLE "public.displayviewfields_displayfield"
pg_restore: creating TABLE "public.displayviewfields_displayfield_aud"
pg_restore: creating SEQUENCE "public.displayviewfields_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.displayviewfields_id_seq"
pg_restore: creating TABLE "public.downloadxml"
pg_restore: creating TABLE "public.electiondefinition_aud"
pg_restore: creating TABLE "public.electionperiod_aud"
pg_restore: creating SEQUENCE "public.electionperiod_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.electionperiod_id_seq"
pg_restore: creating TABLE "public.eligibility_aud"
pg_restore: creating TABLE "public.eligibility_smartformresponse"
pg_restore: creating TABLE "public.eligibility_smartformresponse_aud"
pg_restore: creating TABLE "public.email_list_person"
pg_restore: creating TABLE "public.email_list_person_aud"
pg_restore: creating TABLE "public.emaillisttype"
pg_restore: creating TABLE "public.emaillisttype_aud"
pg_restore: creating SEQUENCE "public.emaillisttype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.emaillisttype_id_seq"
pg_restore: creating TABLE "public.episode_exception"
pg_restore: creating TABLE "public.externallink"
pg_restore: creating SEQUENCE "public.externallink_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.externallink_id_seq"
pg_restore: creating TABLE "public.facesheet_phonetypes_aud"
pg_restore: creating SEQUENCE "public.facesheet_phonetypes_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.facesheet_phonetypes_aud_id_seq"
pg_restore: creating SEQUENCE "public.facesheet_phonetypes_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.facesheet_phonetypes_id_seq"
pg_restore: creating TABLE "public.facility_aud"
pg_restore: creating TABLE "public.facility_facilitytypes"
pg_restore: creating TABLE "public.facility_facilitytypes_aud"
pg_restore: creating SEQUENCE "public.facility_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.facility_id_seq"
pg_restore: creating TABLE "public.facility_offices"
pg_restore: creating TABLE "public.facility_offices_aud"
pg_restore: creating TABLE "public.facility_smartformresponse"
pg_restore: creating TABLE "public.facility_smartformresponse_aud"
pg_restore: creating TABLE "public.facilitytype_aud"
pg_restore: creating SEQUENCE "public.facilitytype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.facilitytype_id_seq"
pg_restore: creating TABLE "public.facilitytype_loc"
pg_restore: creating TABLE "public.facilitytype_loc_aud"
pg_restore: creating TABLE "public.favprocedurecode"
pg_restore: creating TABLE "public.favprocedurecode_aud"
pg_restore: creating TABLE "public.filescheduler"
pg_restore: creating SEQUENCE "public.filescheduler_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.filescheduler_id_seq"
pg_restore: creating TABLE "public.fileuploadlog"
pg_restore: creating TABLE "public.fileuploadlog_aud"
pg_restore: creating SEQUENCE "public.fileuploadlog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.fileuploadlog_id_seq"
pg_restore: creating TABLE "public.finalclaimcancelclaim"
pg_restore: creating TABLE "public.finalclaimcancelclaim_aud"
pg_restore: creating SEQUENCE "public.finalclaimcancelclaim_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.finalclaimcancelclaim_aud_id_seq"
pg_restore: creating SEQUENCE "public.finalclaimcancelclaim_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.finalclaimcancelclaim_id_seq"
pg_restore: creating TABLE "public.griefrisk"
pg_restore: creating TABLE "public.griefrisk_aud"
pg_restore: creating SEQUENCE "public.griefrisk_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.griefrisk_id_seq"
pg_restore: creating TABLE "public.hbrole_aud"
pg_restore: creating SEQUENCE "public.hbrole_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.hbrole_id_seq"
pg_restore: creating TABLE "public.hbuniquenumber"
pg_restore: creating SEQUENCE "public.hbuniquenumber_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.hbuniquenumber_id_seq"
pg_restore: creating TABLE "public.hospice_acl"
pg_restore: creating TABLE "public.hospice_acl_aud"
pg_restore: creating TABLE "public.hospice_aud"
pg_restore: creating SEQUENCE "public.hospice_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.hospice_id_seq"
pg_restore: creating TABLE "public.insurancecarrier_aud"
pg_restore: creating TABLE "public.insurancecarrier_dischargedaybillingrule_aud"
pg_restore: creating SEQUENCE "public.insurancecarrier_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarrier_id_seq"
pg_restore: creating TABLE "public.insurancecarrier_insurancecarrierrates_aud"
pg_restore: creating TABLE "public.insurancecarrier_insurancecarrierrevcode_aud"
pg_restore: creating TABLE "public.insurancecarrier_insurancecarriersitecredentials_aud"
pg_restore: creating TABLE "public.insurancecarrier_insurancecarriertob_aud"
pg_restore: creating TABLE "public.insurancecarrier_site_financialcredentials"
pg_restore: creating TABLE "public.insurancecarrier_site_financialcredentials_aud"
pg_restore: creating SEQUENCE "public.insurancecarrier_site_financialcredentials_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarrier_site_financialcredentials_id_seq"
pg_restore: creating TABLE "public.insurancecarrierrate"
pg_restore: creating TABLE "public.insurancecarrierrate_aud"
pg_restore: creating SEQUENCE "public.insurancecarrierrate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarrierrate_id_seq"
pg_restore: creating TABLE "public.insurancecarrierrates"
pg_restore: creating TABLE "public.insurancecarrierrates_aud"
pg_restore: creating SEQUENCE "public.insurancecarrierrates_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarrierrates_id_seq"
pg_restore: creating TABLE "public.insurancecarrierrates_insurancecarrierrate_aud"
pg_restore: creating TABLE "public.insurancecarrierrevcode"
pg_restore: creating TABLE "public.insurancecarrierrevcode_aud"
pg_restore: creating SEQUENCE "public.insurancecarrierrevcode_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarrierrevcode_id_seq"
pg_restore: creating TABLE "public.insurancecarriertob"
pg_restore: creating TABLE "public.insurancecarriertob_aud"
pg_restore: creating SEQUENCE "public.insurancecarriertob_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insurancecarriertob_id_seq"
pg_restore: creating TABLE "public.insurancecoverage"
pg_restore: creating TABLE "public.insurancecoverage_aud"
pg_restore: creating SEQUENCE "public.insuranceholder_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insuranceholder_id_seq"
pg_restore: creating SEQUENCE "public.insuranceprovider_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.insuranceprovider_id_seq"
pg_restore: creating TABLE "public.labeltemplate"
pg_restore: creating TABLE "public.labeltemplate_aud"
pg_restore: creating SEQUENCE "public.labeltemplate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.labeltemplate_id_seq"
pg_restore: creating TABLE "public.language_aud"
pg_restore: creating SEQUENCE "public.language_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.language_id_seq"
pg_restore: creating TABLE "public.lettertemplate"
pg_restore: creating TABLE "public.lettertemplate_aud"
pg_restore: creating SEQUENCE "public.lettertemplate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.lettertemplate_id_seq"
pg_restore: creating TABLE "public.locationconfig"
pg_restore: creating SEQUENCE "public.locationconfig_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.locationconfig_id_seq"
pg_restore: creating SEQUENCE "public.medicareeligibility_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.medicareeligibility_id_seq"
pg_restore: creating TABLE "public.medicareintermediary"
pg_restore: creating TABLE "public.medicareintermediaryinfo"
pg_restore: creating TABLE "public.medicareintermediary_aud"
pg_restore: creating SEQUENCE "public.medicareintermediary_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.medicareintermediary_id_seq"
pg_restore: creating TABLE "public.medicareintermediaryinfo_aud"
pg_restore: creating SEQUENCE "public.medicareintermediaryinfo_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.medicareintermediaryinfo_id_seq"
pg_restore: creating TABLE "public.medsandprescriptions"
pg_restore: creating TABLE "public.medsandprescriptions_aud"
pg_restore: creating SEQUENCE "public.medsandprescriptions_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.medsandprescriptions_id_seq"
pg_restore: creating TABLE "public.messageattribute"
pg_restore: creating TABLE "public.messageattribute_aud"
pg_restore: creating SEQUENCE "public.messageattribute_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.messageattribute_aud_id_seq"
pg_restore: creating SEQUENCE "public.messageattribute_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.messageattribute_id_seq"
pg_restore: creating TABLE "public.messagetemplate"
pg_restore: creating TABLE "public.messagetemplate_aud"
pg_restore: creating SEQUENCE "public.messagetemplate_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.messagetemplate_aud_id_seq"
pg_restore: creating SEQUENCE "public.messagetemplate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.messagetemplate_id_seq"
pg_restore: creating TABLE "public.newranks_tmp"
pg_restore: creating TABLE "public.newsitem"
pg_restore: creating TABLE "public.newsitem_aud"
pg_restore: creating TABLE "public.noa"
pg_restore: creating TABLE "public.noa_aud"
pg_restore: creating SEQUENCE "public.noa_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.noa_id_seq"
pg_restore: creating TABLE "public.notificationtype"
pg_restore: creating TABLE "public.notificationtype_aud"
pg_restore: creating SEQUENCE "public.notificationtype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.notificationtype_id_seq"
pg_restore: creating TABLE "public.notr"
pg_restore: creating TABLE "public.notr_aud"
pg_restore: creating SEQUENCE "public.notr_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.notr_id_seq"
pg_restore: creating TABLE "public.npiadminlog"
pg_restore: creating TABLE "public.npiadminlog_aud"
pg_restore: creating SEQUENCE "public.npiadminlog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.npiadminlog_id_seq"
pg_restore: creating TABLE "public.office_aud"
pg_restore: creating SEQUENCE "public.office_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.office_id_seq"
pg_restore: creating TABLE "public.openedvisit"
pg_restore: creating TABLE "public.openedvisit_aud"
pg_restore: creating SEQUENCE "public.openedvisit_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.openedvisit_id_seq"
pg_restore: creating TABLE "public.pasrecord"
pg_restore: creating SEQUENCE "public.pasrecord_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.pasrecord_id_seq"
pg_restore: creating TABLE "public.passwordverification"
pg_restore: creating TABLE "public.passwordverification_aud"
pg_restore: creating TABLE "public.patientvisit"
pg_restore: creating TABLE "public.patient_allergy_aud"
pg_restore: creating TABLE "public.patient_aud"
pg_restore: creating TABLE "public.patient_diagnosis_aud"
pg_restore: creating SEQUENCE "public.patient_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patient_id_seq"
pg_restore: from TOC entry 7793; 0 0 SEQUENCE OWNED BY patient_id_seq hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER SEQUENCE public.patient_id_seq OWNED BY public.patient.id;


pg_restore: creating TABLE "public.patient_patientmedication_aud"
pg_restore: creating TABLE "public.patientbillingnote"
pg_restore: creating TABLE "public.patientbillingnote_aud"
pg_restore: creating SEQUENCE "public.patientbillingnote_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientbillingnote_aud_id_seq"
pg_restore: creating SEQUENCE "public.patientbillingnote_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientbillingnote_id_seq"
pg_restore: creating TABLE "public.patientdiagnoses_aud"
pg_restore: creating SEQUENCE "public.patientdiagnoses_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientdiagnoses_id_seq"
pg_restore: creating TABLE "public.patientfacility_aud"
pg_restore: creating SEQUENCE "public.patientfacility_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientfacility_id_seq"
pg_restore: creating TABLE "public.patientinsurance"
pg_restore: creating TABLE "public.patientinsurance_aud"
pg_restore: creating SEQUENCE "public.patientinsurance_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientinsurance_id_seq"
pg_restore: creating TABLE "public.patientintakenote"
pg_restore: creating TABLE "public.patientintakenote_aud"
pg_restore: creating SEQUENCE "public.patientintakenote_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientintakenote_aud_id_seq"
pg_restore: creating SEQUENCE "public.patientintakenote_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientintakenote_id_seq"
pg_restore: creating TABLE "public.patientinteraction_aud"
pg_restore: creating SEQUENCE "public.patientinteraction_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientinteraction_id_seq"
pg_restore: creating TABLE "public.patientinteraction_patientdiagnoses_aud"
pg_restore: creating TABLE "public.patientinteraction_patientfacility_aud"
pg_restore: creating TABLE "public.patientinteraction_patientlevelofcare_aud"
pg_restore: creating TABLE "public.patientinteraction_patientstatus_aud"
pg_restore: creating TABLE "public.patientinteraction_patientvisit_aud"
pg_restore: creating TABLE "public.patientlevelofcare_aud"
pg_restore: creating SEQUENCE "public.patientlevelofcare_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientlevelofcare_id_seq"
pg_restore: creating TABLE "public.patientmedication"
pg_restore: creating TABLE "public.patientmedication_aud"
pg_restore: creating SEQUENCE "public.patientmedication_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientmedication_id_seq"
pg_restore: creating TABLE "public.patientoffice"
pg_restore: creating TABLE "public.patientoffice_aud"
pg_restore: creating SEQUENCE "public.patientoffice_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientoffice_id_seq"
pg_restore: creating TABLE "public.patientpersonrelation_aud"
pg_restore: creating SEQUENCE "public.patientpersonrelation_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientpersonrelation_id_seq"
pg_restore: creating TABLE "public.patientpersonrelation_types_aud"
pg_restore: creating TABLE "public.patientphysician_aud"
pg_restore: creating SEQUENCE "public.patientphysician_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientphysician_id_seq"
pg_restore: creating TABLE "public.patientreferral_aud"
pg_restore: creating SEQUENCE "public.patientreferral_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientreferral_id_seq"
pg_restore: creating TABLE "public.patientroleassignment_aud"
pg_restore: creating SEQUENCE "public.patientroleassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientroleassignment_id_seq"
pg_restore: creating TABLE "public.patientstatus_aud"
pg_restore: creating SEQUENCE "public.patientstatus_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientstatus_id_seq"
pg_restore: creating TABLE "public.patientteam"
pg_restore: creating TABLE "public.patientteam_aud"
pg_restore: creating SEQUENCE "public.patientteam_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientteam_id_seq"
pg_restore: creating TABLE "public.patientvisit_aud"
pg_restore: creating SEQUENCE "public.patientvisit_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.patientvisit_id_seq"
pg_restore: creating TABLE "public.person_aud"
pg_restore: creating TABLE "public.person_dde_credentials"
pg_restore: creating TABLE "public.person_dde_credentials_aud"
pg_restore: creating SEQUENCE "public.person_dde_credentials_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.person_dde_credentials_id_seq"
pg_restore: creating TABLE "public.person_hospice"
pg_restore: creating TABLE "public.person_hospice_aud"
pg_restore: creating SEQUENCE "public.person_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.person_id_seq"
pg_restore: from TOC entry 7813; 0 0 SEQUENCE OWNED BY person_id_seq hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER SEQUENCE public.person_id_seq OWNED BY public.person.id;


pg_restore: creating TABLE "public.person_office"
pg_restore: creating TABLE "public.person_office_aud"
pg_restore: from TOC entry 863; 1259 16786688 TABLE person_office_aud hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person_office_aud_id_seq" does not exist
Command was: CREATE TABLE public.person_office_aud (
    rev integer NOT NULL,
    person_id bigint NOT NULL,
    office_id bigint,
    rank integer NOT NULL,
    revtype smallint,
    id bigint DEFAULT nextval('public.person_office_aud_id_seq'::regclass) NOT NULL
);


pg_restore: creating TABLE "public.person_programsite_aud"
pg_restore: creating TABLE "public.person_region"
pg_restore: creating TABLE "public.person_region_aud"
pg_restore: creating TABLE "public.person_removeblanksback"
pg_restore: creating TABLE "public.person_role_aud"
pg_restore: creating SEQUENCE "public.person_role_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.person_role_id_seq"
pg_restore: creating TABLE "public.person_site_aud"
pg_restore: from TOC entry 871; 1259 16786714 TABLE person_site_aud hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person_site_aud_id_seq" does not exist
Command was: CREATE TABLE public.person_site_aud (
    rev integer NOT NULL,
    person_id bigint NOT NULL,
    site_id bigint,
    rank integer NOT NULL,
    revtype smallint,
    id bigint DEFAULT nextval('public.person_site_aud_id_seq'::regclass) NOT NULL
);


pg_restore: creating TABLE "public.person_smartformresponse"
pg_restore: creating TABLE "public.person_smartformresponse_aud"
pg_restore: creating TABLE "public.pharmacybenefitmanager"
pg_restore: creating TABLE "public.pharmacybenefitmanager_aud"
pg_restore: creating SEQUENCE "public.pharmacybenefitmanager_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.pharmacybenefitmanager_id_seq"
pg_restore: creating TABLE "public.phone_aud"
pg_restore: creating TABLE "public.phone_church"
pg_restore: creating TABLE "public.phone_church_aud"
pg_restore: creating TABLE "public.phone_facility_aud"
pg_restore: creating TABLE "public.phone_hospice"
pg_restore: creating TABLE "public.phone_hospice_aud"
pg_restore: creating SEQUENCE "public.phone_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.phone_id_seq"
pg_restore: creating TABLE "public.phone_insurancecarrier"
pg_restore: creating TABLE "public.phone_insurancecarrier_aud"
pg_restore: creating TABLE "public.phone_office"
pg_restore: creating TABLE "public.phone_office_aud"
pg_restore: creating TABLE "public.phone_patient_aud"
pg_restore: creating TABLE "public.phone_person_aud"
pg_restore: creating TABLE "public.phraselibrary"
pg_restore: creating TABLE "public.phraselibrary_aud"
pg_restore: creating SEQUENCE "public.phraselibrary_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.phraselibrary_id_seq"
pg_restore: creating TABLE "public.physicianservice"
pg_restore: creating TABLE "public.physicianservice_aud"
pg_restore: creating SEQUENCE "public.physicianservice_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.physicianservice_id_seq"
pg_restore: creating TABLE "public.physicianservicediagnoses"
pg_restore: creating TABLE "public.physicianservicediagnoses_aud"
pg_restore: creating SEQUENCE "public.physicianservicediagnoses_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.physicianservicediagnoses_id_seq"
pg_restore: creating TABLE "public.policy_aud"
pg_restore: creating SEQUENCE "public.policy_aud_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.policy_aud_id_seq"
pg_restore: creating SEQUENCE "public.policy_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.policy_id_seq"
pg_restore: creating TABLE "public.policy_mbi"
pg_restore: creating TABLE "public.principal_aud"
pg_restore: creating SEQUENCE "public.principal_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.principal_id_seq"
pg_restore: creating TABLE "public.priorauthorization"
pg_restore: creating TABLE "public.priorauthorization_aud"
pg_restore: creating SEQUENCE "public.priorauthorization_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.priorauthorization_id_seq"
pg_restore: creating SEQUENCE "public.procedurecode_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.procedurecode_id_seq"
pg_restore: creating TABLE "public.procedurecode_program"
pg_restore: creating TABLE "public.procedurecode_program_aud"
pg_restore: creating TABLE "public.program_aud"
pg_restore: creating SEQUENCE "public.program_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.program_id_seq"
pg_restore: creating TABLE "public.programsite_aud"
pg_restore: creating SEQUENCE "public.programsite_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.programsite_id_seq"
pg_restore: creating TABLE "public.rate"
pg_restore: creating TABLE "public.rate_aud"
pg_restore: creating SEQUENCE "public.rate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.rate_id_seq"
pg_restore: creating TABLE "public.refdbref"
pg_restore: creating SEQUENCE "public.refdbref_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.refdbref_id_seq"
pg_restore: creating TABLE "public.referralrejectionreason_aud"
pg_restore: creating SEQUENCE "public.referralrejectionreason_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.referralrejectionreason_id_seq"
pg_restore: creating TABLE "public.referralsourcetype_aud"
pg_restore: creating SEQUENCE "public.referralsourcetype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.referralsourcetype_id_seq"
pg_restore: creating TABLE "public.region"
pg_restore: creating TABLE "public.region_aud"
pg_restore: creating SEQUENCE "public.region_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.region_id_seq"
pg_restore: creating TABLE "public.religion_aud"
pg_restore: creating SEQUENCE "public.religion_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.religion_id_seq"
pg_restore: creating TABLE "public.remit"
pg_restore: creating TABLE "public.remit_aud"
pg_restore: creating SEQUENCE "public.remit_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.remit_id_seq"
pg_restore: creating TABLE "public.remitcheck"
pg_restore: creating TABLE "public.remitcheck_aud"
pg_restore: creating SEQUENCE "public.remitcheck_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.remitcheck_id_seq"
pg_restore: creating TABLE "public.remitdetail"
pg_restore: creating TABLE "public.remitdetail_aud"
pg_restore: creating SEQUENCE "public.remitdetail_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.remitdetail_id_seq"
pg_restore: creating TABLE "public.remitfile"
pg_restore: creating TABLE "public.remitfile_aud"
pg_restore: creating SEQUENCE "public.remitfile_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.remitfile_id_seq"
pg_restore: creating TABLE "public.remitfile_remitcheck_aud"
pg_restore: creating TABLE "public.resource"
pg_restore: creating TABLE "public.resource_aud"
pg_restore: creating SEQUENCE "public.resource_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.resource_id_seq"
pg_restore: creating TABLE "public.revinfo"
pg_restore: creating TABLE "public.role_rolerate_aud"
pg_restore: creating TABLE "public.rolegroup_aud"
pg_restore: creating SEQUENCE "public.rolegroup_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.rolegroup_id_seq"
pg_restore: creating TABLE "public.rolerate"
pg_restore: creating TABLE "public.rolerate_aud"
pg_restore: creating SEQUENCE "public.rolerate_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.rolerate_id_seq"
pg_restore: creating TABLE "public.roomboardgroup_aud"
pg_restore: creating SEQUENCE "public.roomboardgroup_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.roomboardgroup_id_seq"
pg_restore: creating TABLE "public.roomboardgroup_tiers"
pg_restore: creating TABLE "public.roomboardgroup_tiers_aud"
pg_restore: creating TABLE "public.roomboardtier_aud"
pg_restore: creating SEQUENCE "public.roomboardtier_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.roomboardtier_id_seq"
pg_restore: creating TABLE "public.scenariotype"
pg_restore: creating SEQUENCE "public.scenariotype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.scenariotype_id_seq"
pg_restore: creating TABLE "public.selec"
pg_restore: creating TABLE "public.seqhclaimlog"
pg_restore: creating TABLE "public.seqhclaimlog_aud"
pg_restore: creating SEQUENCE "public.seqhclaimlog_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.seqhclaimlog_id_seq"
pg_restore: creating TABLE "public.sitenotification"
pg_restore: creating TABLE "public.sitenotification_aud"
pg_restore: creating TABLE "public.sitenotification_email"
pg_restore: creating TABLE "public.sitenotification_email_aud"
pg_restore: creating SEQUENCE "public.sitenotification_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.sitenotification_id_seq"
pg_restore: creating TABLE "public.sitepayertype"
pg_restore: creating TABLE "public.sitepayertype_aud"
pg_restore: creating SEQUENCE "public.sitepayertype_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.sitepayertype_id_seq"
pg_restore: creating TABLE "public.siteroleassignment"
pg_restore: creating TABLE "public.siteroleassignment_aud"
pg_restore: creating SEQUENCE "public.siteroleassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.siteroleassignment_id_seq"
pg_restore: creating TABLE "public.siterolelist"
pg_restore: creating TABLE "public.siterolelist_aud"
pg_restore: creating SEQUENCE "public.siterolelist_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.siterolelist_id_seq"
pg_restore: creating TABLE "public.smartformanswer"
pg_restore: creating TABLE "public.smartformanswer_aud"
pg_restore: creating SEQUENCE "public.smartformanswer_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.smartformanswer_id_seq"
pg_restore: creating TABLE "public.smartformexpression"
pg_restore: creating TABLE "public.smartformexpression_aud"
pg_restore: creating SEQUENCE "public.smartformexpression_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.smartformexpression_id_seq"
pg_restore: creating TABLE "public.smartformquestion"
pg_restore: creating TABLE "public.smartformquestion_aud"
pg_restore: creating SEQUENCE "public.smartformquestion_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.smartformquestion_id_seq"
pg_restore: creating TABLE "public.smartformresponse"
pg_restore: creating TABLE "public.smartformresponse_aud"
pg_restore: creating SEQUENCE "public.smartformresponse_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.smartformresponse_id_seq"
pg_restore: creating TABLE "public.tabconfig"
pg_restore: creating SEQUENCE "public.tabconfig_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.tabconfig_id_seq"
pg_restore: creating TABLE "public.tabcontext"
pg_restore: creating SEQUENCE "public.tabcontext_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.tabcontext_id_seq"
pg_restore: creating TABLE "public.teamofficeassignment"
pg_restore: creating TABLE "public.teamofficeassignment_aud"
pg_restore: creating SEQUENCE "public.teamofficeassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.teamofficeassignment_id_seq"
pg_restore: creating TABLE "public.teampersonassignment"
pg_restore: creating TABLE "public.teampersonassignment_aud"
pg_restore: creating SEQUENCE "public.teampersonassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.teampersonassignment_id_seq"
pg_restore: creating TABLE "public.teampersonlist_aud"
pg_restore: creating SEQUENCE "public.teampersonlist_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.teampersonlist_id_seq"
pg_restore: from TOC entry 7856; 0 0 SEQUENCE OWNED BY teampersonlist_id_seq hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER SEQUENCE public.teampersonlist_id_seq OWNED BY public.teampersonlist.id;


pg_restore: creating TABLE "public.teamregionassignment"
pg_restore: creating TABLE "public.teamregionassignment_aud"
pg_restore: creating SEQUENCE "public.teamregionassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.teamregionassignment_id_seq"
pg_restore: creating TABLE "public.teamsiteassignment_aud"
pg_restore: creating SEQUENCE "public.teamsiteassignment_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.teamsiteassignment_id_seq"
pg_restore: creating TABLE "public.temp_certification"
pg_restore: creating TABLE "public.temp_patientdiagnoses_v1"
pg_restore: creating TABLE "public.thirdpartyrolemap"
pg_restore: creating TABLE "public.thirdpartyrolemap_aud"
pg_restore: creating SEQUENCE "public.thirdpartyrolemap_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.thirdpartyrolemap_id_seq"
pg_restore: creating TABLE "public.tier_rates"
pg_restore: creating TABLE "public.tier_rates_aud"
pg_restore: creating TABLE "public.userpreference"
pg_restore: creating TABLE "public.userpreference_aud"
pg_restore: creating SEQUENCE "public.userpreference_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.userpreference_id_seq"
pg_restore: creating TABLE "public.visittrip"
pg_restore: creating SEQUENCE "public.visittrip_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.visittrip_id_seq"
pg_restore: creating TABLE "public.wagecache"
pg_restore: creating TABLE "public.wagecache_aud"
pg_restore: creating SEQUENCE "public.wagecache_id_seq"
pg_restore: creating SEQUENCE OWNED BY "public.wagecache_id_seq"
pg_restore: creating DEFAULT "public.acl id"
pg_restore: creating DEFAULT "public.address id"
pg_restore: creating DEFAULT "public.adjustmentreason id"
pg_restore: creating DEFAULT "public.allergy id"
pg_restore: creating DEFAULT "public.batchmedication id"
pg_restore: creating DEFAULT "public.batchpatientmedication id"
pg_restore: creating DEFAULT "public.bereavementcontact id"
pg_restore: creating DEFAULT "public.bereavementcontact_aud id"
pg_restore: creating DEFAULT "public.bereavementsettings id"
pg_restore: creating DEFAULT "public.bereavementspecialoccasion id"
pg_restore: creating DEFAULT "public.bereavementspecialoccasion_aud id"
pg_restore: creating DEFAULT "public.billingfollowup id"
pg_restore: creating DEFAULT "public.billlog id"
pg_restore: creating DEFAULT "public.booksclosedhistory id"
pg_restore: creating DEFAULT "public.certification id"
pg_restore: creating DEFAULT "public.certification_patientinteraction id"
pg_restore: creating DEFAULT "public.certificationnarrative id"
pg_restore: creating DEFAULT "public.certificationnarrative_aud id"
pg_restore: creating DEFAULT "public.church id"
pg_restore: creating DEFAULT "public.claim id"
pg_restore: creating DEFAULT "public.claimbatch id"
pg_restore: creating DEFAULT "public.claimchanges id"
pg_restore: creating DEFAULT "public.claimcmsstatus id"
pg_restore: creating DEFAULT "public.claimmedication id"
pg_restore: creating DEFAULT "public.claimpatientvisit id"
pg_restore: creating DEFAULT "public.claimrequestlog id"
pg_restore: creating DEFAULT "public.claimrevenuedetail id"
pg_restore: creating DEFAULT "public.claimstatushistory id"
pg_restore: creating DEFAULT "public.claimstatusinquirylog id"
pg_restore: creating DEFAULT "public.claimtransaction id"
pg_restore: creating DEFAULT "public.claimtransactiondetail id"
pg_restore: creating DEFAULT "public.clinical_data id"
pg_restore: creating DEFAULT "public.contract id"
pg_restore: creating DEFAULT "public.coverage id"
pg_restore: creating DEFAULT "public.coverage_aud id"
pg_restore: creating DEFAULT "public.coverageset id"
pg_restore: creating DEFAULT "public.coverageset_aud id"
pg_restore: creating DEFAULT "public.dancefloorpanel id"
pg_restore: creating DEFAULT "public.dischargeclaimnotrclaim id"
pg_restore: creating DEFAULT "public.dischargeclaimnotrclaim_aud id"
pg_restore: creating DEFAULT "public.dischargecode id"
pg_restore: creating DEFAULT "public.dischargedaybillingrule id"
pg_restore: creating DEFAULT "public.dischargereason id"
pg_restore: creating DEFAULT "public.displayfield id"
pg_restore: creating DEFAULT "public.displayviewfields id"
pg_restore: creating DEFAULT "public.electiondefinition id"
pg_restore: creating DEFAULT "public.electionperiod id"
pg_restore: creating DEFAULT "public.eligibility id"
pg_restore: creating DEFAULT "public.emaillisttype id"
pg_restore: creating DEFAULT "public.externallink id"
pg_restore: creating DEFAULT "public.facesheet_phonetypes id"
pg_restore: creating DEFAULT "public.facesheet_phonetypes_aud id"
pg_restore: creating DEFAULT "public.facility id"
pg_restore: creating DEFAULT "public.facilitytype id"
pg_restore: creating DEFAULT "public.favprocedurecode id"
pg_restore: creating DEFAULT "public.filescheduler id"
pg_restore: creating DEFAULT "public.fileuploadlog id"
pg_restore: creating DEFAULT "public.finalclaimcancelclaim id"
pg_restore: creating DEFAULT "public.finalclaimcancelclaim_aud id"
pg_restore: creating DEFAULT "public.griefrisk id"
pg_restore: creating DEFAULT "public.hbrole id"
pg_restore: creating DEFAULT "public.hbuniquenumber id"
pg_restore: creating DEFAULT "public.hospice id"
pg_restore: creating DEFAULT "public.insurancecarrier id"
pg_restore: creating DEFAULT "public.insurancecarrier_site_financialcredentials id"
pg_restore: creating DEFAULT "public.insurancecarrierrate id"
pg_restore: creating DEFAULT "public.insurancecarrierrates id"
pg_restore: creating DEFAULT "public.insurancecarrierrevcode id"
pg_restore: creating DEFAULT "public.insurancecarriertob id"
pg_restore: creating DEFAULT "public.insurancecoverage id"
pg_restore: creating DEFAULT "public.labeltemplate id"
pg_restore: creating DEFAULT "public.language id"
pg_restore: creating DEFAULT "public.lettertemplate id"
pg_restore: creating DEFAULT "public.locationconfig id"
pg_restore: creating DEFAULT "public.medicareintermediary id"
pg_restore: creating DEFAULT "public.medicareintermediaryinfo id"
pg_restore: creating DEFAULT "public.medsandprescriptions id"
pg_restore: creating DEFAULT "public.messageattribute id"
pg_restore: creating DEFAULT "public.messageattribute_aud id"
pg_restore: creating DEFAULT "public.messagetemplate id"
pg_restore: creating DEFAULT "public.messagetemplate_aud id"
pg_restore: creating DEFAULT "public.noa id"
pg_restore: creating DEFAULT "public.notificationtype id"
pg_restore: creating DEFAULT "public.notr id"
pg_restore: creating DEFAULT "public.npiadminlog id"
pg_restore: creating DEFAULT "public.office id"
pg_restore: creating DEFAULT "public.openedvisit id"
pg_restore: creating DEFAULT "public.pasrecord id"
pg_restore: creating DEFAULT "public.patient id"
pg_restore: from TOC entry 5839; 2604 16788393 DEFAULT patient id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient ALTER COLUMN id SET DEFAULT nextval('public.patient_id_seq'::regclass);


pg_restore: creating DEFAULT "public.patientbillingnote id"
pg_restore: creating DEFAULT "public.patientbillingnote_aud id"
pg_restore: creating DEFAULT "public.patientdiagnoses id"
pg_restore: creating DEFAULT "public.patientfacility id"
pg_restore: creating DEFAULT "public.patientinsurance id"
pg_restore: creating DEFAULT "public.patientintakenote id"
pg_restore: creating DEFAULT "public.patientintakenote_aud id"
pg_restore: creating DEFAULT "public.patientinteraction id"
pg_restore: creating DEFAULT "public.patientlevelofcare id"
pg_restore: creating DEFAULT "public.patientmedication id"
pg_restore: creating DEFAULT "public.patientoffice id"
pg_restore: creating DEFAULT "public.patientpersonrelation id"
pg_restore: creating DEFAULT "public.patientphysician id"
pg_restore: creating DEFAULT "public.patientreferral id"
pg_restore: creating DEFAULT "public.patientroleassignment id"
pg_restore: creating DEFAULT "public.patientstatus id"
pg_restore: creating DEFAULT "public.patientteam id"
pg_restore: creating DEFAULT "public.patientvisit id"
pg_restore: creating DEFAULT "public.person id"
pg_restore: from TOC entry 5788; 2604 16788412 DEFAULT person id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person ALTER COLUMN id SET DEFAULT nextval('public.person_id_seq'::regclass);


pg_restore: creating DEFAULT "public.person_dde_credentials id"
pg_restore: creating DEFAULT "public.person_role id"
pg_restore: creating DEFAULT "public.pharmacybenefitmanager id"
pg_restore: creating DEFAULT "public.phone id"
pg_restore: creating DEFAULT "public.phraselibrary id"
pg_restore: creating DEFAULT "public.physicianservice id"
pg_restore: creating DEFAULT "public.physicianservicediagnoses id"
pg_restore: creating DEFAULT "public.policy id"
pg_restore: creating DEFAULT "public.policy_aud id"
pg_restore: creating DEFAULT "public.principal id"
pg_restore: creating DEFAULT "public.priorauthorization id"
pg_restore: creating DEFAULT "public.program id"
pg_restore: creating DEFAULT "public.programsite id"
pg_restore: creating DEFAULT "public.rate id"
pg_restore: creating DEFAULT "public.refdbref id"
pg_restore: creating DEFAULT "public.referralrejectionreason id"
pg_restore: creating DEFAULT "public.referralsourcetype id"
pg_restore: creating DEFAULT "public.region id"
pg_restore: creating DEFAULT "public.religion id"
pg_restore: creating DEFAULT "public.remit id"
pg_restore: creating DEFAULT "public.remitcheck id"
pg_restore: creating DEFAULT "public.remitdetail id"
pg_restore: creating DEFAULT "public.remitfile id"
pg_restore: creating DEFAULT "public.resource id"
pg_restore: creating DEFAULT "public.rolegroup id"
pg_restore: creating DEFAULT "public.rolerate id"
pg_restore: creating DEFAULT "public.roomboardgroup id"
pg_restore: creating DEFAULT "public.roomboardtier id"
pg_restore: creating DEFAULT "public.scenariotype id"
pg_restore: creating DEFAULT "public.seqhclaimlog id"
pg_restore: creating DEFAULT "public.sitenotification id"
pg_restore: creating DEFAULT "public.sitepayertype id"
pg_restore: creating DEFAULT "public.siteroleassignment id"
pg_restore: creating DEFAULT "public.siterolelist id"
pg_restore: creating DEFAULT "public.smartformanswer id"
pg_restore: creating DEFAULT "public.smartformexpression id"
pg_restore: creating DEFAULT "public.smartformquestion id"
pg_restore: creating DEFAULT "public.smartformresponse id"
pg_restore: creating DEFAULT "public.tabconfig id"
pg_restore: creating DEFAULT "public.tabcontext id"
pg_restore: creating DEFAULT "public.teamofficeassignment id"
pg_restore: creating DEFAULT "public.teampersonassignment id"
pg_restore: creating DEFAULT "public.teampersonlist id"
pg_restore: from TOC entry 5851; 2604 16788455 DEFAULT teampersonlist id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teampersonlist ALTER COLUMN id SET DEFAULT nextval('public.teampersonlist_id_seq'::regclass);


pg_restore: creating DEFAULT "public.teamregionassignment id"
pg_restore: creating DEFAULT "public.teamsiteassignment id"
pg_restore: creating DEFAULT "public.thirdpartyrolemap id"
pg_restore: creating DEFAULT "public.userpreference id"
pg_restore: creating DEFAULT "public.visittrip id"
pg_restore: creating DEFAULT "public.wagecache id"
pg_restore: creating CONSTRAINT "public.acl acl_pkey"
pg_restore: creating CONSTRAINT "public.address_aud address_aud_pkey"
pg_restore: creating CONSTRAINT "public.address address_pkey"
pg_restore: creating CONSTRAINT "public.adjustmentreason_aud adjustmentreason_aud_pkey"
pg_restore: creating CONSTRAINT "public.adjustmentreason adjustmentreason_code_ukey"
pg_restore: creating CONSTRAINT "public.adjustmentreason adjustmentreason_pkey"
pg_restore: creating CONSTRAINT "public.allergy_aud allergy_aud_pkey"
pg_restore: creating CONSTRAINT "public.allergy allergy_pkey"
pg_restore: creating CONSTRAINT "public.claimbatch batchkey_unique"
pg_restore: creating CONSTRAINT "public.batchmedication_aud batchmedication_aud_pkey"
pg_restore: creating CONSTRAINT "public.batchmedication batchmedication_pkey"
pg_restore: creating CONSTRAINT "public.batchpatientmedication_aud batchpatientmedication_aud_pkey"
pg_restore: creating CONSTRAINT "public.batchpatientmedication batchpatientmedication_pkey"
pg_restore: creating CONSTRAINT "public.bereavementcontact_aud bereavementcontact_aud_pkey"
pg_restore: creating CONSTRAINT "public.bereavementsettings_aud bereavementsettings_aud_pkey"
pg_restore: creating CONSTRAINT "public.bereavementsettings bereavementsettings_bereavementsettings_cd_site_id_hospice__key"
pg_restore: creating CONSTRAINT "public.bereavementspecialoccasion_aud bereavementspecialoccasion_aud_pkey"
pg_restore: creating CONSTRAINT "public.billingfollowup_aud billingfollowup_aud_pkey"
pg_restore: creating CONSTRAINT "public.billingfollowup billingfollowup_pkey"
pg_restore: creating CONSTRAINT "public.billlog_aud billlog_aud_pkey"
pg_restore: creating CONSTRAINT "public.billlog billlog_pkey"
pg_restore: creating CONSTRAINT "public.booksclosedhistory booksclosedhistory_pk"
pg_restore: creating CONSTRAINT "public.certification_aud certification_aud_pkey"
pg_restore: creating CONSTRAINT "public.certification_patientinteraction_aud certification_patientinteraction_aud_pkey"
pg_restore: creating CONSTRAINT "public.certification certification_pkey"
pg_restore: creating CONSTRAINT "public.certification_patientinteraction certificationpatientinteraction_pkey"
pg_restore: creating CONSTRAINT "public.church_aud church_aud_pkey"
pg_restore: creating CONSTRAINT "public.church_pas_records_aud church_pas_records_aud_pkey"
pg_restore: creating CONSTRAINT "public.church church_pkey"
pg_restore: creating CONSTRAINT "public.claim_aud claim_aud_pkey"
pg_restore: creating CONSTRAINT "public.claim_claimrevenuedetail_aud claim_claimrevenuedetail_aud_pkey"
pg_restore: creating CONSTRAINT "public.claim_claimtransaction_aud claim_claimtransaction_aud_pkey"
pg_restore: creating CONSTRAINT "public.claim_claimtransactiondetail_aud claim_claimtransactionsdetail_aud_pkey"
pg_restore: creating CONSTRAINT "public.claim_log claim_log_pkey"
pg_restore: from TOC entry 6499; 2606 16809959 CONSTRAINT claim_log claim_log_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claim_log" does not exist
Command was: ALTER TABLE ONLY public.claim_log
    ADD CONSTRAINT claim_log_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.claim claim_pkey"
pg_restore: creating CONSTRAINT "public.claim_prebill claim_prebill_pkey"
pg_restore: from TOC entry 6501; 2606 16799196 CONSTRAINT claim_prebill claim_prebill_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claim_prebill" does not exist
Command was: ALTER TABLE ONLY public.claim_prebill
    ADD CONSTRAINT claim_prebill_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.claimbatch_aud claimbatch_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimbatch_gen claimbatch_gen_pkey"
pg_restore: from TOC entry 6513; 2606 16806657 CONSTRAINT claimbatch_gen claimbatch_gen_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.claimbatch_gen" does not exist
Command was: ALTER TABLE ONLY public.claimbatch_gen
    ADD CONSTRAINT claimbatch_gen_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.claimbatch claimbatch_pkey"
pg_restore: creating CONSTRAINT "public.claimchanges claimchanges_pk"
pg_restore: creating CONSTRAINT "public.claimcmsstatus claimcmsstatus_claim_id_key"
pg_restore: creating CONSTRAINT "public.claimcmsstatus claimcmsstatus_pk"
pg_restore: creating CONSTRAINT "public.claimtransaction_aud claimdetail_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimtransaction claimdetail_pkey"
pg_restore: creating CONSTRAINT "public.claimmedication_aud claimmedication_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimpatientvisit_aud claimpatientvisit_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimrequestlog claimrequestlog_pk"
pg_restore: creating CONSTRAINT "public.claimrevenuedetail_aud claimrev_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimstatusdata claimstatusdata_code_key"
pg_restore: creating CONSTRAINT "public.claimstatushistory claimstatushistory_pk"
pg_restore: creating CONSTRAINT "public.claimstatusinquirylog_aud claimstatusinquirylog_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimstatusinquirylog claimstatusinquirylog_pkey"
pg_restore: creating CONSTRAINT "public.claimtransaction_claimtransactiondetail_aud claimtransaction_claimtransactiondetail_aud_pkey"
pg_restore: creating CONSTRAINT "public.claimtransactiondetail_aud claimtransdetail_aud_pkey"
pg_restore: creating CONSTRAINT "public.clinical_data clinical_data_pkey"
pg_restore: creating CONSTRAINT "public.contract_aud contract_aud_pkey"
pg_restore: creating CONSTRAINT "public.contract contract_pkey"
pg_restore: creating CONSTRAINT "public.dancefloorpanel_aud dancefloorpanel_aud_pkey"
pg_restore: creating CONSTRAINT "public.dancefloorpanel dancefloorpanel_pkey"
pg_restore: creating CONSTRAINT "public.datafix_log datafix_log_pkey"
pg_restore: creating CONSTRAINT "public.dischargeclaimnotrclaim dischargeclaimnotrclaim_discharge_claim_id_key"
pg_restore: creating CONSTRAINT "public.dischargeclaimnotrclaim dischargeclaimnotrclaim_notr_claim_id_key"
pg_restore: creating CONSTRAINT "public.dischargecode_aud dischargecode_aud_pkey"
pg_restore: creating CONSTRAINT "public.dischargecode dischargecode_codetype_code_hospice_id_key"
pg_restore: creating CONSTRAINT "public.dischargecode dischargecode_pkey"
pg_restore: creating CONSTRAINT "public.dischargecode_program_aud dischargecode_program_aud_pkey"
pg_restore: creating CONSTRAINT "public.dischargecode_program dischargecode_program_pkey"
pg_restore: creating CONSTRAINT "public.dischargedaybillingrule_aud dischargedaybillingrule_aud_pkey"
pg_restore: creating CONSTRAINT "public.dischargedaybillingrule dischargedaybillingrule_pkey"
pg_restore: creating CONSTRAINT "public.dischargereason_aud dischargereason_aud_pkey"
pg_restore: creating CONSTRAINT "public.dischargereason dischargereason_pkey"
pg_restore: creating CONSTRAINT "public.dischargereason_program_aud dischargereason_program_aud_pkey"
pg_restore: creating CONSTRAINT "public.dischargereason_program dischargereason_program_pkey"
pg_restore: creating CONSTRAINT "public.displayfield_aud displayfield_aud_pkey"
pg_restore: creating CONSTRAINT "public.displayfield displayfield_pkey"
pg_restore: creating CONSTRAINT "public.displayfield displayfield_unique_key"
pg_restore: creating CONSTRAINT "public.displayviewfields_aud displayviewfields_aud_pkey"
pg_restore: creating CONSTRAINT "public.displayviewfields_displayfield_aud displayviewfields_displayfield_aud_pkey"
pg_restore: creating CONSTRAINT "public.displayviewfields displayviewfields_pkey"
pg_restore: creating CONSTRAINT "public.electionperiod electionperiod_pkey"
pg_restore: creating CONSTRAINT "public.email_list_person_aud email_list_person_aud_pkey"
pg_restore: creating CONSTRAINT "public.email_list_person email_list_person_person_id_emaillist_id_key"
pg_restore: creating CONSTRAINT "public.emaillisttype_aud emaillisttype_aud_pkey"
pg_restore: creating CONSTRAINT "public.emaillisttype emaillisttype_pkey"
pg_restore: creating CONSTRAINT "public.facility_aud facility_aud_pkey"
pg_restore: creating CONSTRAINT "public.facility_facilitytypes_aud facility_facilitytypes_aud_pkey"
pg_restore: creating CONSTRAINT "public.facility_offices_aud facility_offices_aud_pkey"
pg_restore: creating CONSTRAINT "public.facility facility_pkey"
pg_restore: creating CONSTRAINT "public.facility_smartformresponse_aud facility_smartformresponse_aud_pkey"
pg_restore: creating CONSTRAINT "public.facilitytype_aud facilitytype_aud_pkey"
pg_restore: creating CONSTRAINT "public.facilitytype_loc_aud facilitytype_loc_aud_pkey"
pg_restore: creating CONSTRAINT "public.facilitytype facilitytype_name_key"
pg_restore: creating CONSTRAINT "public.facilitytype facilitytype_pkey"
pg_restore: creating CONSTRAINT "public.fileuploadlog_aud fileuploadlog_aud_pkey"
pg_restore: creating CONSTRAINT "public.fileuploadlog fileuploadlog_pkey"
pg_restore: creating CONSTRAINT "public.finalclaimcancelclaim finalclaimcancelclaim_cancel_claim_id_key"
pg_restore: creating CONSTRAINT "public.finalclaimcancelclaim finalclaimcancelclaim_final_claim_id_key"
pg_restore: creating CONSTRAINT "public.hbrole_aud hbrole_aud_pkey"
pg_restore: creating CONSTRAINT "public.hbrole hbrole_pkey"
pg_restore: creating CONSTRAINT "public.hospice_acl_aud hospice_acl_aud_pkey"
pg_restore: creating CONSTRAINT "public.hospice_aud hospice_aud_pkey"
pg_restore: creating CONSTRAINT "public.hospice hospice_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_aud insurancecarrier_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_insurancecarriersitecredentials_aud insurancecarrier_carriersitecredentials_aud_composite_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_dischargedaybillingrule_aud insurancecarrier_dischargedaybillingrule_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_insurancecarrierrates_aud insurancecarrier_insurancecarrierrates_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_insurancecarrierrevcode_aud insurancecarrier_insurancecarrierrevcode_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_insurancecarriertob_aud insurancecarrier_insurancecarriertob_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier insurancecarrier_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrier_site_financialcredentials_aud insurancecarrier_site_financialcredentials_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrate_aud insurancecarrierrate_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrate insurancecarrierrate_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrates_aud insurancecarrierrates_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrates_insurancecarrierrate_aud insurancecarrierrates_insurancecarrierrate_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrates insurancecarrierrates_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrevcode_aud insurancecarrierrevcode_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarrierrevcode insurancecarrierrevcode_type_effectivedate_insurancecarrier_key"
pg_restore: creating CONSTRAINT "public.insurancecarriertob_aud insurancecarriertob_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecarriertob insurancecarriertob_tob_effectivedate_insurancecarrier_id_key"
pg_restore: creating CONSTRAINT "public.insurancecoverage_aud insuranceholder_aud_pkey"
pg_restore: creating CONSTRAINT "public.insurancecoverage insuranceholder_pkey"
pg_restore: creating CONSTRAINT "public.electiondefinition_aud insuranceprovider_aud_pkey"
pg_restore: creating CONSTRAINT "public.electiondefinition insuranceprovider_pkey"
pg_restore: creating CONSTRAINT "public.labeltemplate_aud labeltemplate_aud_pkey"
pg_restore: creating CONSTRAINT "public.language_aud language_aud_pkey"
pg_restore: creating CONSTRAINT "public.language language_pkey"
pg_restore: creating CONSTRAINT "public.lettertemplate_aud lettertemplate_aud_pkey"
pg_restore: creating CONSTRAINT "public.locationconfig locationconfig_pkey"
pg_restore: creating CONSTRAINT "public.eligibility_aud medicareeligibility_aud_pkey"
pg_restore: creating CONSTRAINT "public.eligibility medicareeligibility_pkey"
pg_restore: creating CONSTRAINT "public.eligibility_smartformresponse_aud medicareeligibility_smartformresponse_aud_pkey"
pg_restore: creating CONSTRAINT "public.eligibility_smartformresponse medicareeligibility_smartformresponse_smartformresponses_id_key"
pg_restore: creating CONSTRAINT "public.medicareintermediary medicareintermediary_pkey"
pg_restore: creating CONSTRAINT "public.medicareintermediaryinfo medicareintermediaryinfo_pkey"
pg_restore: creating CONSTRAINT "public.medsandprescriptions_aud medsandprescriptions_aud_pkey"
pg_restore: creating CONSTRAINT "public.messageattribute_aud messageattribute_aud_pkey"
pg_restore: creating CONSTRAINT "public.messagetemplate_aud messagetemplate_aud_pkey"
pg_restore: creating CONSTRAINT "public.newsitem_aud newsitem_aud_pkey"
pg_restore: creating CONSTRAINT "public.noa_aud noa_aud_composite_pkey"
pg_restore: creating CONSTRAINT "public.noa noa_pkey"
pg_restore: creating CONSTRAINT "public.notificationtype_aud notificationtype_aud_pkey"
pg_restore: creating CONSTRAINT "public.notr_aud notr_aud_pkey"
pg_restore: creating CONSTRAINT "public.office_aud office_aud_pkey"
pg_restore: creating CONSTRAINT "public.office office_cpclocation_key"
pg_restore: creating CONSTRAINT "public.office office_pkey"
pg_restore: creating CONSTRAINT "public.openedvisit openedvisit_pk"
pg_restore: creating CONSTRAINT "public.pasrecord pasrecord_pkey"
pg_restore: creating CONSTRAINT "public.patient_allergy_aud patient_allergy_aud_pkey"
pg_restore: creating CONSTRAINT "public.patient_aud patient_aud_pkey"
pg_restore: creating CONSTRAINT "public.patient_diagnosis_aud patient_diagnosis_aud_pkey"
pg_restore: creating CONSTRAINT "public.patient patient_patientaltnumber_key"
pg_restore: from TOC entry 6315; 2606 16806817 CONSTRAINT patient patient_patientaltnumber_key hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_patientaltnumber_key UNIQUE (patientaltnumber);


pg_restore: creating CONSTRAINT "public.patient_patientmedication_aud patient_patientmedication_aud_pkey"
pg_restore: creating CONSTRAINT "public.patient patient_patientnumber_key"
pg_restore: from TOC entry 6317; 2606 16806819 CONSTRAINT patient patient_patientnumber_key hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_patientnumber_key UNIQUE (patientnumber);


pg_restore: creating CONSTRAINT "public.patient patient_pkey"
pg_restore: from TOC entry 6319; 2606 16806827 CONSTRAINT patient patient_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.patientdiagnoses_aud patientdiagnoses_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientdiagnoses patientdiagnoses_pkey"
pg_restore: creating CONSTRAINT "public.patientfacility_aud patientfacility_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientfacility patientfacility_interaction_id_key"
pg_restore: creating CONSTRAINT "public.patientfacility patientfacility_pkey"
pg_restore: creating CONSTRAINT "public.patientinsurance_aud patientinsurance_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinsurance patientinsurance_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_aud patientinteraction_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_patientdiagnoses_aud patientinteraction_patientdiagnoses_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_patientfacility_aud patientinteraction_patientfacility_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_patientlevelofcare_aud patientinteraction_patientlevelofcare_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_patientstatus_aud patientinteraction_patientstatus_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction_patientvisit_aud patientinteraction_patientvisit_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientinteraction patientinteraction_pkey"
pg_restore: creating CONSTRAINT "public.patientlevelofcare_aud patientlevelofcare_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientlevelofcare patientlevelofcare_interaction_id_key"
pg_restore: creating CONSTRAINT "public.patientlevelofcare patientlevelofcare_pkey"
pg_restore: creating CONSTRAINT "public.patientmedication_aud patientmedication_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientmedication patientmedication_pkey"
pg_restore: creating CONSTRAINT "public.patientoffice_aud patientoffice_aud_id_pk"
pg_restore: creating CONSTRAINT "public.patientoffice patientoffice_patient_id_episodenum_effectivedate_ukey"
pg_restore: creating CONSTRAINT "public.patientpersonrelation_aud patientpersonrelation_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientpersonrelation patientpersonrelation_patientid_rank_unique_key"
pg_restore: creating CONSTRAINT "public.patientpersonrelation patientpersonrelation_pkey"
pg_restore: creating CONSTRAINT "public.patientpersonrelation_types_aud patientpersonrelation_types_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientphysician_aud patientphysician_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientphysician patientphysician_pkey"
pg_restore: creating CONSTRAINT "public.patientreferral_aud patientreferral_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientreferral patientreferral_pkey"
pg_restore: creating CONSTRAINT "public.patientroleassignment_aud patientroleassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientroleassignment patientroleassignment_pkey"
pg_restore: creating CONSTRAINT "public.patientstatus_aud patientstatus_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientstatus patientstatus_interaction_id_key"
pg_restore: creating CONSTRAINT "public.patientstatus patientstatus_pkey"
pg_restore: creating CONSTRAINT "public.patientteam_aud patientteam_aud_id_pk"
pg_restore: creating CONSTRAINT "public.patientteam patientteam_patient_id_episodenum_effectivedate_ukey"
pg_restore: creating CONSTRAINT "public.patientvisit_aud patientvisit_aud_pkey"
pg_restore: creating CONSTRAINT "public.patientvisit patientvisit_interaction_id_key"
pg_restore: creating CONSTRAINT "public.patientvisit patientvisit_pkey"
pg_restore: creating CONSTRAINT "public.person_aud person_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_dde_credentials_aud person_dde_credentials_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_hospice_aud person_hospice_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_hospice person_hospice_pkey"
pg_restore: creating CONSTRAINT "public.person_office_aud person_office_aud_pkey"
pg_restore: from TOC entry 6862; 2606 16807403 CONSTRAINT person_office_aud person_office_aud_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person_office_aud" does not exist
Command was: ALTER TABLE ONLY public.person_office_aud
    ADD CONSTRAINT person_office_aud_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.person_office person_office_pkey"
pg_restore: creating CONSTRAINT "public.person person_personnumber_key"
pg_restore: from TOC entry 6228; 2606 16806648 CONSTRAINT person person_personnumber_key hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_personnumber_key UNIQUE (personnumber);


pg_restore: creating CONSTRAINT "public.person person_pkey"
pg_restore: from TOC entry 6230; 2606 16806669 CONSTRAINT person person_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.person_programsite person_programsite_person_id_rank_key"
pg_restore: creating CONSTRAINT "public.person_region_aud person_region_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_region person_region_pkey"
pg_restore: creating CONSTRAINT "public.person_role_aud person_role_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_role person_role_pkey"
pg_restore: creating CONSTRAINT "public.person_site_aud person_site_aud_pkey"
pg_restore: from TOC entry 6870; 2606 16807608 CONSTRAINT person_site_aud person_site_aud_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person_site_aud" does not exist
Command was: ALTER TABLE ONLY public.person_site_aud
    ADD CONSTRAINT person_site_aud_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.person_site person_site_pkey"
pg_restore: creating CONSTRAINT "public.person_smartformresponse_aud person_smartformresponse_aud_pkey"
pg_restore: creating CONSTRAINT "public.person_smartformresponse person_smartformresponse_smartformresponses_id_key"
pg_restore: creating CONSTRAINT "public.pharmacybenefitmanager_aud pharmacybenefitmanager_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_aud phone_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_facility_aud phone_facility_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_facility phone_facility_phone_id_key"
pg_restore: creating CONSTRAINT "public.phone_hospice_aud phone_hospice_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_hospice phone_hospice_pkey"
pg_restore: creating CONSTRAINT "public.phone_insurancecarrier_aud phone_insurancecarrier_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_insurancecarrier phone_insurancecarrier_phone_id_key"
pg_restore: creating CONSTRAINT "public.phone_office_aud phone_office_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_office phone_office_phone_id_key"
pg_restore: creating CONSTRAINT "public.phone_patient_aud phone_patient_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_patient phone_patient_phone_id_key"
pg_restore: creating CONSTRAINT "public.phone_person_aud phone_person_aud_pkey"
pg_restore: creating CONSTRAINT "public.phone_person phone_person_phone_id_key"
pg_restore: creating CONSTRAINT "public.phone phone_pkey"
pg_restore: creating CONSTRAINT "public.phraselibrary_aud phraselibrary_aud_pkey"
pg_restore: creating CONSTRAINT "public.phraselibrary phraselibrary_pkey"
pg_restore: creating CONSTRAINT "public.physicianservice_aud physicianservice_aud_pkey"
pg_restore: creating CONSTRAINT "public.physicianservice physicianservice_pkey"
pg_restore: creating CONSTRAINT "public.physicianservicediagnoses_aud physicianservicediagnoses_aud_pkey"
pg_restore: creating CONSTRAINT "public.bereavementcontact pk_bereavementcontact"
pg_restore: creating CONSTRAINT "public.bereavementsettings pk_bereavementoption"
pg_restore: creating CONSTRAINT "public.bereavementspecialoccasion pk_bereavementspecialoccasion"
pg_restore: creating CONSTRAINT "public.certificationnarrative pk_certificationnarrative"
pg_restore: creating CONSTRAINT "public.claimmedication pk_claimmedication"
pg_restore: creating CONSTRAINT "public.claimpatientvisit pk_claimpatientvisit"
pg_restore: creating CONSTRAINT "public.claimrevenuedetail pk_claimrev"
pg_restore: creating CONSTRAINT "public.claimstatusdata pk_claimstatusdata"
pg_restore: creating CONSTRAINT "public.claimtransactiondetail pk_claimtransdetail"
pg_restore: creating CONSTRAINT "public.coverage pk_coverage"
pg_restore: creating CONSTRAINT "public.coverageset pk_coverageset"
pg_restore: creating CONSTRAINT "public.databasechangeloglock pk_databasechangeloglock"
pg_restore: creating CONSTRAINT "public.dischargeclaimnotrclaim pk_dischargeclaimnotrclaim"
pg_restore: creating CONSTRAINT "public.externallink pk_externallink"
pg_restore: creating CONSTRAINT "public.facesheet_phonetypes pk_facesheet_phntypes"
pg_restore: creating CONSTRAINT "public.filescheduler pk_filescheduler"
pg_restore: creating CONSTRAINT "public.finalclaimcancelclaim pk_finalclaimcancelclaim"
pg_restore: creating CONSTRAINT "public.griefrisk pk_griefrisk"
pg_restore: creating CONSTRAINT "public.hbuniquenumber pk_hbuniquenumber"
pg_restore: creating CONSTRAINT "public.insurancecarrier_site_financialcredentials pk_insurancecarrier_site_financialcredentials"
pg_restore: creating CONSTRAINT "public.insurancecarrierrevcode pk_insurancecarrierrevcode"
pg_restore: creating CONSTRAINT "public.insurancecarriertob pk_insurancecarriertob"
pg_restore: creating CONSTRAINT "public.labeltemplate pk_labeltemplate"
pg_restore: creating CONSTRAINT "public.lettertemplate pk_lettertemplate"
pg_restore: creating CONSTRAINT "public.medsandprescriptions pk_medsandprescriptions"
pg_restore: creating CONSTRAINT "public.messageattribute pk_messageattribute"
pg_restore: creating CONSTRAINT "public.messagetemplate pk_messagetemplate"
pg_restore: creating CONSTRAINT "public.notificationtype pk_notificationtype"
pg_restore: creating CONSTRAINT "public.notr pk_notr"
pg_restore: creating CONSTRAINT "public.npiadminlog pk_npiadminlog"
pg_restore: creating CONSTRAINT "public.npiadminlog_aud pk_npiadminlog_aud"
pg_restore: creating CONSTRAINT "public.passwordverification pk_passwordverification"
pg_restore: creating CONSTRAINT "public.patientbillingnote pk_patientbillingnote"
pg_restore: creating CONSTRAINT "public.patientintakenote pk_patientintakenote"
pg_restore: creating CONSTRAINT "public.patientoffice pk_patientoffice"
pg_restore: creating CONSTRAINT "public.patientteam pk_patientteam"
pg_restore: creating CONSTRAINT "public.person_dde_credentials pk_person_dde_credentials"
pg_restore: creating CONSTRAINT "public.pharmacybenefitmanager pk_pharmacybenefitmanager"
pg_restore: creating CONSTRAINT "public.physicianservicediagnoses pk_physicianservicediagnoses"
pg_restore: creating CONSTRAINT "public.policy pk_policy"
pg_restore: creating CONSTRAINT "public.remit pk_remit"
pg_restore: creating CONSTRAINT "public.remitdetail pk_remitdetail"
pg_restore: creating CONSTRAINT "public.sitenotification pk_sitenotification"
pg_restore: creating CONSTRAINT "public.smartformexpression pk_smartformexpression"
pg_restore: creating CONSTRAINT "public.visittrip pk_visittrip"
pg_restore: creating CONSTRAINT "public.principal principal_pkey"
pg_restore: creating CONSTRAINT "public.priorauthorization_aud priorauthorization_aud_pkey"
pg_restore: creating CONSTRAINT "public.priorauthorization priorauthorization_pkey"
pg_restore: creating CONSTRAINT "public.favprocedurecode_aud procedurecode_aud_pkey"
pg_restore: creating CONSTRAINT "public.favprocedurecode procedurecode_pkey"
pg_restore: creating CONSTRAINT "public.program_aud program_aud_pkey"
pg_restore: creating CONSTRAINT "public.program program_pkey"
pg_restore: creating CONSTRAINT "public.programsite_aud programsite_aud_pkey"
pg_restore: creating CONSTRAINT "public.programsite programsite_pkey"
pg_restore: creating CONSTRAINT "public.rate_aud rate_aud_pkey"
pg_restore: creating CONSTRAINT "public.rate rate_pkey"
pg_restore: creating CONSTRAINT "public.refdbref refdbref_pk"
pg_restore: creating CONSTRAINT "public.referralrejectionreason_aud referralrejectionreason_aud_pkey"
pg_restore: creating CONSTRAINT "public.referralrejectionreason referralrejectionreason_pkey"
pg_restore: creating CONSTRAINT "public.referralsourcetype_aud referralsourcetype_aud_pkey"
pg_restore: creating CONSTRAINT "public.referralsourcetype referralsourcetype_pkey"
pg_restore: creating CONSTRAINT "public.region_aud region_aud_pkey"
pg_restore: creating CONSTRAINT "public.region region_pkey"
pg_restore: creating CONSTRAINT "public.religion_aud religion_aud_pkey"
pg_restore: creating CONSTRAINT "public.religion religion_pkey"
pg_restore: creating CONSTRAINT "public.remitcheck remitcheck_pk"
pg_restore: creating CONSTRAINT "public.remitfile remitfile_pk"
pg_restore: creating CONSTRAINT "public.resource resource_pkey"
pg_restore: creating CONSTRAINT "public.resource resource_resourceid_key"
pg_restore: creating CONSTRAINT "public.revinfo revinfo_pkey"
pg_restore: creating CONSTRAINT "public.role_rolerate_aud role_rolerate_aud_pkey"
pg_restore: creating CONSTRAINT "public.rolegroup_aud rolegroup_aud_pkey"
pg_restore: creating CONSTRAINT "public.rolegroup rolegroup_pkey"
pg_restore: creating CONSTRAINT "public.rolerate_aud rolerate_aud_pkey"
pg_restore: creating CONSTRAINT "public.rolerate rolerate_pkey"
pg_restore: creating CONSTRAINT "public.roomboardgroup_aud roomboardgroup_aud_pkey"
pg_restore: creating CONSTRAINT "public.roomboardgroup roomboardgroup_pkey"
pg_restore: creating CONSTRAINT "public.roomboardgroup_tiers_aud roomboardgroup_tiers_aud_pkey"
pg_restore: creating CONSTRAINT "public.roomboardgroup_tiers roomboardgroup_tiers_tier_id_key"
pg_restore: creating CONSTRAINT "public.roomboardtier_aud roomboardtier_aud_pkey"
pg_restore: creating CONSTRAINT "public.roomboardtier roomboardtier_pkey"
pg_restore: creating CONSTRAINT "public.scenariotype scenariotype_pk"
pg_restore: creating CONSTRAINT "public.seqhclaimlog seqhclaimslog_pk"
pg_restore: creating CONSTRAINT "public.sitenotification_aud sitenotification_aud_pkey"
pg_restore: creating CONSTRAINT "public.sitenotification_email_aud sitenotification_email_aud_pkey"
pg_restore: creating CONSTRAINT "public.sitepayertype sitepayertype_pk"
pg_restore: creating CONSTRAINT "public.sitepayertype sitepayertype_site_id_payertype_key"
pg_restore: creating CONSTRAINT "public.siteroleassignment_aud siteroleassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.siteroleassignment siteroleassignment_pkey"
pg_restore: creating CONSTRAINT "public.siterolelist_aud siterolelist_aud_pkey"
pg_restore: creating CONSTRAINT "public.siterolelist siterolelist_pkey"
pg_restore: creating CONSTRAINT "public.smartformanswer_aud smartformanswer_aud_pkey"
pg_restore: creating CONSTRAINT "public.smartformanswer smartformanswer_pkey"
pg_restore: creating CONSTRAINT "public.smartformexpression_aud smartformexpression_aud_pkey"
pg_restore: creating CONSTRAINT "public.smartformquestion_aud smartformquestion_aud_pkey"
pg_restore: creating CONSTRAINT "public.smartformquestion smartformquestion_pkey"
pg_restore: creating CONSTRAINT "public.smartformresponse_aud smartformresponse_aud_pkey"
pg_restore: creating CONSTRAINT "public.smartformresponse smartformresponse_pkey"
pg_restore: creating CONSTRAINT "public.tabconfig tabconconfig_pk"
pg_restore: creating CONSTRAINT "public.tabcontext tabcontext_pk"
pg_restore: creating CONSTRAINT "public.teamofficeassignment_aud teamofficeassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.teamofficeassignment teamofficeassignment_pkey"
pg_restore: creating CONSTRAINT "public.teampersonassignment_aud teampersonassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.teampersonassignment teampersonassignment_pkey"
pg_restore: creating CONSTRAINT "public.teampersonlist_aud teampersonlist_aud_pkey"
pg_restore: creating CONSTRAINT "public.teampersonlist teampersonlist_pkey"
pg_restore: from TOC entry 6375; 2606 16808680 CONSTRAINT teampersonlist teampersonlist_pkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teampersonlist
    ADD CONSTRAINT teampersonlist_pkey PRIMARY KEY (id);


pg_restore: creating CONSTRAINT "public.teampersonlist teampersonlist_teamnumber_key"
pg_restore: from TOC entry 6377; 2606 16808737 CONSTRAINT teampersonlist teampersonlist_teamnumber_key hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teampersonlist
    ADD CONSTRAINT teampersonlist_teamnumber_key UNIQUE (teamnumber);


pg_restore: creating CONSTRAINT "public.teamregionassignment_aud teamregionassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.teamregionassignment teamregionassignment_pkey"
pg_restore: creating CONSTRAINT "public.teamsiteassignment_aud teamsiteassignment_aud_pkey"
pg_restore: creating CONSTRAINT "public.teamsiteassignment teamsiteassignment_pkey"
pg_restore: creating CONSTRAINT "public.thirdpartyrolemap thirdpartyrolemap_pk"
pg_restore: creating CONSTRAINT "public.tier_rates_aud tier_rates_aud_pkey"
pg_restore: creating CONSTRAINT "public.tier_rates tier_rates_rate_id_key"
pg_restore: creating CONSTRAINT "public.userpreference userpreference_pk"
pg_restore: creating CONSTRAINT "public.wagecache wagecache_pk"
pg_restore: creating INDEX "public.allergy_patient_id_idx"
pg_restore: creating INDEX "public.certification_certificationtype_idx"
pg_restore: creating INDEX "public.certification_electionperiod_id_idx"
pg_restore: creating INDEX "public.certification_hospicephysician_id_idx"
pg_restore: creating INDEX "public.certification_patientinteraction_certification_id_idx"
pg_restore: creating INDEX "public.checkNoNPI"
pg_restore: creating INDEX "public.checkNumNPI"
pg_restore: creating INDEX "public.claim_claimkey_idx"
pg_restore: creating INDEX "public.claim_id_claimstatus_idx"
pg_restore: creating INDEX "public.claim_id_idx"
pg_restore: creating INDEX "public.claim_patient_id_idx"
pg_restore: creating INDEX "public.claim_posted_patient_id_idx"
pg_restore: creating INDEX "public.claim_servicestart_patient_id_idx"
pg_restore: creating INDEX "public.claimbatch_id_idx"
pg_restore: creating INDEX "public.claimcancel"
pg_restore: creating INDEX "public.claimrevenuedetail_claim_id_idx"
pg_restore: creating INDEX "public.claimtransaction_claim_id_idx"
pg_restore: creating INDEX "public.claimtransactiondetail_claimrevenuedetail_id_idx"
pg_restore: creating INDEX "public.claimtransactiondetail_claimtransaction_id_idx"
pg_restore: creating INDEX "public.clinical_data_patient_id_idx"
pg_restore: creating INDEX "public.coverage_cvgset_idx"
pg_restore: creating INDEX "public.coverage_policy_idx"
pg_restore: creating INDEX "public.coverageset_effdt_idx"
pg_restore: creating INDEX "public.coverageset_enddt_idx"
pg_restore: creating INDEX "public.coverageset_patientepisode_idx"
pg_restore: creating INDEX "public.covpolicy"
pg_restore: creating INDEX "public.covsetpatient"
pg_restore: creating INDEX "public.dischargedaybillingrule_dischargetype_idx"
pg_restore: creating INDEX "public.dischargedaybillingrule_insurancecarrier_id_idx"
pg_restore: creating INDEX "public.dischargenotr"
pg_restore: creating INDEX "public.dischargereason_dischargecode_id_idx"
pg_restore: creating INDEX "public.dobdate"
pg_restore: from TOC entry 6306; 1259 16806791 INDEX dobdate hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX dobdate ON public.patient USING btree (dateofbirth);


pg_restore: creating INDEX "public.electionperiod_actualenddate_insurancecoverage_id_idx"
pg_restore: creating INDEX "public.electionperiod_episodenum_idx"
pg_restore: creating INDEX "public.electionperiod_expectedenddate_insurancecoverage_id_idx"
pg_restore: creating INDEX "public.electionperiod_insurancecoverage_id_electionnumber_idx"
pg_restore: creating INDEX "public.electionperiod_policy_id_idx"
pg_restore: creating INDEX "public.electionperiod_startdate_insurancecoverage_id_idx"
pg_restore: creating INDEX "public.eligibility_patient_id_idx"
pg_restore: creating INDEX "public.eligibility_smartformresponse_eligibility_id_smartformresponses"
pg_restore: creating INDEX "public.facility_facilitytypes_facility_id_facilitytype_id_idx"
pg_restore: creating INDEX "public.facility_npi_idx"
pg_restore: creating INDEX "public.facility_offices_facility_id_office_id_idx"
pg_restore: creating INDEX "public.facility_smartformresponse_facility_id_smartformresponse_id_idx"
pg_restore: creating INDEX "public.first"
pg_restore: from TOC entry 6307; 1259 16806792 INDEX first hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX first ON public.patient USING btree (firstname);


pg_restore: creating INDEX "public.insurancecarrier_address_id_idx"
pg_restore: creating INDEX "public.insurancecarrier_payertype_idx"
pg_restore: creating INDEX "public.insurancecarrierrate_carrier_rates_id_idx"
pg_restore: creating INDEX "public.insurancecarrierrates_insurancecarrier_id_idx"
pg_restore: creating INDEX "public.insurancecoverage_effdt_idx"
pg_restore: creating INDEX "public.insurancecoverage_patientid_effdt_idx"
pg_restore: creating INDEX "public.last"
pg_restore: from TOC entry 6308; 1259 16806793 INDEX last hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX last ON public.patient USING btree (lastname);


pg_restore: creating INDEX "public.noa_admissiondate_idx"
pg_restore: creating INDEX "public.noa_attendingphysician_id_idx"
pg_restore: creating INDEX "public.noa_certifyingphysician_id_idx"
pg_restore: creating INDEX "public.noa_claim_id_idx"
pg_restore: creating INDEX "public.noa_coverage_id_idx"
pg_restore: creating INDEX "public.noa_patient_id_idx"
pg_restore: creating INDEX "public.noa_policy_id_idx"
pg_restore: creating INDEX "public.openedvisit_creationdate_idx"
pg_restore: creating INDEX "public.openedvisit_hbcvisitid_idx"
pg_restore: creating INDEX "public.openedvisit_lut_index"
pg_restore: creating INDEX "public.patient_address_id_idx"
pg_restore: from TOC entry 6309; 1259 16806794 INDEX patient_address_id_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_address_id_idx ON public.patient USING btree (address_id);


pg_restore: creating INDEX "public.patient_admissiondate_idx"
pg_restore: from TOC entry 6310; 1259 16806795 INDEX patient_admissiondate_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_admissiondate_idx ON public.patient USING btree (admissiondate);


pg_restore: creating INDEX "public.patient_aud_lut_idx"
pg_restore: creating INDEX "public.patient_combined_idx"
pg_restore: creating INDEX "public.patient_combined_office_idx"
pg_restore: creating INDEX "public.patient_currentstatus_idx"
pg_restore: from TOC entry 6311; 1259 16806804 INDEX patient_currentstatus_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_currentstatus_idx ON public.patient USING btree (currentstatus);


pg_restore: creating INDEX "public.patient_dischargedate_partialidx"
pg_restore: from TOC entry 6312; 1259 16806805 INDEX patient_dischargedate_partialidx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_dischargedate_partialidx ON public.patient USING btree (dischargedate) WHERE ((currentstatus)::text = ANY (ARRAY[('Discharged'::character varying)::text, ('Deceased'::character varying)::text]));


pg_restore: creating INDEX "public.patient_id_idx"
pg_restore: creating INDEX "public.patient_lut_idx"
pg_restore: from TOC entry 6313; 1259 16806808 INDEX patient_lut_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_lut_idx ON public.patient USING btree (lastupdatetime);


pg_restore: creating INDEX "public.patient_ssn_idx"
pg_restore: from TOC entry 6320; 1259 16806809 INDEX patient_ssn_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patient_ssn_idx ON public.patient USING btree (ssn);


pg_restore: creating INDEX "public.patientdiagnoses_interactionid_effdt_idx"
pg_restore: creating INDEX "public.patientfacility_facilityid_idx"
pg_restore: creating INDEX "public.patientinteraction_effdt_idx"
pg_restore: creating INDEX "public.patientinteraction_episodenum_idx"
pg_restore: creating INDEX "public.patientinteraction_lut_idx"
pg_restore: creating INDEX "public.patientinteraction_patient_idx"
pg_restore: creating INDEX "public.patientinteraction_patientepisodeeffdt_idx"
pg_restore: creating INDEX "public.patientinteraction_patientepisodeeffdtdesc_idx"
pg_restore: creating INDEX "public.patientinteraction_patientid_effdt_idx"
pg_restore: creating INDEX "public.patientinteraction_personid_idx"
pg_restore: creating INDEX "public.patientmedication_patient_id_idx"
pg_restore: creating INDEX "public.patientnumber"
pg_restore: from TOC entry 6321; 1259 16806810 INDEX patientnumber hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE INDEX patientnumber ON public.patient USING btree (patientnumber);


pg_restore: creating INDEX "public.patientoffice_paitent_id_idx"
pg_restore: creating INDEX "public.patientpersonrelation_patientid_idx"
pg_restore: creating INDEX "public.patientpersonrelation_personid_idx"
pg_restore: creating INDEX "public.patientpersonrelation_types_patientpersonrelation_id_types_idx"
pg_restore: creating INDEX "public.patientphysician_effectivedate_idx"
pg_restore: creating INDEX "public.patientphysician_patientid_effdt_idx"
pg_restore: creating INDEX "public.patientphysician_personid_idx"
pg_restore: creating INDEX "public.patientphysician_physiciantype"
pg_restore: creating INDEX "public.patientreferral_callreceivedphone_id_idx"
pg_restore: creating INDEX "public.patientreferral_facility_id_idx"
pg_restore: creating INDEX "public.patientreferral_patientid_effdt_idx"
pg_restore: creating INDEX "public.patientreferral_referral_date_time_idx"
pg_restore: creating INDEX "public.patientroleassignment_patientid_roleid_idx"
pg_restore: creating INDEX "public.patientroleassignment_personid_roleid_idx"
pg_restore: creating INDEX "public.patientstatus_datetimeid_idx"
pg_restore: creating INDEX "public.patientstatus_datetimeiddesc_idx"
pg_restore: creating INDEX "public.patientstatus_deleted_idx"
pg_restore: creating INDEX "public.patientstatus_dischargereason_id_idx"
pg_restore: creating INDEX "public.patientstatus_patientinteraction_idx"
pg_restore: creating INDEX "public.patientstatus_rejectionreason_id_idx"
pg_restore: creating INDEX "public.patientstatus_status_idx"
pg_restore: creating INDEX "public.patientvisit_cpcvisitid_idx"
pg_restore: creating INDEX "public.patientvisit_created_idx"
pg_restore: creating INDEX "public.patientvisit_lut_idx"
pg_restore: creating INDEX "public.person_programsite_personid_rank_idx"
pg_restore: creating INDEX "public.person_role_person_id_rank_role_id_idx"
pg_restore: creating INDEX "public.person_serialnumber_idx"
pg_restore: from TOC entry 6231; 1259 16806728 INDEX person_serialnumber_idx hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: CREATE INDEX person_serialnumber_idx ON public.person USING btree (serialnumber);


pg_restore: creating INDEX "public.person_site_siteid"
pg_restore: creating INDEX "public.person_smartformresponse_person_id_smartformresponses_id_idx"
pg_restore: creating INDEX "public.phone_facility_facility_id_phone_id_idx"
pg_restore: creating INDEX "public.phone_insurancecarrier_payer_id_phone_id_idx"
pg_restore: creating INDEX "public.phone_office_office_id_phone_id_idx"
pg_restore: creating INDEX "public.phone_patient_patientid_idx"
pg_restore: creating INDEX "public.phone_person_personid_idx"
pg_restore: creating INDEX "public.phone_phonetype_idx"
pg_restore: creating INDEX "public.physicianservice_lut_idx"
pg_restore: creating INDEX "public.physicianservice_patient_visit_id_idx"
pg_restore: creating INDEX "public.physicianservicediagnoses_lut_idx"
pg_restore: creating INDEX "public.physicianservicediagnoses_physicianservice_id_idx"
pg_restore: creating INDEX "public.policy_patient_idx"
pg_restore: creating INDEX "public.policy_patientpersonrelation_id_idx"
pg_restore: creating INDEX "public.policyinsurer"
pg_restore: creating INDEX "public.programsite_program_id_idx"
pg_restore: creating INDEX "public.programsite_site_id_idx"
pg_restore: creating INDEX "public.pvcpcvisitid_idx"
pg_restore: creating INDEX "public.statusrank_idx"
pg_restore: creating INDEX "public.teampersonassignment_person_id_teamperson_id_idx"
pg_restore: creating INDEX "public.zipfiscal"
pg_restore: creating TRIGGER "public.address address_admit_county_trigger_delete"
pg_restore: from TOC entry 7371; 2620 16806997 TRIGGER address address_admit_county_trigger_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.addressdeletepatdenorm() does not exist
Command was: CREATE CONSTRAINT TRIGGER address_admit_county_trigger_delete AFTER DELETE ON public.address NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.addressdeletepatdenorm();


pg_restore: creating TRIGGER "public.address address_admit_county_trigger_update"
pg_restore: from TOC entry 7372; 2620 16807002 TRIGGER address address_admit_county_trigger_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.addressupdatepatdenorm() does not exist
Command was: CREATE CONSTRAINT TRIGGER address_admit_county_trigger_update AFTER INSERT OR UPDATE ON public.address NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.addressupdatepatdenorm();


pg_restore: creating TRIGGER "public.program after_program_insertion_trigger"
pg_restore: from TOC entry 7374; 2620 16808434 TRIGGER program after_program_insertion_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.populate_discharge_codes_for_new_program() does not exist
Command was: CREATE TRIGGER after_program_insertion_trigger AFTER INSERT ON public.program FOR EACH ROW EXECUTE PROCEDURE public.populate_discharge_codes_for_new_program();


pg_restore: creating TRIGGER "public.claim audit_entry_on_claim_insert_or_delete"
pg_restore: from TOC entry 7385; 2620 16805842 TRIGGER claim audit_entry_on_claim_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claim() does not exist
Command was: CREATE TRIGGER audit_entry_on_claim_insert_or_delete AFTER INSERT OR DELETE ON public.claim FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claim();


pg_restore: creating TRIGGER "public.claim audit_entry_on_claim_update"
pg_restore: from TOC entry 7386; 2620 16805843 TRIGGER claim audit_entry_on_claim_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claim() does not exist
Command was: CREATE TRIGGER audit_entry_on_claim_update AFTER UPDATE OF payertype, patient_id, sent, posted, servicestart, serviceend, claimtotal, receiveddate, processeddate, receiptdate, location, statusreason, updated, claimbatch_id, insurancecoverage_id, claimstatus, claimkey, programsite_id, usercomment, parentclaim_id, isamendmentapproved, patient_address_id, patientadmitdate, patientdischargedate, statuscode, typeofbill, attendingphysicianname, attendingphysiciannpi, certifyingphysicianname, certifyingphysiciannpi, diagnosiscodes, conditioncodes, occurrencecodes, valuecodes, covereddays, daysrtn, dayscc, daysresp, daysgip, totalwithvisits, isonmanualhold, manualholdreason, cbsa, servicefacilitynpi, secondaryinsurancecoverage_id, reviewneeded, remitpayer, secondaryclaim_id ON public.claim FOR EACH ROW WHEN (((((((((((((((((((((((((((((((((((((((((((((((((old.payertype)::text IS DISTINCT FROM (new.payertype)::text) OR (old.patient_id IS DISTINCT FROM new.patient_id)) OR (old.sent IS DISTINCT FROM new.sent)) OR (old.posted IS DISTINCT FROM new.posted)) OR (old.servicestart IS DISTINCT FROM new.servicestart)) OR (old.serviceend IS DISTINCT FROM new.serviceend)) OR (old.claimtotal IS DISTINCT FROM new.claimtotal)) OR (old.receiveddate IS DISTINCT FROM new.receiveddate)) OR (old.processeddate IS DISTINCT FROM new.processeddate)) OR (old.receiptdate IS DISTINCT FROM new.receiptdate)) OR ((old.location)::text IS DISTINCT FROM (new.location)::text)) OR (old.statusreason IS DISTINCT FROM new.statusreason)) OR (old.claimbatch_id IS DISTINCT FROM new.claimbatch_id)) OR (old.insurancecoverage_id IS DISTINCT FROM new.insurancecoverage_id)) OR ((old.claimstatus)::text IS DISTINCT FROM (new.claimstatus)::text)) OR ((old.claimkey)::text IS DISTINCT FROM (new.claimkey)::text)) OR (old.programsite_id IS DISTINCT FROM new.programsite_id)) OR (old.usercomment IS DISTINCT FROM new.usercomment)) OR (old.parentclaim_id IS DISTINCT FROM new.parentclaim_id)) OR (old.isamendmentapproved IS DISTINCT FROM new.isamendmentapproved)) OR (old.patient_address_id IS DISTINCT FROM new.patient_address_id)) OR (old.patientadmitdate IS DISTINCT FROM new.patientadmitdate)) OR (old.patientdischargedate IS DISTINCT FROM new.patientdischargedate)) OR ((old.statuscode)::text IS DISTINCT FROM (new.statuscode)::text)) OR ((old.typeofbill)::text IS DISTINCT FROM (new.typeofbill)::text)) OR ((old.attendingphysicianname)::text IS DISTINCT FROM (new.attendingphysicianname)::text)) OR ((old.attendingphysiciannpi)::text IS DISTINCT FROM (new.attendingphysiciannpi)::text)) OR ((old.certifyingphysicianname)::text IS DISTINCT FROM (new.certifyingphysicianname)::text)) OR ((old.certifyingphysiciannpi)::text IS DISTINCT FROM (new.certifyingphysiciannpi)::text)) OR ((old.diagnosiscodes)::text IS DISTINCT FROM (new.diagnosiscodes)::text)) OR ((old.conditioncodes)::text IS DISTINCT FROM (new.conditioncodes)::text)) OR ((old.occurrencecodes)::text IS DISTINCT FROM (new.occurrencecodes)::text)) OR ((old.valuecodes)::text IS DISTINCT FROM (new.valuecodes)::text)) OR (old.covereddays IS DISTINCT FROM new.covereddays)) OR (old.daysrtn IS DISTINCT FROM new.daysrtn)) OR (old.dayscc IS DISTINCT FROM new.dayscc)) OR (old.daysresp IS DISTINCT FROM new.daysresp)) OR (old.daysgip IS DISTINCT FROM new.daysgip)) OR (old.totalwithvisits IS DISTINCT FROM new.totalwithvisits)) OR (old.isonmanualhold IS DISTINCT FROM new.isonmanualhold)) OR (old.manualholdreason IS DISTINCT FROM new.manualholdreason)) OR ((old.cbsa)::text IS DISTINCT FROM (new.cbsa)::text)) OR ((old.servicefacilitynpi)::text IS DISTINCT FROM (new.servicefacilitynpi)::text)) OR (old.secondaryinsurancecoverage_id IS DISTINCT FROM new.secondaryinsurancecoverage_id)) OR ((old.reviewneeded)::text IS DISTINCT FROM (new.reviewneeded)::text)) OR ((old.remitpayer)::text IS DISTINCT FROM (new.remitpayer)::text)) OR (old.secondaryclaim_id IS DISTINCT FROM new.secondaryclaim_id))) EXECUTE PROCEDURE public.create_audit_entry_for_claim();


pg_restore: creating TRIGGER "public.claimmedication audit_entry_on_claimmedication_insert_or_delete"
pg_restore: from TOC entry 7395; 2620 16807394 TRIGGER claimmedication audit_entry_on_claimmedication_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimmedication() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimmedication_insert_or_delete AFTER INSERT OR DELETE ON public.claimmedication FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimmedication();


pg_restore: creating TRIGGER "public.claimmedication audit_entry_on_claimmedication_update"
pg_restore: from TOC entry 7396; 2620 16807395 TRIGGER claimmedication audit_entry_on_claimmedication_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimmedication() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimmedication_update AFTER UPDATE OF claim_id, filldate, revcode, uom, description, hcpcs, units, reporting, amount, ndc ON public.claimmedication FOR EACH ROW WHEN (((((((((((old.claim_id IS DISTINCT FROM new.claim_id) OR (old.filldate IS DISTINCT FROM new.filldate)) OR ((old.revcode)::text IS DISTINCT FROM (new.revcode)::text)) OR ((old.uom)::text IS DISTINCT FROM (new.uom)::text)) OR ((old.description)::text IS DISTINCT FROM (new.description)::text)) OR ((old.hcpcs)::text IS DISTINCT FROM (new.hcpcs)::text)) OR (old.units IS DISTINCT FROM new.units)) OR ((old.reporting)::text IS DISTINCT FROM (new.reporting)::text)) OR (old.amount IS DISTINCT FROM new.amount)) OR ((old.ndc)::text IS DISTINCT FROM (new.ndc)::text))) EXECUTE PROCEDURE public.create_audit_entry_for_claimmedication();


pg_restore: creating TRIGGER "public.claimpatientvisit audit_entry_on_claimpatientvisit_insert_or_delete"
pg_restore: from TOC entry 7397; 2620 16805714 TRIGGER claimpatientvisit audit_entry_on_claimpatientvisit_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimpatientvisit() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimpatientvisit_insert_or_delete AFTER INSERT OR DELETE ON public.claimpatientvisit FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimpatientvisit();


pg_restore: creating TRIGGER "public.claimpatientvisit audit_entry_on_claimpatientvisit_update"
pg_restore: from TOC entry 7398; 2620 16805715 TRIGGER claimpatientvisit audit_entry_on_claimpatientvisit_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimpatientvisit() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimpatientvisit_update AFTER UPDATE OF claim_id, visitdate, revcode, hcpcs, description, units, charges ON public.claimpatientvisit FOR EACH ROW WHEN ((((((((old.claim_id IS DISTINCT FROM new.claim_id) OR (old.visitdate IS DISTINCT FROM new.visitdate)) OR ((old.revcode)::text IS DISTINCT FROM (new.revcode)::text)) OR ((old.hcpcs)::text IS DISTINCT FROM (new.hcpcs)::text)) OR ((old.description)::text IS DISTINCT FROM (new.description)::text)) OR (old.units IS DISTINCT FROM new.units)) OR (old.charges IS DISTINCT FROM new.charges))) EXECUTE PROCEDURE public.create_audit_entry_for_claimpatientvisit();


pg_restore: creating TRIGGER "public.claimrevenuedetail audit_entry_on_claimrevenuedetail_insert_or_delete"
pg_restore: from TOC entry 7400; 2620 16806766 TRIGGER claimrevenuedetail audit_entry_on_claimrevenuedetail_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimrevenuedetail() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimrevenuedetail_insert_or_delete AFTER INSERT OR DELETE ON public.claimrevenuedetail FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimrevenuedetail();


pg_restore: creating TRIGGER "public.claimrevenuedetail audit_entry_on_claimrevenuedetail_update"
pg_restore: from TOC entry 7401; 2620 16806767 TRIGGER claimrevenuedetail audit_entry_on_claimrevenuedetail_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimrevenuedetail() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimrevenuedetail_update AFTER UPDATE OF date, days, revcode, hcpcs, facility_id, amountbilled, claim_id, levelofcare, revclass ON public.claimrevenuedetail FOR EACH ROW WHEN ((((((((((old.date IS DISTINCT FROM new.date) OR (old.days IS DISTINCT FROM new.days)) OR ((old.revcode)::text IS DISTINCT FROM (new.revcode)::text)) OR ((old.hcpcs)::text IS DISTINCT FROM (new.hcpcs)::text)) OR (old.facility_id IS DISTINCT FROM new.facility_id)) OR (old.amountbilled IS DISTINCT FROM new.amountbilled)) OR (old.claim_id IS DISTINCT FROM new.claim_id)) OR ((old.levelofcare)::text IS DISTINCT FROM (new.levelofcare)::text)) OR ((old.revclass)::text IS DISTINCT FROM (new.revclass)::text))) EXECUTE PROCEDURE public.create_audit_entry_for_claimrevenuedetail();


pg_restore: creating TRIGGER "public.claimtransaction audit_entry_on_claimtransaction_insert_or_delete"
pg_restore: from TOC entry 7392; 2620 16806555 TRIGGER claimtransaction audit_entry_on_claimtransaction_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimtransaction() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimtransaction_insert_or_delete AFTER INSERT OR DELETE ON public.claimtransaction FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimtransaction();


pg_restore: creating TRIGGER "public.claimtransaction audit_entry_on_claimtransaction_update"
pg_restore: from TOC entry 7393; 2620 16806556 TRIGGER claimtransaction audit_entry_on_claimtransaction_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimtransaction() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimtransaction_update AFTER UPDATE OF claim_id, transactiondate, checknumber, amount, type, action, comment, lastupdatetime, lastupdateuser, version, adjustment_reason_id, dcn, remit_id, units, revcode, isrevcodeadjustment, checkdate, postingtype ON public.claimtransaction FOR EACH ROW WHEN (((((((((((((((((((old.claim_id IS DISTINCT FROM new.claim_id) OR (old.transactiondate IS DISTINCT FROM new.transactiondate)) OR ((old.checknumber)::text IS DISTINCT FROM (new.checknumber)::text)) OR (old.amount IS DISTINCT FROM new.amount)) OR ((old.type)::text IS DISTINCT FROM (new.type)::text)) OR ((old.action)::text IS DISTINCT FROM (new.action)::text)) OR ((old.comment)::text IS DISTINCT FROM (new.comment)::text)) OR (old.lastupdatetime IS DISTINCT FROM new.lastupdatetime)) OR ((old.lastupdateuser)::text IS DISTINCT FROM (new.lastupdateuser)::text)) OR (old.version IS DISTINCT FROM new.version)) OR (old.adjustment_reason_id IS DISTINCT FROM new.adjustment_reason_id)) OR ((old.dcn)::text IS DISTINCT FROM (new.dcn)::text)) OR (old.remit_id IS DISTINCT FROM new.remit_id)) OR (old.units IS DISTINCT FROM new.units)) OR ((old.revcode)::text IS DISTINCT FROM (new.revcode)::text)) OR (old.isrevcodeadjustment IS DISTINCT FROM new.isrevcodeadjustment)) OR (old.checkdate IS DISTINCT FROM new.checkdate)) OR ((old.postingtype)::text IS DISTINCT FROM (new.postingtype)::text))) EXECUTE PROCEDURE public.create_audit_entry_for_claimtransaction();


pg_restore: creating TRIGGER "public.claimtransactiondetail audit_entry_on_claimtransactiondetail_insert_or_delete"
pg_restore: from TOC entry 7402; 2620 16806532 TRIGGER claimtransactiondetail audit_entry_on_claimtransactiondetail_insert_or_delete hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimtransactiondetail() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimtransactiondetail_insert_or_delete AFTER INSERT OR DELETE ON public.claimtransactiondetail FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimtransactiondetail();


pg_restore: creating TRIGGER "public.claimtransactiondetail audit_entry_on_claimtransactiondetail_update"
pg_restore: from TOC entry 7403; 2620 16806533 TRIGGER claimtransactiondetail audit_entry_on_claimtransactiondetail_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimtransactiondetail() does not exist
Command was: CREATE TRIGGER audit_entry_on_claimtransactiondetail_update AFTER UPDATE OF amount, contractoradjustment, claimrevenuedetail_id, claimtransaction_id ON public.claimtransactiondetail FOR EACH ROW WHEN (((((old.amount IS DISTINCT FROM new.amount) OR (old.contractoradjustment IS DISTINCT FROM new.contractoradjustment)) OR (old.claimrevenuedetail_id IS DISTINCT FROM new.claimrevenuedetail_id)) OR (old.claimtransaction_id IS DISTINCT FROM new.claimtransaction_id))) EXECUTE PROCEDURE public.create_audit_entry_for_claimtransactiondetail();


pg_restore: creating TRIGGER "public.patient audit_entry_on_patient_delete"
pg_restore: from TOC entry 7373; 2620 16806919 TRIGGER patient audit_entry_on_patient_delete hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: CREATE TRIGGER audit_entry_on_patient_delete AFTER DELETE ON public.patient FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_patient();


pg_restore: creating TRIGGER "public.claimbatch batchrejected_update"
pg_restore: from TOC entry 7394; 2620 16806935 TRIGGER claimbatch batchrejected_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.batchrejected() does not exist
Command was: CREATE TRIGGER batchrejected_update AFTER UPDATE OF status ON public.claimbatch FOR EACH ROW WHEN ((((old.status)::text IS DISTINCT FROM (new.status)::text) AND ((new.status)::text = 'REJECTED'::text))) EXECUTE PROCEDURE public.batchrejected();


pg_restore: creating TRIGGER "public.claim before_claim_deletion_trigger"
pg_restore: from TOC entry 7387; 2620 16805845 TRIGGER claim before_claim_deletion_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.check_if_claim_deletable() does not exist
Command was: CREATE TRIGGER before_claim_deletion_trigger BEFORE DELETE ON public.claim FOR EACH ROW EXECUTE PROCEDURE public.check_if_claim_deletable();


pg_restore: creating TRIGGER "public.patientstatus before_patient_status_insertion_trigger"
pg_restore: from TOC entry 7378; 2620 16807278 TRIGGER patientstatus before_patient_status_insertion_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.check_duplicate_statuses() does not exist
Command was: CREATE TRIGGER before_patient_status_insertion_trigger BEFORE INSERT ON public.patientstatus FOR EACH ROW EXECUTE PROCEDURE public.check_duplicate_statuses();


pg_restore: creating TRIGGER "public.office booksclosedhistory_insert"
pg_restore: from TOC entry 7367; 2620 16809838 TRIGGER office booksclosedhistory_insert hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updatebooksclosedhistory() does not exist
Command was: CREATE TRIGGER booksclosedhistory_insert AFTER INSERT ON public.office FOR EACH ROW EXECUTE PROCEDURE public.updatebooksclosedhistory();


pg_restore: creating TRIGGER "public.office booksclosedhistory_update"
pg_restore: from TOC entry 7368; 2620 16809841 TRIGGER office booksclosedhistory_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updatebooksclosedhistory() does not exist
Command was: CREATE TRIGGER booksclosedhistory_update AFTER UPDATE OF bookscloseddate ON public.office FOR EACH ROW WHEN ((old.bookscloseddate IS DISTINCT FROM new.bookscloseddate)) EXECUTE PROCEDURE public.updatebooksclosedhistory();


pg_restore: creating TRIGGER "public.claim claim_cms_status_update"
pg_restore: from TOC entry 7389; 2620 16805847 TRIGGER claim claim_cms_status_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.createcmsstatus() does not exist
Command was: CREATE TRIGGER claim_cms_status_update AFTER UPDATE ON public.claim FOR EACH ROW WHEN ((((((((old.claimstatuscategory IS NULL) AND (new.claimstatuscategory IS NOT NULL)) OR ((old.claimstatuscategory)::text <> (new.claimstatuscategory)::text)) OR ((old.claimstatuscode)::text <> (new.claimstatuscode)::text)) OR ((old.claimstatuscode IS NULL) AND (new.claimstatuscode IS NOT NULL))) OR ((old.claimstatuscategory IS NOT NULL) AND (new.claimstatuscategory IS NULL))) OR ((old.claimstatuscode IS NOT NULL) AND (new.claimstatuscode IS NULL)))) EXECUTE PROCEDURE public.createcmsstatus();


pg_restore: creating TRIGGER "public.claim claimhistory_insert"
pg_restore: from TOC entry 7390; 2620 16805848 TRIGGER claim claimhistory_insert hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updateclaimhistory() does not exist
Command was: CREATE TRIGGER claimhistory_insert AFTER INSERT ON public.claim FOR EACH ROW EXECUTE PROCEDURE public.updateclaimhistory();


pg_restore: creating TRIGGER "public.claim claimhistory_update"
pg_restore: from TOC entry 7391; 2620 16805849 TRIGGER claim claimhistory_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updateclaimhistory() does not exist
Command was: CREATE TRIGGER claimhistory_update AFTER UPDATE OF claimstatus, statusreason, claimstatuscategory, claimstatuscode, expectedpaymentdate, expectedpaymentamount, expectedchecknumber ON public.claim FOR EACH ROW WHEN (((((((((((old.claimstatus)::text IS DISTINCT FROM (new.claimstatus)::text) OR (old.statusreason IS DISTINCT FROM new.statusreason)) OR ((old.claimstatuscategory)::text IS DISTINCT FROM (new.claimstatuscategory)::text)) OR ((old.claimstatuscode)::text IS DISTINCT FROM (new.claimstatuscode)::text)) OR (old.updated IS DISTINCT FROM new.updated)) OR (old.expectedpaymentdate IS DISTINCT FROM new.expectedpaymentdate)) OR (old.expectedpaymentamount IS DISTINCT FROM new.expectedpaymentamount)) OR ((old.expectedchecknumber)::text IS DISTINCT FROM (new.expectedchecknumber)::text)) OR (old.receiveddate IS DISTINCT FROM new.receiveddate))) EXECUTE PROCEDURE public.updateclaimhistory();


pg_restore: creating TRIGGER "public.claimrequestlog claimrequestlogtrigger"
pg_restore: from TOC entry 7399; 2620 16807993 TRIGGER claimrequestlog claimrequestlogtrigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.create_audit_entry_for_claimrequestlog() does not exist
Command was: CREATE TRIGGER claimrequestlogtrigger AFTER INSERT OR DELETE ON public.claimrequestlog FOR EACH ROW EXECUTE PROCEDURE public.create_audit_entry_for_claimrequestlog();


pg_restore: creating TRIGGER "public.patientstatus episode_num_status_insert"
pg_restore: from TOC entry 7379; 2620 16807280 TRIGGER patientstatus episode_num_status_insert hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updateepisodenewstatus() does not exist
Command was: CREATE CONSTRAINT TRIGGER episode_num_status_insert AFTER INSERT ON public.patientstatus NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.updateepisodenewstatus();


pg_restore: creating TRIGGER "public.patientstatus episode_num_status_update"
pg_restore: from TOC entry 7380; 2620 16807282 TRIGGER patientstatus episode_num_status_update hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updateepisodeupdatestatus() does not exist
Command was: CREATE CONSTRAINT TRIGGER episode_num_status_update AFTER UPDATE ON public.patientstatus NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.updateepisodeupdatestatus();


pg_restore: creating TRIGGER "public.insurancecoverage ins_ep_num_set"
pg_restore: from TOC entry 7404; 2620 16810209 TRIGGER insurancecoverage ins_ep_num_set hummingbird
pg_restore: error: could not execute query: ERROR:  function public.setepisodenum() does not exist
Command was: CREATE CONSTRAINT TRIGGER ins_ep_num_set AFTER INSERT OR UPDATE ON public.insurancecoverage NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.setepisodenum('insurancecoverage', 'true');


pg_restore: creating TRIGGER "public.patientoffice maintaineffectiveenddt_trigger_insert_delete_update_after"
pg_restore: from TOC entry 7405; 2620 16807582 TRIGGER patientoffice maintaineffectiveenddt_trigger_insert_delete_update_after hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updatedatesafteraction() does not exist
Command was: CREATE CONSTRAINT TRIGGER maintaineffectiveenddt_trigger_insert_delete_update_after AFTER INSERT OR DELETE OR UPDATE ON public.patientoffice NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.updatedatesafteraction();


pg_restore: creating TRIGGER "public.patientteam maintaineffectiveenddt_trigger_insert_delete_update_after"
pg_restore: from TOC entry 7406; 2620 16807447 TRIGGER patientteam maintaineffectiveenddt_trigger_insert_delete_update_after hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updatedatesafteraction() does not exist
Command was: CREATE CONSTRAINT TRIGGER maintaineffectiveenddt_trigger_insert_delete_update_after AFTER INSERT OR DELETE OR UPDATE ON public.patientteam NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.updatedatesafteraction();


pg_restore: creating TRIGGER "public.office new_site_insert_trigger"
pg_restore: from TOC entry 7369; 2620 16809842 TRIGGER office new_site_insert_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.populate_bereavement_settings_for_site() does not exist
Command was: CREATE TRIGGER new_site_insert_trigger AFTER INSERT ON public.office FOR EACH ROW EXECUTE PROCEDURE public.populate_bereavement_settings_for_site();


pg_restore: creating TRIGGER "public.office new_site_insert_trigger_unassignedteam"
pg_restore: from TOC entry 7370; 2620 16809846 TRIGGER office new_site_insert_trigger_unassignedteam hummingbird
pg_restore: error: could not execute query: ERROR:  function public.assign_unassignedteam_newsite() does not exist
Command was: CREATE TRIGGER new_site_insert_trigger_unassignedteam AFTER INSERT ON public.office FOR EACH ROW EXECUTE PROCEDURE public.assign_unassignedteam_newsite();


pg_restore: creating TRIGGER "public.patientfacility patient_facility_denorm_trigger"
pg_restore: from TOC entry 7383; 2620 16807147 TRIGGER patientfacility patient_facility_denorm_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.synchistdetailtopatient() does not exist
Command was: CREATE CONSTRAINT TRIGGER patient_facility_denorm_trigger AFTER INSERT OR UPDATE ON public.patientfacility NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.synchistdetailtopatient();


pg_restore: creating TRIGGER "public.patientinteraction patient_interaction_denorm_trigger"
pg_restore: from TOC entry 7376; 2620 16804396 TRIGGER patientinteraction patient_interaction_denorm_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.syncinttopatient() does not exist
Command was: CREATE CONSTRAINT TRIGGER patient_interaction_denorm_trigger AFTER INSERT OR UPDATE ON public.patientinteraction NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.syncinttopatient();


pg_restore: creating TRIGGER "public.patientlevelofcare patient_levelofcare_denorm_trigger"
pg_restore: from TOC entry 7384; 2620 16807305 TRIGGER patientlevelofcare patient_levelofcare_denorm_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.synchistdetailtopatient() does not exist
Command was: CREATE CONSTRAINT TRIGGER patient_levelofcare_denorm_trigger AFTER INSERT OR UPDATE ON public.patientlevelofcare NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.synchistdetailtopatient();


pg_restore: creating TRIGGER "public.patientstatus patient_status_denorm_trigger"
pg_restore: from TOC entry 7381; 2620 16807284 TRIGGER patientstatus patient_status_denorm_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.synchistdetailtopatient() does not exist
Command was: CREATE CONSTRAINT TRIGGER patient_status_denorm_trigger AFTER INSERT OR UPDATE ON public.patientstatus NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.synchistdetailtopatient();


pg_restore: creating TRIGGER "public.patientphysician phys_ep_num_set"
pg_restore: from TOC entry 7375; 2620 16807412 TRIGGER patientphysician phys_ep_num_set hummingbird
pg_restore: error: could not execute query: ERROR:  function public.setepisodenum() does not exist
Command was: CREATE CONSTRAINT TRIGGER phys_ep_num_set AFTER INSERT OR UPDATE ON public.patientphysician NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.setepisodenum('patientphysician', 'true');


pg_restore: creating TRIGGER "public.claim seqh_claim_trigger"
pg_restore: from TOC entry 7388; 2620 16805846 TRIGGER claim seqh_claim_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.update_seqh_claims() does not exist
Command was: CREATE TRIGGER seqh_claim_trigger AFTER UPDATE ON public.claim FOR EACH ROW EXECUTE PROCEDURE public.update_seqh_claims();


pg_restore: creating TRIGGER "public.patientstatus status_rank_trigger"
pg_restore: from TOC entry 7382; 2620 16807285 TRIGGER patientstatus status_rank_trigger hummingbird
pg_restore: error: could not execute query: ERROR:  function public.updatestatusrank() does not exist
Command was: CREATE TRIGGER status_rank_trigger BEFORE INSERT OR UPDATE ON public.patientstatus FOR EACH ROW EXECUTE PROCEDURE public.updatestatusrank();


pg_restore: creating TRIGGER "public.patientinteraction trans_ep_num_set"
pg_restore: from TOC entry 7377; 2620 16804398 TRIGGER patientinteraction trans_ep_num_set hummingbird
pg_restore: error: could not execute query: ERROR:  function public.setepisodenum() does not exist
Command was: CREATE CONSTRAINT TRIGGER trans_ep_num_set AFTER INSERT OR UPDATE ON public.patientinteraction NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE public.setepisodenum('patientinteraction');


pg_restore: creating FK CONSTRAINT "public.acl acl_resource_id_fkey"
pg_restore: creating FK CONSTRAINT "public.certification certification_attendingphysician_id_fkey"
pg_restore: from TOC entry 7200; 2606 16807034 FK CONSTRAINT certification certification_attendingphysician_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT certification_attendingphysician_id_fkey FOREIGN KEY (attendingphysician_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.certification certification_electionperiod_fkey"
pg_restore: creating FK CONSTRAINT "public.certification certification_facetofacevisit_id_fkey"
pg_restore: creating FK CONSTRAINT "public.certification certification_hospicephysician_id_fkey"
pg_restore: from TOC entry 7201; 2606 16807039 FK CONSTRAINT certification certification_hospicephysician_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT certification_hospicephysician_id_fkey FOREIGN KEY (hospicephysician_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.certification_patientinteraction_aud certification_patientinteraction_aud_rev_fkey"
pg_restore: creating FK CONSTRAINT "public.certification_patientinteraction certificationpatientinteraction_certification_id_fkey"
pg_restore: creating FK CONSTRAINT "public.certification_patientinteraction certificationpatientinteraction_patientinteraction_id_fkey"
pg_restore: creating FK CONSTRAINT "public.phone_church church_id_fk"
pg_restore: creating FK CONSTRAINT "public.church church_religion_id_fkey"
pg_restore: creating FK CONSTRAINT "public.claim claim_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.claim claim_secondarypolicy_fkey"
pg_restore: creating FK CONSTRAINT "public.claimcmsstatus claimcmsstatus_claim_fk"
pg_restore: creating FK CONSTRAINT "public.claimcmsstatus claimcmsstatus_status_fk"
pg_restore: creating FK CONSTRAINT "public.claimtransaction claimdetail_claim_fkey"
pg_restore: creating FK CONSTRAINT "public.claimrevenuedetail claimrevenuedetail_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.contract contract_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.coverage coverage_coverageset_fkey"
pg_restore: creating FK CONSTRAINT "public.coverageset coverageset_patient_fkey"
pg_restore: from TOC entry 7085; 2606 16807337 FK CONSTRAINT coverageset coverageset_patient_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.coverageset
    ADD CONSTRAINT coverageset_patient_fkey FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.dischargereason dischargereason_dischargecode_id_fkey"
pg_restore: creating FK CONSTRAINT "public.electionperiod electionperiod_admissioninteraction_id_fkey"
pg_restore: creating FK CONSTRAINT "public.electionperiod electionperiod_dischargeinteraction_id_fkey"
pg_restore: creating FK CONSTRAINT "public.electionperiod electionperiod_eligibility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.electionperiod electionperiod_insurancecoverage_fkey"
pg_restore: creating FK CONSTRAINT "public.electionperiod electionperiod_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.eligibility eligibility_insurancecoverage_fkey"
pg_restore: creating FK CONSTRAINT "public.eligibility eligibility_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.eligibility_smartformresponse eligibilitysmartformrespons_eligibility_fkey"
pg_restore: creating FK CONSTRAINT "public.email_list_person email_list_person_emaillist_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facility_facilitytypes facility_facilitytypes_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facility_facilitytypes facility_facilitytypes_facilitytype_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facility_offices facility_offices_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facility_smartformresponse facility_smartformresponse_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facility_smartformresponse facility_smartformresponse_smartformresponses_id_fkey"
pg_restore: creating FK CONSTRAINT "public.facilitytype_loc facilitytype_loc_facilitytype_id_fkey"
pg_restore: creating FK CONSTRAINT "public.phraselibrary_aud fk115657a5df74e053"
pg_restore: creating FK CONSTRAINT "public.patientinsurance_aud fk119f20c6df74e053"
pg_restore: creating FK CONSTRAINT "public.patientinteraction_aud fk122b113edf74e053"
pg_restore: creating FK CONSTRAINT "public.person_office fk14d8a6e63924573a"
pg_restore: creating FK CONSTRAINT "public.person_office fk14d8a6e6f3bc649a"
pg_restore: from TOC entry 7306; 2606 16807677 FK CONSTRAINT person_office fk14d8a6e6f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_office
    ADD CONSTRAINT fk14d8a6e6f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.teamregionassignment_aud fk1889084fdf74e053"
pg_restore: creating FK CONSTRAINT "public.person_region fk19e98f1ec8b4cc3a"
pg_restore: creating FK CONSTRAINT "public.person_region fk19e98f1ef3bc649a"
pg_restore: from TOC entry 7308; 2606 16810256 FK CONSTRAINT person_region fk19e98f1ef3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_region
    ADD CONSTRAINT fk19e98f1ef3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.rate_aud fk1d0a6ed1df74e053"
pg_restore: creating FK CONSTRAINT "public.person_hospice_aud fk2003e2aedf74e053"
pg_restore: creating FK CONSTRAINT "public.facility fk21b8d2c356ec622a"
pg_restore: creating FK CONSTRAINT "public.facility fk21b8d2c3711f475a"
pg_restore: creating FK CONSTRAINT "public.facility fk21b8d2c38f4e2e3a"
pg_restore: creating FK CONSTRAINT "public.facility fk21b8d2c3d475355a"
pg_restore: creating FK CONSTRAINT "public.person_hospice fk2406ab5dd475355a"
pg_restore: creating FK CONSTRAINT "public.person_hospice fk2406ab5df3bc649a"
pg_restore: from TOC entry 7303; 2606 16810244 FK CONSTRAINT person_hospice fk2406ab5df3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_hospice
    ADD CONSTRAINT fk2406ab5df3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.teampersonlist fk256967f0d475355a"
pg_restore: from TOC entry 7145; 2606 16809423 FK CONSTRAINT teampersonlist fk256967f0d475355a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teampersonlist
    ADD CONSTRAINT fk256967f0d475355a FOREIGN KEY (hospice_id) REFERENCES public.hospice(id);


pg_restore: creating FK CONSTRAINT "public.patientdiagnoses fk2962b910593b6c91"
pg_restore: creating FK CONSTRAINT "public.allergy fk2ce1fb60d9bf889a"
pg_restore: from TOC entry 7086; 2606 16807165 FK CONSTRAINT allergy fk2ce1fb60d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.allergy
    ADD CONSTRAINT fk2ce1fb60d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.eligibility fk313d01dfd9bf889a"
pg_restore: from TOC entry 7156; 2606 16806878 FK CONSTRAINT eligibility fk313d01dfd9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.eligibility
    ADD CONSTRAINT fk313d01dfd9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.phone_hospice fk32458563e0e43fa"
pg_restore: creating FK CONSTRAINT "public.phone_hospice fk3245856d475355a"
pg_restore: creating FK CONSTRAINT "public.roomboardtier_aud fk333d367edf74e053"
pg_restore: creating FK CONSTRAINT "public.patient fk340c82e536dc7efa"
pg_restore: from TOC entry 7114; 2606 16809366 FK CONSTRAINT patient fk340c82e536dc7efa hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e536dc7efa FOREIGN KEY (programsite_id) REFERENCES public.programsite(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5371d86fa"
pg_restore: from TOC entry 7111; 2606 16808685 FK CONSTRAINT patient fk340c82e5371d86fa hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5371d86fa FOREIGN KEY (teampersonlist_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e53924573a"
pg_restore: from TOC entry 7115; 2606 16809628 FK CONSTRAINT patient fk340c82e53924573a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e53924573a FOREIGN KEY (office_id) REFERENCES public.office(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5440be4c7"
pg_restore: from TOC entry 7104; 2606 16807928 FK CONSTRAINT patient fk340c82e5440be4c7 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5440be4c7 FOREIGN KEY (pharmacy_id) REFERENCES public.facility(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5584d75a4"
pg_restore: from TOC entry 7105; 2606 16807941 FK CONSTRAINT patient fk340c82e5584d75a4 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5584d75a4 FOREIGN KEY (funeralhome_id) REFERENCES public.facility(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5711f475a"
pg_restore: from TOC entry 7116; 2606 16809642 FK CONSTRAINT patient fk340c82e5711f475a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5711f475a FOREIGN KEY (site_id) REFERENCES public.office(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e58f4e2e3a"
pg_restore: from TOC entry 7103; 2606 16806987 FK CONSTRAINT patient fk340c82e58f4e2e3a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e58f4e2e3a FOREIGN KEY (address_id) REFERENCES public.address(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5d475355a"
pg_restore: from TOC entry 7113; 2606 16809297 FK CONSTRAINT patient fk340c82e5d475355a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5d475355a FOREIGN KEY (hospice_id) REFERENCES public.hospice(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5ec2f8197"
pg_restore: from TOC entry 7110; 2606 16808047 FK CONSTRAINT patient fk340c82e5ec2f8197 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5ec2f8197 FOREIGN KEY (church_id) REFERENCES public.church(id);


pg_restore: creating FK CONSTRAINT "public.patient fk340c82e5f18ed3de"
pg_restore: from TOC entry 7106; 2606 16807946 FK CONSTRAINT patient fk340c82e5f18ed3de hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk340c82e5f18ed3de FOREIGN KEY (dme_id) REFERENCES public.facility(id);


pg_restore: creating FK CONSTRAINT "public.phone_office fk344f6cd3924573a"
pg_restore: creating FK CONSTRAINT "public.phone_office fk344f6cd3e0e43fa"
pg_restore: creating FK CONSTRAINT "public.referralrejectionreason fk3451e630d475355a"
pg_restore: creating FK CONSTRAINT "public.smartformquestion fk38656d13d475355a"
pg_restore: creating FK CONSTRAINT "public.emaillisttype_aud fk3a5f7c65df74e053"
pg_restore: creating FK CONSTRAINT "public.office_aud fk3abf8aaddf74e053"
pg_restore: creating FK CONSTRAINT "public.roomboardgroup_tiers fk3af76526afec008"
pg_restore: creating FK CONSTRAINT "public.roomboardgroup_tiers fk3af76526fb116d8c"
pg_restore: creating FK CONSTRAINT "public.tier_rates_aud fk3fa665a7df74e053"
pg_restore: creating FK CONSTRAINT "public.patient_diagnosis_aud fk41980848df74e053"
pg_restore: creating FK CONSTRAINT "public.insurancecarrierrates fk4ac4ef55f567a3da"
pg_restore: creating FK CONSTRAINT "public.phone_person fk4f153663e0e43fa"
pg_restore: creating FK CONSTRAINT "public.phone_person fk4f15366f3bc649a"
pg_restore: from TOC entry 7075; 2606 16807527 FK CONSTRAINT phone_person fk4f15366f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.phone_person
    ADD CONSTRAINT fk4f15366f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id) ON DELETE CASCADE;


pg_restore: creating FK CONSTRAINT "public.referralrejectionreason_aud fk4fbf7c01df74e053"
pg_restore: creating FK CONSTRAINT "public.program fk50c7b664d475355a"
pg_restore: creating FK CONSTRAINT "public.patientvisit_aud fk5218ec37df74e053"
pg_restore: creating FK CONSTRAINT "public.facilitytype_loc_aud fk5d19a76fdf74e053"
pg_restore: creating FK CONSTRAINT "public.teamregionassignment fk6579c97ec8b4cc3a"
pg_restore: creating FK CONSTRAINT "public.teamregionassignment fk6579c97eccbe7b58"
pg_restore: from TOC entry 7358; 2606 16810418 FK CONSTRAINT teamregionassignment fk6579c97eccbe7b58 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teamregionassignment
    ADD CONSTRAINT fk6579c97eccbe7b58 FOREIGN KEY (teamperson_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.displayfield fk68ad1578d475355a"
pg_restore: creating FK CONSTRAINT "public.person_site fk68b84df1711f475a"
pg_restore: creating FK CONSTRAINT "public.person_site fk68b84df1f3bc649a"
pg_restore: from TOC entry 7168; 2606 16807791 FK CONSTRAINT person_site fk68b84df1f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_site
    ADD CONSTRAINT fk68b84df1f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id) ON DELETE CASCADE;


pg_restore: creating FK CONSTRAINT "public.roomboardgroup_aud fk6af44e65df74e053"
pg_restore: creating FK CONSTRAINT "public.billingfollowup_aud fk6b35c7d8df74e053"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage_aud fk6b4547d7df74e053"
pg_restore: creating FK CONSTRAINT "public.facility_offices fk6be4d77b3924573a"
pg_restore: creating FK CONSTRAINT "public.billlog_aud fk6c8e64eedf74e053"
pg_restore: creating FK CONSTRAINT "public.displayviewfields_displayfield fk6e6d7f57f4887c3c"
pg_restore: creating FK CONSTRAINT "public.displayviewfields_displayfield fk6e6d7f57fca51efa"
pg_restore: creating FK CONSTRAINT "public.patientroleassignment fk714b2228d9bf889a"
pg_restore: from TOC entry 7077; 2606 16806909 FK CONSTRAINT patientroleassignment fk714b2228d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientroleassignment
    ADD CONSTRAINT fk714b2228d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientroleassignment fk714b2228f3bc649a"
pg_restore: from TOC entry 7078; 2606 16806729 FK CONSTRAINT patientroleassignment fk714b2228f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientroleassignment
    ADD CONSTRAINT fk714b2228f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.billingfollowup fk737db5873e0e43fa"
pg_restore: creating FK CONSTRAINT "public.billingfollowup fk737db587d475355a"
pg_restore: creating FK CONSTRAINT "public.church_pas_records fk74ad2ccd48d218ff"
pg_restore: creating FK CONSTRAINT "public.church_pas_records fk74ad2ccdec2f8197"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk75130d0655340fcd"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk75130d06d9bf889a"
pg_restore: from TOC entry 7262; 2606 16810076 FK CONSTRAINT insurancecoverage fk75130d06d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.insurancecoverage
    ADD CONSTRAINT fk75130d06d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk75130d06f567a3da"
pg_restore: creating FK CONSTRAINT "public.church fk784525c73e0e43fa"
pg_restore: creating FK CONSTRAINT "public.church fk784525c78f4e2e3a"
pg_restore: creating FK CONSTRAINT "public.church fk784525c7d475355a"
pg_restore: creating FK CONSTRAINT "public.roomboardgroup_tiers_aud fk79008ff7df74e053"
pg_restore: creating FK CONSTRAINT "public.tier_rates fk7cb92d6afec008"
pg_restore: creating FK CONSTRAINT "public.tier_rates fk7cb92d6e9c6b637"
pg_restore: creating FK CONSTRAINT "public.physicianservice fk7e01c84ba2e6f2b"
pg_restore: creating FK CONSTRAINT "public.smartformquestion_aud fk7f1ed964df74e053"
pg_restore: creating FK CONSTRAINT "public.patientpersonrelation fk7f2daeb6d9bf889a"
pg_restore: from TOC entry 7080; 2606 16807048 FK CONSTRAINT patientpersonrelation fk7f2daeb6d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientpersonrelation
    ADD CONSTRAINT fk7f2daeb6d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientpersonrelation fk7f2daeb6f3bc649a"
pg_restore: from TOC entry 7081; 2606 16807077 FK CONSTRAINT patientpersonrelation fk7f2daeb6f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientpersonrelation
    ADD CONSTRAINT fk7f2daeb6f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.patient_aud fk82c2b636df74e053"
pg_restore: creating FK CONSTRAINT "public.rolegroup fk8a267f89d475355a"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adc3161b2f5"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adc606ed71a"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adc7089967e"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adc711f475a"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adc8f4e2e3a"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adcc8b4cc3a"
pg_restore: creating FK CONSTRAINT "public.office fk8c9c2adcd475355a"
pg_restore: creating FK CONSTRAINT "public.person fk8e4887758f4e2e3a"
pg_restore: from TOC entry 7057; 2606 16806982 FK CONSTRAINT person fk8e4887758f4e2e3a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person
    ADD CONSTRAINT fk8e4887758f4e2e3a FOREIGN KEY (address_id) REFERENCES public.address(id);


pg_restore: creating FK CONSTRAINT "public.person fk8e488775d475355a"
pg_restore: from TOC entry 7059; 2606 16809282 FK CONSTRAINT person fk8e488775d475355a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person
    ADD CONSTRAINT fk8e488775d475355a FOREIGN KEY (hospice_id) REFERENCES public.hospice(id);


pg_restore: creating FK CONSTRAINT "public.phone_insurancecarrier fk90ab31af24d0b803"
pg_restore: creating FK CONSTRAINT "public.phone_insurancecarrier fk90ab31af3e0e43fa"
pg_restore: creating FK CONSTRAINT "public.phone_facility fk915e62743e0e43fa"
pg_restore: creating FK CONSTRAINT "public.region fk91ad1314606ed71a"
pg_restore: creating FK CONSTRAINT "public.region fk91ad1314d475355a"
pg_restore: creating FK CONSTRAINT "public.phone_patient fk927d34f43e0e43fa"
pg_restore: creating FK CONSTRAINT "public.phone_patient fk927d34f4d9bf889a"
pg_restore: from TOC entry 7133; 2606 16807831 FK CONSTRAINT phone_patient fk927d34f4d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.phone_patient
    ADD CONSTRAINT fk927d34f4d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.insurancecarrierrate fk9f50acde4df4cf23"
pg_restore: creating FK CONSTRAINT "public.programsite fk9fa537cb711f475a"
pg_restore: creating FK CONSTRAINT "public.acl fk_acl_principal"
pg_restore: creating FK CONSTRAINT "public.acl_aud fk_acl_revinfo"
pg_restore: creating FK CONSTRAINT "public.priorauthorization_aud fk_adjustmentreason_rev"
pg_restore: creating FK CONSTRAINT "public.certification fk_attdcerttaken_id"
pg_restore: from TOC entry 7202; 2606 16807044 FK CONSTRAINT certification fk_attdcerttaken_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT fk_attdcerttaken_id FOREIGN KEY (attdtaken_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.certification fk_attdtaken_id"
pg_restore: from TOC entry 7203; 2606 16807054 FK CONSTRAINT certification fk_attdtaken_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT fk_attdtaken_id FOREIGN KEY (attdverbaltaken_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.bereavementcontact fk_bereavementspecialoccasion_id_bereavementcontact"
pg_restore: creating FK CONSTRAINT "public.billlog fk_billlog_hospice_id"
pg_restore: creating FK CONSTRAINT "public.remit fk_claim"
pg_restore: creating FK CONSTRAINT "public.claim_claimbatch fk_claim"
pg_restore: creating FK CONSTRAINT "public.claim fk_claim_claim_id"
pg_restore: creating FK CONSTRAINT "public.claim fk_claim_claimbatch"
pg_restore: creating FK CONSTRAINT "public.claim fk_claim_patient"
pg_restore: from TOC entry 7171; 2606 16806904 FK CONSTRAINT claim fk_claim_patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.claim
    ADD CONSTRAINT fk_claim_patient FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.claim fk_claim_patient_address"
pg_restore: creating FK CONSTRAINT "public.claim fk_claim_programsite"
pg_restore: creating FK CONSTRAINT "public.claim_aud fk_claim_revinfo"
pg_restore: creating FK CONSTRAINT "public.claim_claimbatch fk_claimbatch"
pg_restore: creating FK CONSTRAINT "public.claimtransaction_aud fk_claimdetail_revinfo"
pg_restore: creating FK CONSTRAINT "public.claimmedication fk_claimmedication_claim"
pg_restore: creating FK CONSTRAINT "public.claimpatientvisit fk_claimpatientvisit_claim"
pg_restore: creating FK CONSTRAINT "public.claimrevenuedetail fk_claimrev_claim"
pg_restore: creating FK CONSTRAINT "public.claimstatushistory fk_claimstatushistory_claimbatch"
pg_restore: creating FK CONSTRAINT "public.claimtransaction fk_claimtrans_adjustreason"
pg_restore: creating FK CONSTRAINT "public.claimtransaction fk_claimtrans_remit_id"
pg_restore: creating FK CONSTRAINT "public.claimtransactiondetail fk_claimtransdetail_claimrevenue"
pg_restore: creating FK CONSTRAINT "public.claimtransactiondetail fk_claimtransdetail_claimtransaction"
pg_restore: creating FK CONSTRAINT "public.coverage fk_coverage_policy_id"
pg_restore: creating FK CONSTRAINT "public.patientreferral fk_crm_id"
pg_restore: from TOC entry 7117; 2606 16807218 FK CONSTRAINT patientreferral fk_crm_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientreferral
    ADD CONSTRAINT fk_crm_id FOREIGN KEY (crm_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.patient fk_current_patient_facility_id"
pg_restore: from TOC entry 7107; 2606 16807955 FK CONSTRAINT patient fk_current_patient_facility_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT fk_current_patient_facility_id FOREIGN KEY (currentfacility_id) REFERENCES public.facility(id);


pg_restore: creating FK CONSTRAINT "public.dischargecode_program fk_dischargecode_id_dischargecode_program"
pg_restore: creating FK CONSTRAINT "public.dischargereason_program fk_dischargereason_id_dischargereason_program"
pg_restore: creating FK CONSTRAINT "public.insurancecarrier_site_financialcredentials fk_financialcredentials_insurancecarrier"
pg_restore: creating FK CONSTRAINT "public.insurancecarrier_site_financialcredentials fk_financialcredentials_site"
pg_restore: creating FK CONSTRAINT "public.patientfacility fk_group"
pg_restore: creating FK CONSTRAINT "public.certification fk_hospcerttaken_id"
pg_restore: from TOC entry 7204; 2606 16807060 FK CONSTRAINT certification fk_hospcerttaken_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT fk_hospcerttaken_id FOREIGN KEY (hosptaken_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.certification fk_hosptaken_id"
pg_restore: from TOC entry 7205; 2606 16807067 FK CONSTRAINT certification fk_hosptaken_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.certification
    ADD CONSTRAINT fk_hosptaken_id FOREIGN KEY (hospverbaltaken_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.claim fk_insuranceCoverage_claim_coverage"
pg_restore: creating FK CONSTRAINT "public.priorauthorization fk_insuranceCoverage_prior_auth"
pg_restore: creating FK CONSTRAINT "public.insurancecarrierrevcode fk_insurancecarrierrevcode_insurancecarrier"
pg_restore: creating FK CONSTRAINT "public.insurancecarriertob fk_insurancecarriertob_insurancecarrier"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk_insurancecoverage_admission_id"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk_insurancecoverage_eligibility_id"
pg_restore: creating FK CONSTRAINT "public.patientfacility fk_insurancecoverage_id"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk_insurancecoverage_programsite_id"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage fk_insurancecoverage_referral_id"
pg_restore: creating FK CONSTRAINT "public.bereavementcontact fk_labeltemplate"
pg_restore: creating FK CONSTRAINT "public.bereavementcontact fk_lettertemplate"
pg_restore: creating FK CONSTRAINT "public.person_dde_credentials fk_medicareintermediary_person_dde_credentials"
pg_restore: creating FK CONSTRAINT "public.medicareintermediaryinfo fk_medicareintermediaryinfo_hospice"
pg_restore: creating FK CONSTRAINT "public.medsandprescriptions_aud fk_medsandprescriptions_revinfo"
pg_restore: creating FK CONSTRAINT "public.noa fk_noa_claim"
pg_restore: creating FK CONSTRAINT "public.noa fk_noa_programsite_id"
pg_restore: creating FK CONSTRAINT "public.sitenotification fk_notificationtype"
pg_restore: creating FK CONSTRAINT "public.notr fk_notr_claim"
pg_restore: creating FK CONSTRAINT "public.notr_aud fk_notr_claim"
pg_restore: creating FK CONSTRAINT "public.notr_aud fk_notr_revinfo"
pg_restore: creating FK CONSTRAINT "public.npiadminlog_aud fk_npiadminlog_revinfo"
pg_restore: creating FK CONSTRAINT "public.patientoffice fk_office"
pg_restore: creating FK CONSTRAINT "public.patientreferral fk_office_id"
pg_restore: creating FK CONSTRAINT "public.office fk_office_medicareintermediaryinfo"
pg_restore: creating FK CONSTRAINT "public.externallink fk_parentexternallink"
pg_restore: creating FK CONSTRAINT "public.patientteam fk_patient"
pg_restore: from TOC entry 7298; 2606 16807424 FK CONSTRAINT patientteam fk_patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientteam
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id) REFERENCES public.patient(id) DEFERRABLE;


pg_restore: creating FK CONSTRAINT "public.patientoffice fk_patient"
pg_restore: from TOC entry 7296; 2606 16807559 FK CONSTRAINT patientoffice fk_patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientoffice
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id) REFERENCES public.patient(id) DEFERRABLE;


pg_restore: creating FK CONSTRAINT "public.patientintakenote fk_patient"
pg_restore: from TOC entry 7291; 2606 16808146 FK CONSTRAINT patientintakenote fk_patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientintakenote
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id) REFERENCES public.patient(id) DEFERRABLE;


pg_restore: creating FK CONSTRAINT "public.patientbillingnote fk_patient"
pg_restore: from TOC entry 7286; 2606 16808954 FK CONSTRAINT patientbillingnote fk_patient hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientbillingnote
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id) REFERENCES public.patient(id) DEFERRABLE;


pg_restore: creating FK CONSTRAINT "public.batchpatientmedication fk_patient_medication"
pg_restore: creating FK CONSTRAINT "public.patientfacility fk_patientfacility_facilitytype"
pg_restore: creating FK CONSTRAINT "public.patientstatus fk_patientstatus_programsite_id"
pg_restore: creating FK CONSTRAINT "public.patientvisit fk_patientvisit_site"
pg_restore: creating FK CONSTRAINT "public.person_dde_credentials fk_person_person_dde_credentials"
pg_restore: from TOC entry 7302; 2606 16808945 FK CONSTRAINT person_dde_credentials fk_person_person_dde_credentials hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_dde_credentials
    ADD CONSTRAINT fk_person_person_dde_credentials FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.person fk_person_principal"
pg_restore: from TOC entry 7058; 2606 16808182 FK CONSTRAINT person fk_person_principal hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person
    ADD CONSTRAINT fk_person_principal FOREIGN KEY (principal_id) REFERENCES public.principal(id);


pg_restore: creating FK CONSTRAINT "public.pharmacybenefitmanager_aud fk_pharmacybenefitmanager_revinfo"
pg_restore: creating FK CONSTRAINT "public.physicianservicediagnoses fk_physicianservicediagnoses_physicianservice"
pg_restore: creating FK CONSTRAINT "public.bereavementcontact fk_program_id_bereavementcontact"
pg_restore: creating FK CONSTRAINT "public.dischargecode_program fk_program_id_dischargecode_program"
pg_restore: creating FK CONSTRAINT "public.dischargereason_program fk_program_id_dischargereason_program"
pg_restore: creating FK CONSTRAINT "public.remit fk_programsite"
pg_restore: creating FK CONSTRAINT "public.patientreferral fk_refphysician_id"
pg_restore: from TOC entry 7118; 2606 16807223 FK CONSTRAINT patientreferral fk_refphysician_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientreferral
    ADD CONSTRAINT fk_refphysician_id FOREIGN KEY (refphysician_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.remitcheck fk_remitcheck_remitfile_id"
pg_restore: creating FK CONSTRAINT "public.resource_aud fk_resource_revinfo"
pg_restore: creating FK CONSTRAINT "public.hbrole fk_role_principal"
pg_restore: creating FK CONSTRAINT "public.rolegroup fk_rolegroup_principal"
pg_restore: creating FK CONSTRAINT "public.claim fk_secondaryInsuranceCoverage_claim_coverage"
pg_restore: creating FK CONSTRAINT "public.batchmedication fk_site"
pg_restore: creating FK CONSTRAINT "public.sitenotification fk_site"
pg_restore: creating FK CONSTRAINT "public.office fk_site_medsandprescriptions_id"
pg_restore: creating FK CONSTRAINT "public.office fk_site_pbm_id"
pg_restore: creating FK CONSTRAINT "public.smartformexpression fk_smartformexpression1_smartformexpression"
pg_restore: creating FK CONSTRAINT "public.smartformexpression fk_smartformexpression2_smartformexpression"
pg_restore: creating FK CONSTRAINT "public.smartformquestion fk_smartformquestion_smartformexpression"
pg_restore: creating FK CONSTRAINT "public.patientteam fk_teampersonlist"
pg_restore: from TOC entry 7299; 2606 16808709 FK CONSTRAINT patientteam fk_teampersonlist hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.patientteam
    ADD CONSTRAINT fk_teampersonlist FOREIGN KEY (teampersonlist_id) REFERENCES public.teampersonlist(id) DEFERRABLE;


pg_restore: creating FK CONSTRAINT "public.patientreferral fk_teampersonlist_id"
pg_restore: from TOC entry 7123; 2606 16808695 FK CONSTRAINT patientreferral fk_teampersonlist_id hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.patientreferral
    ADD CONSTRAINT fk_teampersonlist_id FOREIGN KEY (teampersonlist_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.teamofficeassignment fka063c7463924573a"
pg_restore: creating FK CONSTRAINT "public.teamofficeassignment fka063c746ccbe7b58"
pg_restore: from TOC entry 7354; 2606 16808739 FK CONSTRAINT teamofficeassignment fka063c746ccbe7b58 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teamofficeassignment
    ADD CONSTRAINT fka063c746ccbe7b58 FOREIGN KEY (teamperson_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.patientreferral fka26aada22260bb39"
pg_restore: creating FK CONSTRAINT "public.patientreferral fka26aada2d9bf889a"
pg_restore: from TOC entry 7119; 2606 16807231 FK CONSTRAINT patientreferral fka26aada2d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientreferral
    ADD CONSTRAINT fka26aada2d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.dancefloorpanel_aud fka369ed9cdf74e053"
pg_restore: creating FK CONSTRAINT "public.language fka3acf778d475355a"
pg_restore: creating FK CONSTRAINT "public.patientpersonrelation_types fka495e950b96e033a"
pg_restore: creating FK CONSTRAINT "public.hospice fka4b3a6477089967e"
pg_restore: creating FK CONSTRAINT "public.hospice fka4b3a6478f4e2e3a"
pg_restore: creating FK CONSTRAINT "public.hospice fka4b3a647b8c9c42e"
pg_restore: creating FK CONSTRAINT "public.teampersonassignment fka7fbf89fccbe7b58"
pg_restore: from TOC entry 7357; 2606 16808722 FK CONSTRAINT teampersonassignment fka7fbf89fccbe7b58 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teampersonassignment
    ADD CONSTRAINT fka7fbf89fccbe7b58 FOREIGN KEY (teamperson_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.teampersonassignment fka7fbf89ff3bc649a"
pg_restore: from TOC entry 7356; 2606 16808262 FK CONSTRAINT teampersonassignment fka7fbf89ff3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.teampersonassignment
    ADD CONSTRAINT fka7fbf89ff3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.email_list_person fkac3eedd3f3bc649a"
pg_restore: from TOC entry 7238; 2606 16809562 FK CONSTRAINT email_list_person fkac3eedd3f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.email_list_person
    ADD CONSTRAINT fkac3eedd3f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.phone_hospice_aud fkae206b27df74e053"
pg_restore: creating FK CONSTRAINT "public.teamsiteassignment fkaf0f951711f475a"
pg_restore: creating FK CONSTRAINT "public.teamsiteassignment fkaf0f951ccbe7b58"
pg_restore: from TOC entry 7154; 2606 16808849 FK CONSTRAINT teamsiteassignment fkaf0f951ccbe7b58 hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.teampersonlist" does not exist
Command was: ALTER TABLE ONLY public.teamsiteassignment
    ADD CONSTRAINT fkaf0f951ccbe7b58 FOREIGN KEY (teamperson_id) REFERENCES public.teampersonlist(id);


pg_restore: creating FK CONSTRAINT "public.patientinteraction_patientvisit_aud fkb11b2449df74e053"
pg_restore: creating FK CONSTRAINT "public.dischargedaybillingrule fkb226301df567a3da"
pg_restore: creating FK CONSTRAINT "public.siterolelist fkb49fdabbd475355a"
pg_restore: creating FK CONSTRAINT "public.hbrole fkb7128070d475355a"
pg_restore: creating FK CONSTRAINT "public.dischargecode fkb9e5a5afd475355a"
pg_restore: creating FK CONSTRAINT "public.patientphysician fkbe7a65c5d9bf889a"
pg_restore: from TOC entry 7136; 2606 16807331 FK CONSTRAINT patientphysician fkbe7a65c5d9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientphysician
    ADD CONSTRAINT fkbe7a65c5d9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientphysician fkbe7a65c5f3bc649a"
pg_restore: from TOC entry 7135; 2606 16807326 FK CONSTRAINT patientphysician fkbe7a65c5f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientphysician
    ADD CONSTRAINT fkbe7a65c5f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.person_smartformresponse fkc070a324f3bc649a"
pg_restore: from TOC entry 7062; 2606 16807430 FK CONSTRAINT person_smartformresponse fkc070a324f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_smartformresponse
    ADD CONSTRAINT fkc070a324f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.smartformanswer_aud fkcb0ff87cdf74e053"
pg_restore: creating FK CONSTRAINT "public.patientstatus fkcb48bf37593b6c91"
pg_restore: creating FK CONSTRAINT "public.church_pas_records_aud fkcdac2c1edf74e053"
pg_restore: creating FK CONSTRAINT "public.insurancecarrier fkd468ade8f4e2e3a"
pg_restore: creating FK CONSTRAINT "public.insurancecarrier fkd468aded475355a"
pg_restore: creating FK CONSTRAINT "public.patientvisit fkd527e166593b6c91"
pg_restore: creating FK CONSTRAINT "public.batchpatientmedication fkd65d8f948bafcb8a"
pg_restore: creating FK CONSTRAINT "public.referralsourcetype fkd7e8d992d475355a"
pg_restore: creating FK CONSTRAINT "public.person_region_aud fkde5cfdefdf74e053"
pg_restore: creating FK CONSTRAINT "public.religion fke3393151d475355a"
pg_restore: creating FK CONSTRAINT "public.patientinsurance fke664b575593b6c91"
pg_restore: creating FK CONSTRAINT "public.patientinsurance fke664b5757693bdd2"
pg_restore: creating FK CONSTRAINT "public.patientinsurance fke664b575852ff560"
pg_restore: creating FK CONSTRAINT "public.person_role fke6a16b20f3bc649a"
pg_restore: from TOC entry 7060; 2606 16807626 FK CONSTRAINT person_role fke6a16b20f3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_role
    ADD CONSTRAINT fke6a16b20f3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id) ON DELETE CASCADE;


pg_restore: creating FK CONSTRAINT "public.patientlevelofcare fkea44e207593b6c91"
pg_restore: creating FK CONSTRAINT "public.patientfacility fkeb5aa0a8593b6c91"
pg_restore: creating FK CONSTRAINT "public.patientfacility fkeb5aa0a89c7872bd"
pg_restore: creating FK CONSTRAINT "public.patientinteraction_patientstatus_aud fkef4943b6df74e053"
pg_restore: creating FK CONSTRAINT "public.siteroleassignment fkefa5e72a606ed71a"
pg_restore: creating FK CONSTRAINT "public.adjustmentreason fkey_adjustmentreason_hospice"
pg_restore: creating FK CONSTRAINT "public.bereavementsettings fkey_bereavementsetting_hospice"
pg_restore: creating FK CONSTRAINT "public.bereavementsettings fkey_bereavementsetting_site"
pg_restore: creating FK CONSTRAINT "public.labeltemplate fkey_labeltemplate_site"
pg_restore: creating FK CONSTRAINT "public.lettertemplate fkey_lettertemplate_site"
pg_restore: creating FK CONSTRAINT "public.rolerate fkf3f57a96d475355a"
pg_restore: creating FK CONSTRAINT "public.patientinteraction fkf5aba1edd9bf889a"
pg_restore: from TOC entry 7137; 2606 16806830 FK CONSTRAINT patientinteraction fkf5aba1edd9bf889a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientinteraction
    ADD CONSTRAINT fkf5aba1edd9bf889a FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientinteraction fkf5aba1edf3bc649a"
pg_restore: from TOC entry 7138; 2606 16806670 FK CONSTRAINT patientinteraction fkf5aba1edf3bc649a hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.patientinteraction
    ADD CONSTRAINT fkf5aba1edf3bc649a FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.displayviewfields fkfb3f0000d475355a"
pg_restore: creating FK CONSTRAINT "public.hbrole hbrole_rolegroup_id_fkey"
pg_restore: creating FK CONSTRAINT "public.thirdpartyrolemap hbrole_thirdpartyrolemap_fkey"
pg_restore: creating FK CONSTRAINT "public.thirdpartyrolemap_aud hbrole_thirdpartyrolemap_fkey"
pg_restore: creating FK CONSTRAINT "public.hospice_acl hospice_acl_acl_fk"
pg_restore: creating FK CONSTRAINT "public.hospice_acl_aud hospice_acl_aud_rev_fkey"
pg_restore: creating FK CONSTRAINT "public.hospice_acl hospice_acl_hospice_fk"
pg_restore: creating FK CONSTRAINT "public.insurancecarrier insurancecarrier_hospice_election_def_id_fkey"
pg_restore: creating FK CONSTRAINT "public.insurancecoverage insurancecoverage_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.eligibility_smartformresponse medicareeligibility_smartformrespons_smartformresponses_id_fkey"
pg_restore: creating FK CONSTRAINT "public.medicareintermediaryinfo medicareintermediaryinfo_medicareintermediary_id_fkey"
pg_restore: creating FK CONSTRAINT "public.noa noa_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.clinical_data patient_fk"
pg_restore: from TOC entry 7224; 2606 16806914 FK CONSTRAINT clinical_data patient_fk hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.clinical_data
    ADD CONSTRAINT patient_fk FOREIGN KEY (patient_id) REFERENCES public.patient(id) ON UPDATE CASCADE ON DELETE CASCADE;


pg_restore: creating FK CONSTRAINT "public.patient patient_language_id_fkey"
pg_restore: from TOC entry 7108; 2606 16807654 FK CONSTRAINT patient patient_language_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_language_id_fkey FOREIGN KEY (language_id) REFERENCES public.language(id) ON UPDATE CASCADE;


pg_restore: creating FK CONSTRAINT "public.patient patient_religion_id_fkey"
pg_restore: from TOC entry 7112; 2606 16808492 FK CONSTRAINT patient patient_religion_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_religion_id_fkey FOREIGN KEY (religion_id) REFERENCES public.religion(id) ON UPDATE CASCADE;


pg_restore: creating FK CONSTRAINT "public.patient patient_secondary_language_id_fkey"
pg_restore: from TOC entry 7109; 2606 16807666 FK CONSTRAINT patient patient_secondary_language_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patient
    ADD CONSTRAINT patient_secondary_language_id_fkey FOREIGN KEY (secondary_language_id) REFERENCES public.language(id) ON UPDATE CASCADE;


pg_restore: creating FK CONSTRAINT "public.patientdiagnoses patientdiagnosis_fk"
pg_restore: from TOC entry 7163; 2606 16806898 FK CONSTRAINT patientdiagnoses patientdiagnosis_fk hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientdiagnoses
    ADD CONSTRAINT patientdiagnosis_fk FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientfacility patientfacility_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientfacility patientfacility_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.patientinteraction patientinteraction_role_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientmedication patientmedication_patient_id_fkey"
pg_restore: from TOC entry 7295; 2606 16806888 FK CONSTRAINT patientmedication patientmedication_patient_id_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.patientmedication
    ADD CONSTRAINT patientmedication_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.patientreferral patientreferral_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientreferral patientreferral_referralsourcetype_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientroleassignment patientroleassignment_role_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientstatus patientstatus_dischargereason_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientstatus patientstatus_program_id_fkey"
pg_restore: creating FK CONSTRAINT "public.patientstatus patientstatus_rejectionreason_id_fkey"
pg_restore: creating FK CONSTRAINT "public.passwordverification person_fk"
pg_restore: from TOC entry 7281; 2606 16807814 FK CONSTRAINT passwordverification person_fk hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.passwordverification
    ADD CONSTRAINT person_fk FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.person_programsite person_programsite_personid_fk"
pg_restore: from TOC entry 7166; 2606 16807454 FK CONSTRAINT person_programsite person_programsite_personid_fk hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.person_programsite
    ADD CONSTRAINT person_programsite_personid_fk FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: creating FK CONSTRAINT "public.person_programsite person_programsite_programsiteid_fk"
pg_restore: creating FK CONSTRAINT "public.person_role person_role_role_id_fkey"
pg_restore: creating FK CONSTRAINT "public.person_smartformresponse person_smartformresponse_smartformresponses_id_fkey"
pg_restore: creating FK CONSTRAINT "public.phone_facility phone_facility_facility_id_fkey"
pg_restore: creating FK CONSTRAINT "public.phone_church phone_id_fk"
pg_restore: creating FK CONSTRAINT "public.policy policy_patient_fkey"
pg_restore: from TOC entry 7073; 2606 16807151 FK CONSTRAINT policy policy_patient_fkey hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.patient" does not exist
Command was: ALTER TABLE ONLY public.policy
    ADD CONSTRAINT policy_patient_fkey FOREIGN KEY (patient_id) REFERENCES public.patient(id);


pg_restore: creating FK CONSTRAINT "public.policy policy_patientpersonrelation_fkey"
pg_restore: creating FK CONSTRAINT "public.priorauthorization priorauthorization_policy_fkey"
pg_restore: creating FK CONSTRAINT "public.programsite programsite_program_id_fkey"
pg_restore: creating FK CONSTRAINT "public.remitdetail remitdetail_remit_fkey"
pg_restore: creating FK CONSTRAINT "public.rolerate rolerate_role_id_fkey"
pg_restore: creating FK CONSTRAINT "public.claim scenariotype_fk_key"
pg_restore: creating FK CONSTRAINT "public.office sitePayerType_office_fk"
pg_restore: creating FK CONSTRAINT "public.church site_id_fkey"
pg_restore: creating FK CONSTRAINT "public.sitenotification_email sitenotification_email_sitenotification_id_fkey"
pg_restore: creating FK CONSTRAINT "public.siteroleassignment siteroleassignment_role_id_fkey"
pg_restore: creating FK CONSTRAINT "public.smartformanswer smartformanswer_question_id_fkey"
pg_restore: creating FK CONSTRAINT "public.smartformquestion smartformquestion_parentanswer_id_fkey"
pg_restore: creating FK CONSTRAINT "public.smartformquestion smartformquestion_referringrolegroup_id_fkey"
pg_restore: creating FK CONSTRAINT "public.smartformresponse smartformresponse_answer_id_fkey"
pg_restore: creating FK CONSTRAINT "public.smartformresponse smartformresponse_question_id_fkey"
pg_restore: creating FK CONSTRAINT "public.tabconfig tabconfig_rolegroup_fk"
pg_restore: creating FK CONSTRAINT "public.userpreference userpreference_person_fk"
pg_restore: from TOC entry 7366; 2606 16808429 FK CONSTRAINT userpreference userpreference_person_fk hummingbird
pg_restore: error: could not execute query: ERROR:  relation "public.person" does not exist
Command was: ALTER TABLE ONLY public.userpreference
    ADD CONSTRAINT userpreference_person_fk FOREIGN KEY (person_id) REFERENCES public.person(id);


pg_restore: warning: errors ignored on restore: 147
[1mTraceback[m (most recent call last):
	6: from /usr/local/Cellar/pgsync/0.6.8/libexec/bin/pgsync:23:in `<main>'
	5: from /usr/local/Cellar/pgsync/0.6.8/libexec/bin/pgsync:23:in `load'
	4: from /usr/local/Cellar/pgsync/0.6.8/libexec/gems/pgsync-0.6.8/exe/pgsync:7:in `<top (required)>'
	3: from /usr/local/Cellar/pgsync/0.6.8/libexec/gems/pgsync-0.6.8/lib/pgsync/client.rb:34:in `start'
	2: from /usr/local/Cellar/pgsync/0.6.8/libexec/gems/pgsync-0.6.8/lib/pgsync/client.rb:25:in `perform'
	1: from /usr/local/Cellar/pgsync/0.6.8/libexec/gems/pgsync-0.6.8/lib/pgsync/sync.rb:63:in `perform'
/usr/local/Cellar/pgsync/0.6.8/libexec/gems/pgsync-0.6.8/lib/pgsync/schema_sync.rb:49:in `perform': [1mSchema sync returned non-zero exit code ([1;4mPgSync::Error[m[1m)[m
g.hesla@mumms_ghesla [32m~/dev/shell [91m(main)[00m$ exit

Script done on Thu Jan  6 09:57:16 2022
